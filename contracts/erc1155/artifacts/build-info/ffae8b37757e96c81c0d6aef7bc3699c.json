{
	"id": "ffae8b37757e96c81c0d6aef7bc3699c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.0;\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../erc721/IERC165.sol\";\nimport \"../erc721/Address.sol\";\nimport \"../erc721/Strings.sol\";\n\ncontract ERC1155 is IERC165, IERC1155, IERC1155MetadataURI{\n\n    using Address for address;\n\n    using Strings for uint256;\n\n    //代币种类id到账户account以及余额之间的映射关系\n    mapping (uint256 => mapping (address => uint)) balances;\n\n    //address到授权地址的授权映射关系\n    mapping (address => mapping (address => bool)) operatorApprovals;\n\n\n    function supportsInterface(bytes4 interfaceId) external pure override returns (bool){\n        return interfaceId == type(IERC1155).interfaceId || interfaceId == type(IERC1155MetadataURI).interfaceId || interfaceId == type(IERC165).interfaceId;\n    }\n\n    //实现Metadata接口\n    //bytes和string之间的相互转换    bytes(string)    string(bytes)\n    function uri(uint256 id) public view virtual override returns (string memory){\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, id.toString())) : \"\";\n    }\n\n    function _baseURI() internal view virtual returns (string memory){\n        return \"\";\n    }\n\n    /**\n     * 查询持仓量。但是和ERC721不同的是不仅需要输入查询的账号，还需要币种编号\n     */\n    function balanceOf(address _account, uint256 _id) public view override returns (uint256){\n        require(_account != address(0), \"ERC1155:address zero is not a valid address\");\n        return balances[_id][_account];\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     * 批量查询持仓量\n     */\n    function balanceOfBatch(address[] memory _accounts, uint256[] memory _ids)public view override returns (uint256[] memory){\n        require(_accounts.length == _ids.length, \"ERC1155: accounts and ids length mismatch\");\n        uint256[] memory batchBalances = new uint256[](_accounts.length);\n        for (uint i = 0; i < _accounts.length; i++) {\n            batchBalances[i] = balanceOf(_accounts[i], _ids[i]);\n        }\n        return batchBalances;\n    }\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     * 批量授权，触发ApprovalForAll事件\n     */\n    function setApprovalForAll(address _operator, bool _approved) override public{\n        address owner = msg.sender;\n        require(owner != _operator, \"ERC1155: setting approval status for self\");\n        operatorApprovals[owner][_operator] = _approved;\n        emit ApprovalForAll(owner, _operator, _approved);\n    }\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     * 查询批量授权信息\n     */\n    function isApprovedForAll(address _account, address _operator) public view override returns (bool){\n        return operatorApprovals[_account][_operator];\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     * 单币种安全转账，触发TransferSingle事件。\n     * 注意事项：\n     * 1.to不可以是0地址\n     * 2._from要么是转出方、要么是转出方授权的地址\n     * 3._from必须币种编号_id有至少有_amount代币\n     * 4._to如果是一个合约地址，则必须实现IERC1155Receiver-onERC1155Received\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) override public{\n        //必须是当前转账方调用或者授权给某个合约来进行转账\n        address operator = msg.sender;\n        require(_from == operator || isApprovedForAll(_from, operator), \"ERC1155: caller is not token owner or approved\");\n        require(_to != address(0), \"ERC1155: can not transfer to the zero address\");\n        uint256 fromBalance = balances[_id][_from];\n        require(fromBalance >= _amount, \"ERC1155: insufficient balance for transfer\");\n        //安全检查\n        _safeTransferCheck(operator, _from, _to, _id, _amount, _data);\n        balances[_id][_from] = fromBalance - _amount;\n        balances[_id][_to] += _amount;\n        emit TransferSingle(operator, _from, _to, _id, _amount);\n    }\n\n    function _safeTransferCheck(address _operator, address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) private{\n        if(_to.isContract()){\n            try IERC1155Receiver(_to).onERC1155Received(_operator, _from, _id, _amount, _data) returns (bytes4 result) {\n                if(result != IERC1155Receiver.onERC1155Received.selector){\n                    revert(\"ERC1155:ERC1155Receiver rejected\");\n                }\n            } catch  {\n                revert(\"ERC1155:receiver do not implement ERC1155Receiver\");\n            }\n        }\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * 多币种批量安全转账。触发TransferBatch事件。\n     */\n    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) override public{\n        address operator = msg.sender;\n        require(_from == operator || isApprovedForAll(_from, operator), \"ERC1155: caller is not token owner nor approved\");\n        require(_ids.length == _amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(_to != address(0), \"ERC1155: can not transfer to the zero address\");\n        //安全检查\n        _safeBatchTransferCheck(operator, _from, _to, _ids, _amounts, _data);\n        for (uint i = 0; i < _ids.length; i++) {\n            uint256 id = _ids[i];\n            uint256 amount = _amounts[i];\n            uint256 fromBalance = balances[id][_from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            balances[id][_from] = fromBalance - amount;\n            balances[id][_to] += amount;\n        }\n        emit TransferBatch(operator, _from, _to, _ids, _amounts);\n    }\n\n    function _safeBatchTransferCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) private{\n        if(_to.isContract()){\n           try IERC1155Receiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _amounts, _data) returns (bytes4 result) {\n            if(result != IERC1155Receiver.onERC1155BatchReceived.selector){\n                revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n            }\n           } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer contract\");\n           }\n        }\n    }\n\n    function _mint(address _to, uint256 _id, uint256 _amount, bytes memory _data) internal virtual{\n        require(_to != address(0), \"ERC1155: can not mint to zero address\");\n        address operator = msg.sender;\n        _safeTransferCheck(operator, address(0), _to, _id, _amount, _data);\n        balances[_id][_to] += _amount;\n        emit TransferSingle(operator, address(0), _to, _id, _amount);\n    }\n\n    function _mintBatch(address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) internal virtual{\n        require(_to != address(0), \"ERC1155: can not mint to zero address\");\n        require(_ids.length == _amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        address operator = msg.sender;\n        _safeBatchTransferCheck(operator, address(0), _to, _ids, _amounts, _data);\n        for (uint i = 0; i < _ids.length; i++) {\n            balances[_ids[i]][_to] += _amounts[i];\n        }\n        emit TransferBatch(operator, address(0), _to, _ids, _amounts);\n    }\n\n    function _burn(address _from, uint256 _id, uint256 _amount) internal virtual{\n        require(_from != address(0), \"ERC1155:can not burn from zero address\");\n        address operator = msg.sender;\n        uint256 fromBalance = balances[_id][_from];\n        require(fromBalance >= _amount, \"ERC1155:burn amount exceeds balance\");\n        balances[_id][_from] = fromBalance - _amount;\n        emit TransferSingle(operator, _from, address(0), _id, _amount);\n    }\n\n    function _burnBatch(address _from, uint256[] memory _ids, uint256[] memory _amounts) internal virtual{\n        require(_from != address(0), \"ERC1155:can not burn from zero address\");\n        require(_ids.length == _amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        address operator = msg.sender;\n        for (uint i = 0; i < _ids.length; i++) {\n            uint256 id = _ids[i];\n            uint256 amount = _amounts[i];\n            uint256 fromBalance = balances[id][_from];\n            require(fromBalance >= amount, \"ERC1155:batch burn amount exceeds balance\");\n            balances[id][_from] = fromBalance - amount;\n        }\n        emit TransferBatch(operator, _from, address(0), _ids, _amounts);\n    }\n\n}"
			},
			"erc721/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}"
			},
			"erc721/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}"
			},
			"erc721/IERC165.sol": {
				"content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.0;\ninterface IERC165 {\n    \n    /**\n     * EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？\n     * The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)'));\n     * or using the Selector contract above.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			},
			"erc1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}"
			},
			"erc1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../erc721/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) external returns (bytes4);\n}"
			},
			"erc1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../erc721/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}"
			},
			"erc721/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"erc1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length. 批量查询持仓量"
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}. 查询批量授权信息"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value. 多币种批量安全转账。触发TransferBatch事件。"
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value. 单币种安全转账，触发TransferSingle事件。 注意事项： 1.to不可以是0地址 2._from要么是转出方、要么是转出方授权的地址 3._from必须币种编号_id有至少有_amount代币 4._to如果是一个合约地址，则必须实现IERC1155Receiver-onERC1155Received"
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller. 批量授权，触发ApprovalForAll事件"
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc1155/ERC1155.sol\":277:10008  contract ERC1155 is IERC165, IERC1155, IERC1155MetadataURI{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc1155/ERC1155.sol\":277:10008  contract ERC1155 is IERC165, IERC1155, IERC1155MetadataURI{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc1155/ERC1155.sol\":1473:1696  function balanceOf(address _account, uint256 _id) public view override returns (uint256){... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc1155/ERC1155.sol\":660:909  function supportsInterface(bytes4 interfaceId) external pure override returns (bool){... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc1155/ERC1155.sol\":1018:1244  function uri(uint256 id) public view virtual override returns (string memory){... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc1155/ERC1155.sol\":6138:7174  function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) override public{... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"erc1155/ERC1155.sol\":1924:2380  function balanceOfBatch(address[] memory _accounts, uint256[] memory _ids)public view override returns (uint256[] memory){... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc1155/ERC1155.sol\":2688:3005  function setApprovalForAll(address _operator, bool _approved) override public{... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"erc1155/ERC1155.sol\":3183:3343  function isApprovedForAll(address _account, address _operator) public view override returns (bool){... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc1155/ERC1155.sol\":4247:5094  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) override public{... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"erc1155/ERC1155.sol\":1473:1696  function balanceOf(address _account, uint256 _id) public view override returns (uint256){... */\n    tag_15:\n        /* \"erc1155/ERC1155.sol\":1553:1560  uint256 */\n      0x00\n        /* \"erc1155/ERC1155.sol\":1599:1600  0 */\n      dup1\n        /* \"erc1155/ERC1155.sol\":1579:1601  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":1579:1587  _account */\n      dup4\n        /* \"erc1155/ERC1155.sol\":1579:1601  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc1155/ERC1155.sol\":1571:1649  require(_account != address(0), \"ERC1155:address zero is not a valid address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"erc1155/ERC1155.sol\":1666:1674  balances */\n      0x00\n        /* \"erc1155/ERC1155.sol\":1666:1679  balances[_id] */\n      dup1\n        /* \"erc1155/ERC1155.sol\":1675:1678  _id */\n      dup4\n        /* \"erc1155/ERC1155.sol\":1666:1679  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":1666:1689  balances[_id][_account] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":1680:1688  _account */\n      dup5\n        /* \"erc1155/ERC1155.sol\":1666:1689  balances[_id][_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc1155/ERC1155.sol\":1659:1689  return balances[_id][_account] */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":1473:1696  function balanceOf(address _account, uint256 _id) public view override returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":660:909  function supportsInterface(bytes4 interfaceId) external pure override returns (bool){... */\n    tag_21:\n        /* \"erc1155/ERC1155.sol\":739:743  bool */\n      0x00\n        /* \"erc1155/ERC1155.sol\":776:802  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"erc1155/ERC1155.sol\":761:802  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc1155/ERC1155.sol\":761:772  interfaceId */\n      dup3\n        /* \"erc1155/ERC1155.sol\":761:802  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":761:858  interfaceId == type(IERC1155).interfaceId || interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"erc1155/ERC1155.sol\":821:858  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"erc1155/ERC1155.sol\":806:858  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc1155/ERC1155.sol\":806:817  interfaceId */\n      dup3\n        /* \"erc1155/ERC1155.sol\":806:858  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":761:858  interfaceId == type(IERC1155).interfaceId || interfaceId == type(IERC1155MetadataURI).interfaceId */\n    tag_58:\n        /* \"erc1155/ERC1155.sol\":761:902  interfaceId == type(IERC1155).interfaceId || interfaceId == type(IERC1155MetadataURI).interfaceId || interfaceId == type(IERC165).interfaceId */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"erc1155/ERC1155.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"erc1155/ERC1155.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc1155/ERC1155.sol\":862:873  interfaceId */\n      dup3\n        /* \"erc1155/ERC1155.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":761:902  interfaceId == type(IERC1155).interfaceId || interfaceId == type(IERC1155MetadataURI).interfaceId || interfaceId == type(IERC165).interfaceId */\n    tag_59:\n        /* \"erc1155/ERC1155.sol\":754:902  return interfaceId == type(IERC1155).interfaceId || interfaceId == type(IERC1155MetadataURI).interfaceId || interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":660:909  function supportsInterface(bytes4 interfaceId) external pure override returns (bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":1018:1244  function uri(uint256 id) public view virtual override returns (string memory){... */\n    tag_27:\n        /* \"erc1155/ERC1155.sol\":1081:1094  string memory */\n      0x60\n        /* \"erc1155/ERC1155.sol\":1105:1126  string memory baseURI */\n      0x00\n        /* \"erc1155/ERC1155.sol\":1129:1139  _baseURI() */\n      tag_61\n        /* \"erc1155/ERC1155.sol\":1129:1137  _baseURI */\n      tag_62\n        /* \"erc1155/ERC1155.sol\":1129:1139  _baseURI() */\n      jump\t// in\n    tag_61:\n        /* \"erc1155/ERC1155.sol\":1105:1139  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":1180:1181  0 */\n      0x00\n        /* \"erc1155/ERC1155.sol\":1162:1169  baseURI */\n      dup2\n        /* \"erc1155/ERC1155.sol\":1156:1177  bytes(baseURI).length */\n      mload\n        /* \"erc1155/ERC1155.sol\":1156:1181  bytes(baseURI).length > 0 */\n      gt\n        /* \"erc1155/ERC1155.sol\":1156:1237  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, id.toString())) : \"\" */\n      tag_63\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_64)\n    tag_63:\n        /* \"erc1155/ERC1155.sol\":1208:1215  baseURI */\n      dup1\n        /* \"erc1155/ERC1155.sol\":1217:1230  id.toString() */\n      tag_65\n        /* \"erc1155/ERC1155.sol\":1217:1219  id */\n      dup5\n        /* \"erc1155/ERC1155.sol\":1217:1228  id.toString */\n      tag_66\n        /* \"erc1155/ERC1155.sol\":1217:1230  id.toString() */\n      jump\t// in\n    tag_65:\n        /* \"erc1155/ERC1155.sol\":1191:1231  abi.encodePacked(baseURI, id.toString()) */\n      add(0x20, mload(0x40))\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc1155/ERC1155.sol\":1156:1237  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, id.toString())) : \"\" */\n    tag_64:\n        /* \"erc1155/ERC1155.sol\":1149:1237  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, id.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":1018:1244  function uri(uint256 id) public view virtual override returns (string memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":6138:7174  function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) override public{... */\n    tag_33:\n        /* \"erc1155/ERC1155.sol\":6292:6308  address operator */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6311:6321  msg.sender */\n      caller\n        /* \"erc1155/ERC1155.sol\":6292:6321  address operator = msg.sender */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":6348:6356  operator */\n      dup1\n        /* \"erc1155/ERC1155.sol\":6339:6356  _from == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":6339:6344  _from */\n      dup7\n        /* \"erc1155/ERC1155.sol\":6339:6356  _from == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":6339:6393  _from == operator || isApprovedForAll(_from, operator) */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"erc1155/ERC1155.sol\":6360:6393  isApprovedForAll(_from, operator) */\n      tag_71\n        /* \"erc1155/ERC1155.sol\":6377:6382  _from */\n      dup7\n        /* \"erc1155/ERC1155.sol\":6384:6392  operator */\n      dup3\n        /* \"erc1155/ERC1155.sol\":6360:6376  isApprovedForAll */\n      tag_47\n        /* \"erc1155/ERC1155.sol\":6360:6393  isApprovedForAll(_from, operator) */\n      jump\t// in\n    tag_71:\n        /* \"erc1155/ERC1155.sol\":6339:6393  _from == operator || isApprovedForAll(_from, operator) */\n    tag_70:\n        /* \"erc1155/ERC1155.sol\":6331:6445  require(_from == operator || isApprovedForAll(_from, operator), \"ERC1155: caller is not token owner nor approved\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"erc1155/ERC1155.sol\":6478:6486  _amounts */\n      dup3\n        /* \"erc1155/ERC1155.sol\":6478:6493  _amounts.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":6463:6467  _ids */\n      dup5\n        /* \"erc1155/ERC1155.sol\":6463:6474  _ids.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":6463:6493  _ids.length == _amounts.length */\n      eq\n        /* \"erc1155/ERC1155.sol\":6455:6538  require(_ids.length == _amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"erc1155/ERC1155.sol\":6571:6572  0 */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6556:6573  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":6556:6559  _to */\n      dup6\n        /* \"erc1155/ERC1155.sol\":6556:6573  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc1155/ERC1155.sol\":6548:6623  require(_to != address(0), \"ERC1155: can not transfer to the zero address\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"erc1155/ERC1155.sol\":6656:6724  _safeBatchTransferCheck(operator, _from, _to, _ids, _amounts, _data) */\n      tag_81\n        /* \"erc1155/ERC1155.sol\":6680:6688  operator */\n      dup2\n        /* \"erc1155/ERC1155.sol\":6690:6695  _from */\n      dup8\n        /* \"erc1155/ERC1155.sol\":6697:6700  _to */\n      dup8\n        /* \"erc1155/ERC1155.sol\":6702:6706  _ids */\n      dup8\n        /* \"erc1155/ERC1155.sol\":6708:6716  _amounts */\n      dup8\n        /* \"erc1155/ERC1155.sol\":6718:6723  _data */\n      dup8\n        /* \"erc1155/ERC1155.sol\":6656:6679  _safeBatchTransferCheck */\n      tag_82\n        /* \"erc1155/ERC1155.sol\":6656:6724  _safeBatchTransferCheck(operator, _from, _to, _ids, _amounts, _data) */\n      jump\t// in\n    tag_81:\n        /* \"erc1155/ERC1155.sol\":6739:6745  uint i */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6734:7102  for (uint i = 0; i < _ids.length; i++) {... */\n    tag_83:\n        /* \"erc1155/ERC1155.sol\":6755:6759  _ids */\n      dup5\n        /* \"erc1155/ERC1155.sol\":6755:6766  _ids.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":6751:6752  i */\n      dup2\n        /* \"erc1155/ERC1155.sol\":6751:6766  i < _ids.length */\n      lt\n        /* \"erc1155/ERC1155.sol\":6734:7102  for (uint i = 0; i < _ids.length; i++) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"erc1155/ERC1155.sol\":6787:6797  uint256 id */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6800:6804  _ids */\n      dup6\n        /* \"erc1155/ERC1155.sol\":6805:6806  i */\n      dup3\n        /* \"erc1155/ERC1155.sol\":6800:6807  _ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_86\n      jumpi\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n    tag_86:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc1155/ERC1155.sol\":6787:6807  uint256 id = _ids[i] */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":6821:6835  uint256 amount */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6838:6846  _amounts */\n      dup6\n        /* \"erc1155/ERC1155.sol\":6847:6848  i */\n      dup4\n        /* \"erc1155/ERC1155.sol\":6838:6849  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_89\n      jumpi\n      tag_90\n      tag_88\n      jump\t// in\n    tag_90:\n    tag_89:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc1155/ERC1155.sol\":6821:6849  uint256 amount = _amounts[i] */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":6863:6882  uint256 fromBalance */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6885:6893  balances */\n      dup1\n        /* \"erc1155/ERC1155.sol\":6885:6897  balances[id] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6894:6896  id */\n      dup5\n        /* \"erc1155/ERC1155.sol\":6885:6897  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":6885:6904  balances[id][_from] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":6898:6903  _from */\n      dup12\n        /* \"erc1155/ERC1155.sol\":6885:6904  balances[id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc1155/ERC1155.sol\":6863:6904  uint256 fromBalance = balances[id][_from] */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":6941:6947  amount */\n      dup2\n        /* \"erc1155/ERC1155.sol\":6926:6937  fromBalance */\n      dup2\n        /* \"erc1155/ERC1155.sol\":6926:6947  fromBalance >= amount */\n      lt\n      iszero\n        /* \"erc1155/ERC1155.sol\":6918:6994  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"erc1155/ERC1155.sol\":7044:7050  amount */\n      dup2\n        /* \"erc1155/ERC1155.sol\":7030:7041  fromBalance */\n      dup2\n        /* \"erc1155/ERC1155.sol\":7030:7050  fromBalance - amount */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"erc1155/ERC1155.sol\":7008:7016  balances */\n      0x00\n        /* \"erc1155/ERC1155.sol\":7008:7020  balances[id] */\n      dup1\n        /* \"erc1155/ERC1155.sol\":7017:7019  id */\n      dup6\n        /* \"erc1155/ERC1155.sol\":7008:7020  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":7008:7027  balances[id][_from] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":7021:7026  _from */\n      dup13\n        /* \"erc1155/ERC1155.sol\":7008:7027  balances[id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":7008:7050  balances[id][_from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc1155/ERC1155.sol\":7085:7091  amount */\n      dup2\n        /* \"erc1155/ERC1155.sol\":7064:7072  balances */\n      0x00\n        /* \"erc1155/ERC1155.sol\":7064:7076  balances[id] */\n      dup1\n        /* \"erc1155/ERC1155.sol\":7073:7075  id */\n      dup6\n        /* \"erc1155/ERC1155.sol\":7064:7076  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":7064:7081  balances[id][_to] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":7077:7080  _to */\n      dup12\n        /* \"erc1155/ERC1155.sol\":7064:7081  balances[id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc1155/ERC1155.sol\":7064:7091  balances[id][_to] += amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc1155/ERC1155.sol\":6773:7102  {... */\n      pop\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":6768:6771  i++ */\n      dup1\n      dup1\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      swap2\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":6734:7102  for (uint i = 0; i < _ids.length; i++) {... */\n      jump(tag_83)\n    tag_84:\n      pop\n        /* \"erc1155/ERC1155.sol\":7147:7150  _to */\n      dup5\n        /* \"erc1155/ERC1155.sol\":7116:7167  TransferBatch(operator, _from, _to, _ids, _amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":7140:7145  _from */\n      dup7\n        /* \"erc1155/ERC1155.sol\":7116:7167  TransferBatch(operator, _from, _to, _ids, _amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":7130:7138  operator */\n      dup3\n        /* \"erc1155/ERC1155.sol\":7116:7167  TransferBatch(operator, _from, _to, _ids, _amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"erc1155/ERC1155.sol\":7152:7156  _ids */\n      dup8\n        /* \"erc1155/ERC1155.sol\":7158:7166  _amounts */\n      dup8\n        /* \"erc1155/ERC1155.sol\":7116:7167  TransferBatch(operator, _from, _to, _ids, _amounts) */\n      mload(0x40)\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc1155/ERC1155.sol\":6282:7174  {... */\n      pop\n        /* \"erc1155/ERC1155.sol\":6138:7174  function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) override public{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":1924:2380  function balanceOfBatch(address[] memory _accounts, uint256[] memory _ids)public view override returns (uint256[] memory){... */\n    tag_37:\n        /* \"erc1155/ERC1155.sol\":2028:2044  uint256[] memory */\n      0x60\n        /* \"erc1155/ERC1155.sol\":2083:2087  _ids */\n      dup2\n        /* \"erc1155/ERC1155.sol\":2083:2094  _ids.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":2063:2072  _accounts */\n      dup4\n        /* \"erc1155/ERC1155.sol\":2063:2079  _accounts.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":2063:2094  _accounts.length == _ids.length */\n      eq\n        /* \"erc1155/ERC1155.sol\":2055:2140  require(_accounts.length == _ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"erc1155/ERC1155.sol\":2150:2180  uint256[] memory batchBalances */\n      0x00\n        /* \"erc1155/ERC1155.sol\":2197:2206  _accounts */\n      dup4\n        /* \"erc1155/ERC1155.sol\":2197:2213  _accounts.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":2183:2214  new uint256[](_accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_109:\n      pop\n        /* \"erc1155/ERC1155.sol\":2150:2214  uint256[] memory batchBalances = new uint256[](_accounts.length) */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":2229:2235  uint i */\n      0x00\n        /* \"erc1155/ERC1155.sol\":2224:2344  for (uint i = 0; i < _accounts.length; i++) {... */\n    tag_110:\n        /* \"erc1155/ERC1155.sol\":2245:2254  _accounts */\n      dup5\n        /* \"erc1155/ERC1155.sol\":2245:2261  _accounts.length */\n      mload\n        /* \"erc1155/ERC1155.sol\":2241:2242  i */\n      dup2\n        /* \"erc1155/ERC1155.sol\":2241:2261  i < _accounts.length */\n      lt\n        /* \"erc1155/ERC1155.sol\":2224:2344  for (uint i = 0; i < _accounts.length; i++) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"erc1155/ERC1155.sol\":2301:2333  balanceOf(_accounts[i], _ids[i]) */\n      tag_113\n        /* \"erc1155/ERC1155.sol\":2311:2320  _accounts */\n      dup6\n        /* \"erc1155/ERC1155.sol\":2321:2322  i */\n      dup3\n        /* \"erc1155/ERC1155.sol\":2311:2323  _accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_115\n      tag_88\n      jump\t// in\n    tag_115:\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc1155/ERC1155.sol\":2325:2329  _ids */\n      dup6\n        /* \"erc1155/ERC1155.sol\":2330:2331  i */\n      dup4\n        /* \"erc1155/ERC1155.sol\":2325:2332  _ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_88\n      jump\t// in\n    tag_117:\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc1155/ERC1155.sol\":2301:2310  balanceOf */\n      tag_15\n        /* \"erc1155/ERC1155.sol\":2301:2333  balanceOf(_accounts[i], _ids[i]) */\n      jump\t// in\n    tag_113:\n        /* \"erc1155/ERC1155.sol\":2282:2295  batchBalances */\n      dup3\n        /* \"erc1155/ERC1155.sol\":2296:2297  i */\n      dup3\n        /* \"erc1155/ERC1155.sol\":2282:2298  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_119\n      tag_88\n      jump\t// in\n    tag_119:\n    tag_118:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"erc1155/ERC1155.sol\":2282:2333  batchBalances[i] = balanceOf(_accounts[i], _ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":2263:2266  i++ */\n      dup1\n      dup1\n      tag_120\n      swap1\n      tag_99\n      jump\t// in\n    tag_120:\n      swap2\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":2224:2344  for (uint i = 0; i < _accounts.length; i++) {... */\n      jump(tag_110)\n    tag_111:\n      pop\n        /* \"erc1155/ERC1155.sol\":2360:2373  batchBalances */\n      dup1\n        /* \"erc1155/ERC1155.sol\":2353:2373  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":1924:2380  function balanceOfBatch(address[] memory _accounts, uint256[] memory _ids)public view override returns (uint256[] memory){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":2688:3005  function setApprovalForAll(address _operator, bool _approved) override public{... */\n    tag_43:\n        /* \"erc1155/ERC1155.sol\":2775:2788  address owner */\n      0x00\n        /* \"erc1155/ERC1155.sol\":2791:2801  msg.sender */\n      caller\n        /* \"erc1155/ERC1155.sol\":2775:2801  address owner = msg.sender */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":2828:2837  _operator */\n      dup3\n        /* \"erc1155/ERC1155.sol\":2819:2837  owner != _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":2819:2824  owner */\n      dup2\n        /* \"erc1155/ERC1155.sol\":2819:2837  owner != _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc1155/ERC1155.sol\":2811:2883  require(owner != _operator, \"ERC1155: setting approval status for self\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"erc1155/ERC1155.sol\":2931:2940  _approved */\n      dup2\n        /* \"erc1155/ERC1155.sol\":2893:2910  operatorApprovals */\n      0x01\n        /* \"erc1155/ERC1155.sol\":2893:2917  operatorApprovals[owner] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":2911:2916  owner */\n      dup4\n        /* \"erc1155/ERC1155.sol\":2893:2917  operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":2893:2928  operatorApprovals[owner][_operator] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":2918:2927  _operator */\n      dup6\n        /* \"erc1155/ERC1155.sol\":2893:2928  operatorApprovals[owner][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc1155/ERC1155.sol\":2893:2940  operatorApprovals[owner][_operator] = _approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc1155/ERC1155.sol\":2977:2986  _operator */\n      dup3\n        /* \"erc1155/ERC1155.sol\":2955:2998  ApprovalForAll(owner, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":2970:2975  owner */\n      dup2\n        /* \"erc1155/ERC1155.sol\":2955:2998  ApprovalForAll(owner, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"erc1155/ERC1155.sol\":2988:2997  _approved */\n      dup5\n        /* \"erc1155/ERC1155.sol\":2955:2998  ApprovalForAll(owner, _operator, _approved) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc1155/ERC1155.sol\":2765:3005  {... */\n      pop\n        /* \"erc1155/ERC1155.sol\":2688:3005  function setApprovalForAll(address _operator, bool _approved) override public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":3183:3343  function isApprovedForAll(address _account, address _operator) public view override returns (bool){... */\n    tag_47:\n        /* \"erc1155/ERC1155.sol\":3276:3280  bool */\n      0x00\n        /* \"erc1155/ERC1155.sol\":3298:3315  operatorApprovals */\n      0x01\n        /* \"erc1155/ERC1155.sol\":3298:3325  operatorApprovals[_account] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":3316:3324  _account */\n      dup5\n        /* \"erc1155/ERC1155.sol\":3298:3325  operatorApprovals[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":3298:3336  operatorApprovals[_account][_operator] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":3326:3335  _operator */\n      dup4\n        /* \"erc1155/ERC1155.sol\":3298:3336  operatorApprovals[_account][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc1155/ERC1155.sol\":3291:3336  return operatorApprovals[_account][_operator] */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":3183:3343  function isApprovedForAll(address _account, address _operator) public view override returns (bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":4247:5094  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) override public{... */\n    tag_52:\n        /* \"erc1155/ERC1155.sol\":4459:4475  address operator */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4478:4488  msg.sender */\n      caller\n        /* \"erc1155/ERC1155.sol\":4459:4488  address operator = msg.sender */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":4515:4523  operator */\n      dup1\n        /* \"erc1155/ERC1155.sol\":4506:4523  _from == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":4506:4511  _from */\n      dup7\n        /* \"erc1155/ERC1155.sol\":4506:4523  _from == operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":4506:4560  _from == operator || isApprovedForAll(_from, operator) */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"erc1155/ERC1155.sol\":4527:4560  isApprovedForAll(_from, operator) */\n      tag_129\n        /* \"erc1155/ERC1155.sol\":4544:4549  _from */\n      dup7\n        /* \"erc1155/ERC1155.sol\":4551:4559  operator */\n      dup3\n        /* \"erc1155/ERC1155.sol\":4527:4543  isApprovedForAll */\n      tag_47\n        /* \"erc1155/ERC1155.sol\":4527:4560  isApprovedForAll(_from, operator) */\n      jump\t// in\n    tag_129:\n        /* \"erc1155/ERC1155.sol\":4506:4560  _from == operator || isApprovedForAll(_from, operator) */\n    tag_128:\n        /* \"erc1155/ERC1155.sol\":4498:4611  require(_from == operator || isApprovedForAll(_from, operator), \"ERC1155: caller is not token owner or approved\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"erc1155/ERC1155.sol\":4644:4645  0 */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4629:4646  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":4629:4632  _to */\n      dup6\n        /* \"erc1155/ERC1155.sol\":4629:4646  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc1155/ERC1155.sol\":4621:4696  require(_to != address(0), \"ERC1155: can not transfer to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_80\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"erc1155/ERC1155.sol\":4706:4725  uint256 fromBalance */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4728:4736  balances */\n      dup1\n        /* \"erc1155/ERC1155.sol\":4728:4741  balances[_id] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4737:4740  _id */\n      dup7\n        /* \"erc1155/ERC1155.sol\":4728:4741  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":4728:4748  balances[_id][_from] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4742:4747  _from */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4728:4748  balances[_id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc1155/ERC1155.sol\":4706:4748  uint256 fromBalance = balances[_id][_from] */\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":4781:4788  _amount */\n      dup4\n        /* \"erc1155/ERC1155.sol\":4766:4777  fromBalance */\n      dup2\n        /* \"erc1155/ERC1155.sol\":4766:4788  fromBalance >= _amount */\n      lt\n      iszero\n        /* \"erc1155/ERC1155.sol\":4758:4835  require(fromBalance >= _amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_93\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"erc1155/ERC1155.sol\":4868:4929  _safeTransferCheck(operator, _from, _to, _id, _amount, _data) */\n      tag_137\n        /* \"erc1155/ERC1155.sol\":4887:4895  operator */\n      dup3\n        /* \"erc1155/ERC1155.sol\":4897:4902  _from */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4904:4907  _to */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4909:4912  _id */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4914:4921  _amount */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4923:4928  _data */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4868:4886  _safeTransferCheck */\n      tag_138\n        /* \"erc1155/ERC1155.sol\":4868:4929  _safeTransferCheck(operator, _from, _to, _id, _amount, _data) */\n      jump\t// in\n    tag_137:\n        /* \"erc1155/ERC1155.sol\":4976:4983  _amount */\n      dup4\n        /* \"erc1155/ERC1155.sol\":4962:4973  fromBalance */\n      dup2\n        /* \"erc1155/ERC1155.sol\":4962:4983  fromBalance - _amount */\n      tag_139\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_139:\n        /* \"erc1155/ERC1155.sol\":4939:4947  balances */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4939:4952  balances[_id] */\n      dup1\n        /* \"erc1155/ERC1155.sol\":4948:4951  _id */\n      dup8\n        /* \"erc1155/ERC1155.sol\":4939:4952  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":4939:4959  balances[_id][_from] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4953:4958  _from */\n      dup10\n        /* \"erc1155/ERC1155.sol\":4939:4959  balances[_id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":4939:4983  balances[_id][_from] = fromBalance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc1155/ERC1155.sol\":5015:5022  _amount */\n      dup4\n        /* \"erc1155/ERC1155.sol\":4993:5001  balances */\n      0x00\n        /* \"erc1155/ERC1155.sol\":4993:5006  balances[_id] */\n      dup1\n        /* \"erc1155/ERC1155.sol\":5002:5005  _id */\n      dup8\n        /* \"erc1155/ERC1155.sol\":4993:5006  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc1155/ERC1155.sol\":4993:5011  balances[_id][_to] */\n      0x00\n        /* \"erc1155/ERC1155.sol\":5007:5010  _to */\n      dup9\n        /* \"erc1155/ERC1155.sol\":4993:5011  balances[_id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc1155/ERC1155.sol\":4993:5022  balances[_id][_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_140\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc1155/ERC1155.sol\":5069:5072  _to */\n      dup6\n        /* \"erc1155/ERC1155.sol\":5037:5087  TransferSingle(operator, _from, _to, _id, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":5062:5067  _from */\n      dup8\n        /* \"erc1155/ERC1155.sol\":5037:5087  TransferSingle(operator, _from, _to, _id, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc1155/ERC1155.sol\":5052:5060  operator */\n      dup4\n        /* \"erc1155/ERC1155.sol\":5037:5087  TransferSingle(operator, _from, _to, _id, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"erc1155/ERC1155.sol\":5074:5077  _id */\n      dup9\n        /* \"erc1155/ERC1155.sol\":5079:5086  _amount */\n      dup9\n        /* \"erc1155/ERC1155.sol\":5037:5087  TransferSingle(operator, _from, _to, _id, _amount) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc1155/ERC1155.sol\":4366:5094  {... */\n      pop\n      pop\n        /* \"erc1155/ERC1155.sol\":4247:5094  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) override public{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":1250:1341  function _baseURI() internal view virtual returns (string memory){... */\n    tag_62:\n        /* \"erc1155/ERC1155.sol\":1301:1314  string memory */\n      0x60\n        /* \"erc1155/ERC1155.sol\":1325:1334  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"erc1155/ERC1155.sol\":1250:1341  function _baseURI() internal view virtual returns (string memory){... */\n      swap1\n      jump\t// out\n        /* \"erc721/Strings.sol\":410:1106  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_66:\n        /* \"erc721/Strings.sol\":466:479  string memory */\n      0x60\n        /* \"erc721/Strings.sol\":515:529  uint256 length */\n      0x00\n        /* \"erc721/Strings.sol\":552:553  1 */\n      0x01\n        /* \"erc721/Strings.sol\":532:549  Math.log10(value) */\n      tag_145\n        /* \"erc721/Strings.sol\":543:548  value */\n      dup5\n        /* \"erc721/Strings.sol\":532:542  Math.log10 */\n      tag_146\n        /* \"erc721/Strings.sol\":532:549  Math.log10(value) */\n      jump\t// in\n    tag_145:\n        /* \"erc721/Strings.sol\":532:553  Math.log10(value) + 1 */\n      add\n        /* \"erc721/Strings.sol\":515:553  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"erc721/Strings.sol\":567:587  string memory buffer */\n      0x00\n        /* \"erc721/Strings.sol\":601:607  length */\n      dup2\n        /* \"erc721/Strings.sol\":590:608  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_108\n      jump\t// in\n    tag_148:\n    tag_147:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_149:\n      pop\n        /* \"erc721/Strings.sol\":567:608  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"erc721/Strings.sol\":622:633  uint256 ptr */\n      0x00\n        /* \"erc721/Strings.sol\":748:754  length */\n      dup3\n        /* \"erc721/Strings.sol\":744:746  32 */\n      0x20\n        /* \"erc721/Strings.sol\":740:755  add(32, length) */\n      add\n        /* \"erc721/Strings.sol\":732:738  buffer */\n      dup3\n        /* \"erc721/Strings.sol\":728:756  add(buffer, add(32, length)) */\n      add\n        /* \"erc721/Strings.sol\":721:756  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"erc721/Strings.sol\":783:1063  while (true) {... */\n    tag_150:\n        /* \"erc721/Strings.sol\":790:794  true */\n      0x01\n        /* \"erc721/Strings.sol\":783:1063  while (true) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"erc721/Strings.sol\":814:819  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"erc721/Strings.sol\":953:961  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"erc721/Strings.sol\":948:950  10 */\n      0x0a\n        /* \"erc721/Strings.sol\":941:946  value */\n      dup7\n        /* \"erc721/Strings.sol\":937:951  mod(value, 10) */\n      mod\n        /* \"erc721/Strings.sol\":932:962  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"erc721/Strings.sol\":927:930  ptr */\n      dup2\n        /* \"erc721/Strings.sol\":919:963  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"erc721/Strings.sol\":1007:1009  10 */\n      0x0a\n        /* \"erc721/Strings.sol\":998:1009  value /= 10 */\n      dup6\n      dup2\n      tag_152\n      jumpi\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n    tag_152:\n      div\n      swap5\n      pop\n        /* \"erc721/Strings.sol\":1040:1041  0 */\n      0x00\n        /* \"erc721/Strings.sol\":1031:1036  value */\n      dup6\n        /* \"erc721/Strings.sol\":1031:1041  value == 0 */\n      eq\n        /* \"erc721/Strings.sol\":1027:1048  if (value == 0) break */\n      iszero\n      tag_155\n      jumpi\n        /* \"erc721/Strings.sol\":1043:1048  break */\n      jump(tag_151)\n        /* \"erc721/Strings.sol\":1027:1048  if (value == 0) break */\n    tag_155:\n        /* \"erc721/Strings.sol\":783:1063  while (true) {... */\n      jump(tag_150)\n    tag_151:\n        /* \"erc721/Strings.sol\":1083:1089  buffer */\n      dup2\n        /* \"erc721/Strings.sol\":1076:1089  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"erc721/Strings.sol\":410:1106  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":7180:7792  function _safeBatchTransferCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) private{... */\n    tag_82:\n        /* \"erc1155/ERC1155.sol\":7350:7366  _to.isContract() */\n      tag_157\n        /* \"erc1155/ERC1155.sol\":7350:7353  _to */\n      dup5\n        /* \"erc1155/ERC1155.sol\":7350:7364  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n        /* \"erc1155/ERC1155.sol\":7350:7366  _to.isContract() */\n      jump\t// in\n    tag_157:\n        /* \"erc1155/ERC1155.sol\":7347:7786  if(_to.isContract()){... */\n      iszero\n      tag_159\n      jumpi\n        /* \"erc1155/ERC1155.sol\":7401:7404  _to */\n      dup4\n        /* \"erc1155/ERC1155.sol\":7384:7428  IERC1155Receiver(_to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"erc1155/ERC1155.sol\":7429:7438  _operator */\n      dup8\n        /* \"erc1155/ERC1155.sol\":7440:7445  _from */\n      dup8\n        /* \"erc1155/ERC1155.sol\":7447:7451  _ids */\n      dup7\n        /* \"erc1155/ERC1155.sol\":7453:7461  _amounts */\n      dup7\n        /* \"erc1155/ERC1155.sol\":7463:7468  _data */\n      dup7\n        /* \"erc1155/ERC1155.sol\":7384:7469  IERC1155Receiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _amounts, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_163\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      0x01\n    tag_163:\n        /* \"erc1155/ERC1155.sol\":7380:7776  try IERC1155Receiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _amounts, _data) returns (bytes4 result) {... */\n      tag_166\n      jumpi\n        /* \"erc1155/ERC1155.sol\":7691:7762  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer contract\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc1155/ERC1155.sol\":7380:7776  try IERC1155Receiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _amounts, _data) returns (bytes4 result) {... */\n    tag_166:\n        /* \"erc1155/ERC1155.sol\":7521:7569  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"erc1155/ERC1155.sol\":7511:7569  result != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc1155/ERC1155.sol\":7511:7517  result */\n      dup2\n        /* \"erc1155/ERC1155.sol\":7511:7569  result != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":7508:7653  if(result != IERC1155Receiver.onERC1155BatchReceived.selector){... */\n      tag_173\n      jumpi\n        /* \"erc1155/ERC1155.sol\":7588:7638  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc1155/ERC1155.sol\":7508:7653  if(result != IERC1155Receiver.onERC1155BatchReceived.selector){... */\n    tag_173:\n        /* \"erc1155/ERC1155.sol\":7470:7666  returns (bytes4 result) {... */\n      pop\n        /* \"erc1155/ERC1155.sol\":7347:7786  if(_to.isContract()){... */\n    tag_159:\n        /* \"erc1155/ERC1155.sol\":7180:7792  function _safeBatchTransferCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data) private{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc1155/ERC1155.sol\":5100:5671  function _safeTransferCheck(address _operator, address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) private{... */\n    tag_138:\n        /* \"erc1155/ERC1155.sol\":5245:5261  _to.isContract() */\n      tag_177\n        /* \"erc1155/ERC1155.sol\":5245:5248  _to */\n      dup5\n        /* \"erc1155/ERC1155.sol\":5245:5259  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n        /* \"erc1155/ERC1155.sol\":5245:5261  _to.isContract() */\n      jump\t// in\n    tag_177:\n        /* \"erc1155/ERC1155.sol\":5242:5665  if(_to.isContract()){... */\n      iszero\n      tag_178\n      jumpi\n        /* \"erc1155/ERC1155.sol\":5297:5300  _to */\n      dup4\n        /* \"erc1155/ERC1155.sol\":5280:5319  IERC1155Receiver(_to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"erc1155/ERC1155.sol\":5320:5329  _operator */\n      dup8\n        /* \"erc1155/ERC1155.sol\":5331:5336  _from */\n      dup8\n        /* \"erc1155/ERC1155.sol\":5338:5341  _id */\n      dup7\n        /* \"erc1155/ERC1155.sol\":5343:5350  _amount */\n      dup7\n        /* \"erc1155/ERC1155.sol\":5352:5357  _data */\n      dup7\n        /* \"erc1155/ERC1155.sol\":5280:5358  IERC1155Receiver(_to).onERC1155Received(_operator, _from, _id, _amount, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_182\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_183:\n      0x01\n    tag_182:\n        /* \"erc1155/ERC1155.sol\":5276:5655  try IERC1155Receiver(_to).onERC1155Received(_operator, _from, _id, _amount, _data) returns (bytes4 result) {... */\n      tag_184\n      jumpi\n        /* \"erc1155/ERC1155.sol\":5581:5640  revert(\"ERC1155:receiver do not implement ERC1155Receiver\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc1155/ERC1155.sol\":5276:5655  try IERC1155Receiver(_to).onERC1155Received(_operator, _from, _id, _amount, _data) returns (bytes4 result) {... */\n    tag_184:\n        /* \"erc1155/ERC1155.sol\":5414:5457  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"erc1155/ERC1155.sol\":5404:5457  result != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc1155/ERC1155.sol\":5404:5410  result */\n      dup2\n        /* \"erc1155/ERC1155.sol\":5404:5457  result != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc1155/ERC1155.sol\":5401:5541  if(result != IERC1155Receiver.onERC1155Received.selector){... */\n      tag_191\n      jumpi\n        /* \"erc1155/ERC1155.sol\":5480:5522  revert(\"ERC1155:ERC1155Receiver rejected\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc1155/ERC1155.sol\":5401:5541  if(result != IERC1155Receiver.onERC1155Received.selector){... */\n    tag_191:\n        /* \"erc1155/ERC1155.sol\":5359:5555  returns (bytes4 result) {... */\n      pop\n        /* \"erc1155/ERC1155.sol\":5242:5665  if(_to.isContract()){... */\n    tag_178:\n        /* \"erc1155/ERC1155.sol\":5100:5671  function _safeTransferCheck(address _operator, address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data) private{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_146:\n        /* \"erc721/Math.sol\":9942:9949  uint256 */\n      0x00\n        /* \"erc721/Math.sol\":9961:9975  uint256 result */\n      dup1\n        /* \"erc721/Math.sol\":9978:9979  0 */\n      0x00\n        /* \"erc721/Math.sol\":9961:9979  uint256 result = 0 */\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10026:10032  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"erc721/Math.sol\":10017:10022  value */\n      dup4\n        /* \"erc721/Math.sol\":10017:10032  value >= 10**64 */\n      lt\n        /* \"erc721/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_195\n      jumpi\n        /* \"erc721/Math.sol\":10061:10067  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"erc721/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      dup2\n      tag_196\n      jumpi\n      tag_197\n      tag_154\n      jump\t// in\n    tag_197:\n    tag_196:\n      div\n      swap3\n      pop\n        /* \"erc721/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"erc721/Math.sol\":10085:10097  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_195:\n        /* \"erc721/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"erc721/Math.sol\":10129:10134  value */\n      dup4\n        /* \"erc721/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"erc721/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_198\n      jumpi\n        /* \"erc721/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"erc721/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      dup2\n      tag_199\n      jumpi\n      tag_200\n      tag_154\n      jump\t// in\n    tag_200:\n    tag_199:\n      div\n      swap3\n      pop\n        /* \"erc721/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"erc721/Math.sol\":10197:10209  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_198:\n        /* \"erc721/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"erc721/Math.sol\":10241:10246  value */\n      dup4\n        /* \"erc721/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"erc721/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_201\n      jumpi\n        /* \"erc721/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"erc721/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      dup2\n      tag_202\n      jumpi\n      tag_203\n      tag_154\n      jump\t// in\n    tag_203:\n    tag_202:\n      div\n      swap3\n      pop\n        /* \"erc721/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"erc721/Math.sol\":10309:10321  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_201:\n        /* \"erc721/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"erc721/Math.sol\":10353:10358  value */\n      dup4\n        /* \"erc721/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"erc721/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_204\n      jumpi\n        /* \"erc721/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"erc721/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      dup2\n      tag_205\n      jumpi\n      tag_206\n      tag_154\n      jump\t// in\n    tag_206:\n    tag_205:\n      div\n      swap3\n      pop\n        /* \"erc721/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"erc721/Math.sol\":10419:10430  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_204:\n        /* \"erc721/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"erc721/Math.sol\":10462:10467  value */\n      dup4\n        /* \"erc721/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"erc721/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_207\n      jumpi\n        /* \"erc721/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"erc721/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      dup2\n      tag_208\n      jumpi\n      tag_209\n      tag_154\n      jump\t// in\n    tag_209:\n    tag_208:\n      div\n      swap3\n      pop\n        /* \"erc721/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"erc721/Math.sol\":10528:10539  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_207:\n        /* \"erc721/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"erc721/Math.sol\":10571:10576  value */\n      dup4\n        /* \"erc721/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"erc721/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_210\n      jumpi\n        /* \"erc721/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"erc721/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      dup2\n      tag_211\n      jumpi\n      tag_212\n      tag_154\n      jump\t// in\n    tag_212:\n    tag_211:\n      div\n      swap3\n      pop\n        /* \"erc721/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"erc721/Math.sol\":10637:10648  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_210:\n        /* \"erc721/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"erc721/Math.sol\":10680:10685  value */\n      dup4\n        /* \"erc721/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"erc721/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_213\n      jumpi\n        /* \"erc721/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"erc721/Math.sol\":10714:10725  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"erc721/Math.sol\":10676:10740  if (value >= 10**1) {... */\n    tag_213:\n        /* \"erc721/Math.sol\":10766:10772  result */\n      dup1\n        /* \"erc721/Math.sol\":10759:10772  return result */\n      swap2\n      pop\n      pop\n        /* \"erc721/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_158:\n        /* \"erc721/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"erc721/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"erc721/Address.sol\":1465:1472  account */\n      dup3\n        /* \"erc721/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"erc721/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"erc721/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_216:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_218\n        /* \"#utility.yul\":161:225   */\n      tag_219\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":145:226   */\n      tag_221\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_223\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":350:493   */\n    tag_222:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_225:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_228\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_225)\n    tag_227:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_230:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_232\n        /* \"#utility.yul\":906:970   */\n      tag_233\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":890:971   */\n      tag_221\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_236\n      tag_224\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1095:1238   */\n    tag_235:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_237:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_240\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_237)\n    tag_239:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1907   */\n    tag_242:\n        /* \"#utility.yul\":1574:1579   */\n      0x00\n        /* \"#utility.yul\":1599:1664   */\n      tag_244\n        /* \"#utility.yul\":1615:1663   */\n      tag_245\n        /* \"#utility.yul\":1656:1662   */\n      dup5\n        /* \"#utility.yul\":1615:1663   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1599:1664   */\n      tag_221\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1590:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1693   */\n      dup3\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1673:1694   */\n      mstore\n        /* \"#utility.yul\":1725:1729   */\n      0x20\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1714:1730   */\n      add\n        /* \"#utility.yul\":1763:1766   */\n      dup5\n        /* \"#utility.yul\":1754:1760   */\n      dup5\n        /* \"#utility.yul\":1749:1752   */\n      dup5\n        /* \"#utility.yul\":1745:1761   */\n      add\n        /* \"#utility.yul\":1742:1767   */\n      gt\n        /* \"#utility.yul\":1739:1851   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1770:1849   */\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1739:1851   */\n    tag_247:\n        /* \"#utility.yul\":1860:1901   */\n      tag_250\n        /* \"#utility.yul\":1894:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1887   */\n      dup6\n        /* \"#utility.yul\":1860:1901   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1580:1907   */\n      pop\n        /* \"#utility.yul\":1497:1907   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2052   */\n    tag_229:\n        /* \"#utility.yul\":1959:1964   */\n      0x00\n        /* \"#utility.yul\":1997:2003   */\n      dup2\n        /* \"#utility.yul\":1984:2004   */\n      calldataload\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2046   */\n      tag_253\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1913:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2445   */\n    tag_255:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2195:2198   */\n      dup3\n        /* \"#utility.yul\":2188:2192   */\n      0x1f\n        /* \"#utility.yul\":2180:2186   */\n      dup4\n        /* \"#utility.yul\":2176:2193   */\n      add\n        /* \"#utility.yul\":2172:2199   */\n      slt\n        /* \"#utility.yul\":2162:2284   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2203:2282   */\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2162:2284   */\n    tag_257:\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2345:2439   */\n      tag_260\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2424   */\n      0x20\n        /* \"#utility.yul\":2412:2418   */\n      dup7\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2345:2439   */\n      tag_216\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2336:2439   */\n      swap2\n      pop\n        /* \"#utility.yul\":2152:2445   */\n      pop\n        /* \"#utility.yul\":2075:2445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2838   */\n    tag_261:\n        /* \"#utility.yul\":2539:2544   */\n      0x00\n        /* \"#utility.yul\":2588:2591   */\n      dup3\n        /* \"#utility.yul\":2581:2585   */\n      0x1f\n        /* \"#utility.yul\":2573:2579   */\n      dup4\n        /* \"#utility.yul\":2569:2586   */\n      add\n        /* \"#utility.yul\":2565:2592   */\n      slt\n        /* \"#utility.yul\":2555:2677   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":2596:2675   */\n      tag_264\n      tag_259\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2555:2677   */\n    tag_263:\n        /* \"#utility.yul\":2713:2719   */\n      dup2\n        /* \"#utility.yul\":2700:2720   */\n      calldataload\n        /* \"#utility.yul\":2738:2832   */\n      tag_265\n        /* \"#utility.yul\":2828:2831   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2817   */\n      0x20\n        /* \"#utility.yul\":2805:2811   */\n      dup7\n        /* \"#utility.yul\":2801:2818   */\n      add\n        /* \"#utility.yul\":2738:2832   */\n      tag_230\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2729:2832   */\n      swap2\n      pop\n        /* \"#utility.yul\":2545:2838   */\n      pop\n        /* \"#utility.yul\":2468:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2977   */\n    tag_266:\n        /* \"#utility.yul\":2887:2892   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup2\n        /* \"#utility.yul\":2912:2932   */\n      calldataload\n        /* \"#utility.yul\":2903:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2971   */\n      tag_268\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2941:2971   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2844:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3120   */\n    tag_270:\n        /* \"#utility.yul\":3028:3033   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3053:3073   */\n      calldataload\n        /* \"#utility.yul\":3044:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3114   */\n      tag_272\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3082:3114   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2983:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3267   */\n    tag_274:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3207:3220   */\n      mload\n        /* \"#utility.yul\":3198:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3261   */\n      tag_276\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_273\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3126:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3624   */\n    tag_277:\n        /* \"#utility.yul\":3341:3346   */\n      0x00\n        /* \"#utility.yul\":3390:3393   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x1f\n        /* \"#utility.yul\":3375:3381   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3367:3394   */\n      slt\n        /* \"#utility.yul\":3357:3479   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_280\n      tag_259\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3357:3479   */\n    tag_279:\n        /* \"#utility.yul\":3515:3521   */\n      dup2\n        /* \"#utility.yul\":3502:3522   */\n      calldataload\n        /* \"#utility.yul\":3540:3618   */\n      tag_281\n        /* \"#utility.yul\":3614:3617   */\n      dup5\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3599:3603   */\n      0x20\n        /* \"#utility.yul\":3591:3597   */\n      dup7\n        /* \"#utility.yul\":3587:3604   */\n      add\n        /* \"#utility.yul\":3540:3618   */\n      tag_242\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3531:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3347:3624   */\n      pop\n        /* \"#utility.yul\":3286:3624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3769   */\n    tag_241:\n        /* \"#utility.yul\":3676:3681   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3701:3721   */\n      calldataload\n        /* \"#utility.yul\":3692:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3763   */\n      tag_283\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3730:3763   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3630:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4249   */\n    tag_46:\n        /* \"#utility.yul\":3843:3849   */\n      0x00\n        /* \"#utility.yul\":3851:3857   */\n      dup1\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3879:3886   */\n      dup6\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3868:3987   */\n    tag_286:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4104   */\n      tag_289\n        /* \"#utility.yul\":4096:4103   */\n      dup6\n        /* \"#utility.yul\":4087:4093   */\n      dup3\n        /* \"#utility.yul\":4076:4085   */\n      dup7\n        /* \"#utility.yul\":4072:4094   */\n      add\n        /* \"#utility.yul\":4051:4104   */\n      tag_229\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4041:4104   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4114   */\n      pop\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4179:4232   */\n      tag_290\n        /* \"#utility.yul\":4224:4231   */\n      dup6\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup7\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4179:4232   */\n      tag_229\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4169:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4242   */\n      pop\n        /* \"#utility.yul\":3775:4249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:5764   */\n    tag_32:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4433:4439   */\n      dup1\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      0xa0\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4469:4476   */\n      dup9\n        /* \"#utility.yul\":4465:4488   */\n      sub\n        /* \"#utility.yul\":4461:4494   */\n      slt\n        /* \"#utility.yul\":4458:4578   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":4497:4576   */\n      tag_293\n      tag_288\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4458:4578   */\n    tag_292:\n        /* \"#utility.yul\":4617:4618   */\n      0x00\n        /* \"#utility.yul\":4642:4695   */\n      tag_294\n        /* \"#utility.yul\":4687:4694   */\n      dup9\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      dup10\n        /* \"#utility.yul\":4663:4685   */\n      add\n        /* \"#utility.yul\":4642:4695   */\n      tag_229\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4632:4695   */\n      swap6\n      pop\n        /* \"#utility.yul\":4588:4705   */\n      pop\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4770:4823   */\n      tag_295\n        /* \"#utility.yul\":4815:4822   */\n      dup9\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup10\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_229\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4760:4823   */\n      swap5\n      pop\n        /* \"#utility.yul\":4715:4833   */\n      pop\n        /* \"#utility.yul\":4900:4902   */\n      0x40\n        /* \"#utility.yul\":4889:4898   */\n      dup7\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4872:4904   */\n      calldataload\n        /* \"#utility.yul\":4931:4949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4920:4950   */\n      gt\n        /* \"#utility.yul\":4917:5034   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4953:5032   */\n      tag_297\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4917:5034   */\n    tag_296:\n        /* \"#utility.yul\":5058:5136   */\n      tag_299\n        /* \"#utility.yul\":5128:5135   */\n      dup9\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      dup10\n        /* \"#utility.yul\":5104:5126   */\n      add\n        /* \"#utility.yul\":5058:5136   */\n      tag_261\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5048:5136   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:5146   */\n      pop\n        /* \"#utility.yul\":5213:5215   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup7\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"#utility.yul\":5185:5217   */\n      calldataload\n        /* \"#utility.yul\":5244:5262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5236:5242   */\n      dup2\n        /* \"#utility.yul\":5233:5263   */\n      gt\n        /* \"#utility.yul\":5230:5347   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_301\n      tag_298\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5230:5347   */\n    tag_300:\n        /* \"#utility.yul\":5371:5449   */\n      tag_302\n        /* \"#utility.yul\":5441:5448   */\n      dup9\n        /* \"#utility.yul\":5432:5438   */\n      dup3\n        /* \"#utility.yul\":5421:5430   */\n      dup10\n        /* \"#utility.yul\":5417:5439   */\n      add\n        /* \"#utility.yul\":5371:5449   */\n      tag_261\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5361:5449   */\n      swap3\n      pop\n        /* \"#utility.yul\":5156:5459   */\n      pop\n        /* \"#utility.yul\":5526:5529   */\n      0x80\n        /* \"#utility.yul\":5515:5524   */\n      dup7\n        /* \"#utility.yul\":5511:5530   */\n      add\n        /* \"#utility.yul\":5498:5531   */\n      calldataload\n        /* \"#utility.yul\":5558:5576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5550:5556   */\n      dup2\n        /* \"#utility.yul\":5547:5577   */\n      gt\n        /* \"#utility.yul\":5544:5661   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":5580:5659   */\n      tag_304\n      tag_298\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5544:5661   */\n    tag_303:\n        /* \"#utility.yul\":5685:5747   */\n      tag_305\n        /* \"#utility.yul\":5739:5746   */\n      dup9\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      dup10\n        /* \"#utility.yul\":5715:5737   */\n      add\n        /* \"#utility.yul\":5685:5747   */\n      tag_277\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5757   */\n      pop\n        /* \"#utility.yul\":4255:5764   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6859   */\n    tag_51:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup1\n        /* \"#utility.yul\":5906:5912   */\n      0x00\n        /* \"#utility.yul\":5955:5958   */\n      0xa0\n        /* \"#utility.yul\":5943:5952   */\n      dup7\n        /* \"#utility.yul\":5934:5941   */\n      dup9\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:6043   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5962:6041   */\n      tag_308\n      tag_288\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5923:6043   */\n    tag_307:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6107:6160   */\n      tag_309\n        /* \"#utility.yul\":6152:6159   */\n      dup9\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6132:6141   */\n      dup10\n        /* \"#utility.yul\":6128:6150   */\n      add\n        /* \"#utility.yul\":6107:6160   */\n      tag_229\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6097:6160   */\n      swap6\n      pop\n        /* \"#utility.yul\":6053:6170   */\n      pop\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6235:6288   */\n      tag_310\n        /* \"#utility.yul\":6280:6287   */\n      dup9\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup10\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6235:6288   */\n      tag_229\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6225:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6180:6298   */\n      pop\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6363:6416   */\n      tag_311\n        /* \"#utility.yul\":6408:6415   */\n      dup9\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup10\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_241\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6353:6416   */\n      swap4\n      pop\n        /* \"#utility.yul\":6308:6426   */\n      pop\n        /* \"#utility.yul\":6465:6467   */\n      0x60\n        /* \"#utility.yul\":6491:6544   */\n      tag_312\n        /* \"#utility.yul\":6536:6543   */\n      dup9\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6516:6525   */\n      dup10\n        /* \"#utility.yul\":6512:6534   */\n      add\n        /* \"#utility.yul\":6491:6544   */\n      tag_241\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6481:6544   */\n      swap3\n      pop\n        /* \"#utility.yul\":6436:6554   */\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      0x80\n        /* \"#utility.yul\":6610:6619   */\n      dup7\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6593:6626   */\n      calldataload\n        /* \"#utility.yul\":6653:6671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6645:6651   */\n      dup2\n        /* \"#utility.yul\":6642:6672   */\n      gt\n        /* \"#utility.yul\":6639:6756   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_314\n      tag_298\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6639:6756   */\n    tag_313:\n        /* \"#utility.yul\":6780:6842   */\n      tag_315\n        /* \"#utility.yul\":6834:6841   */\n      dup9\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6814:6823   */\n      dup10\n        /* \"#utility.yul\":6810:6832   */\n      add\n        /* \"#utility.yul\":6780:6842   */\n      tag_277\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6770:6842   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6852   */\n      pop\n        /* \"#utility.yul\":5770:6859   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7333   */\n    tag_42:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup1\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_318\n      tag_288\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6955:7074   */\n    tag_317:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_319\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_229\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7240:7242   */\n      0x20\n        /* \"#utility.yul\":7266:7316   */\n      tag_320\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup7\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7266:7316   */\n      tag_266\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7256:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7326   */\n      pop\n        /* \"#utility.yul\":6865:7333   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7813   */\n    tag_14:\n        /* \"#utility.yul\":7407:7413   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7551   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_323\n      tag_288\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7432:7551   */\n    tag_322:\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7615:7668   */\n      tag_324\n        /* \"#utility.yul\":7660:7667   */\n      dup6\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup7\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_229\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7605:7668   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7678   */\n      pop\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7743:7796   */\n      tag_325\n        /* \"#utility.yul\":7788:7795   */\n      dup6\n        /* \"#utility.yul\":7779:7785   */\n      dup3\n        /* \"#utility.yul\":7768:7777   */\n      dup7\n        /* \"#utility.yul\":7764:7786   */\n      add\n        /* \"#utility.yul\":7743:7796   */\n      tag_241\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7733:7796   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7806   */\n      pop\n        /* \"#utility.yul\":7339:7813   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8713   */\n    tag_36:\n        /* \"#utility.yul\":7937:7943   */\n      0x00\n        /* \"#utility.yul\":7945:7951   */\n      dup1\n        /* \"#utility.yul\":7994:7996   */\n      0x40\n        /* \"#utility.yul\":7982:7991   */\n      dup4\n        /* \"#utility.yul\":7973:7980   */\n      dup6\n        /* \"#utility.yul\":7969:7992   */\n      sub\n        /* \"#utility.yul\":7965:7997   */\n      slt\n        /* \"#utility.yul\":7962:8081   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":8000:8079   */\n      tag_328\n      tag_288\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7962:8081   */\n    tag_327:\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8137:8146   */\n      dup4\n        /* \"#utility.yul\":8133:8150   */\n      add\n        /* \"#utility.yul\":8120:8151   */\n      calldataload\n        /* \"#utility.yul\":8178:8196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8176   */\n      dup2\n        /* \"#utility.yul\":8167:8197   */\n      gt\n        /* \"#utility.yul\":8164:8281   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":8200:8279   */\n      tag_330\n      tag_298\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8164:8281   */\n    tag_329:\n        /* \"#utility.yul\":8305:8383   */\n      tag_331\n        /* \"#utility.yul\":8375:8382   */\n      dup6\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8355:8364   */\n      dup7\n        /* \"#utility.yul\":8351:8373   */\n      add\n        /* \"#utility.yul\":8305:8383   */\n      tag_255\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8295:8383   */\n      swap3\n      pop\n        /* \"#utility.yul\":8091:8393   */\n      pop\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8449:8458   */\n      dup4\n        /* \"#utility.yul\":8445:8463   */\n      add\n        /* \"#utility.yul\":8432:8464   */\n      calldataload\n        /* \"#utility.yul\":8491:8509   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8483:8489   */\n      dup2\n        /* \"#utility.yul\":8480:8510   */\n      gt\n        /* \"#utility.yul\":8477:8594   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":8513:8592   */\n      tag_333\n      tag_298\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8477:8594   */\n    tag_332:\n        /* \"#utility.yul\":8618:8696   */\n      tag_334\n        /* \"#utility.yul\":8688:8695   */\n      dup6\n        /* \"#utility.yul\":8679:8685   */\n      dup3\n        /* \"#utility.yul\":8668:8677   */\n      dup7\n        /* \"#utility.yul\":8664:8686   */\n      add\n        /* \"#utility.yul\":8618:8696   */\n      tag_261\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8608:8696   */\n      swap2\n      pop\n        /* \"#utility.yul\":8403:8706   */\n      pop\n        /* \"#utility.yul\":7819:8713   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:9046   */\n    tag_20:\n        /* \"#utility.yul\":8777:8783   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8814:8823   */\n      dup3\n        /* \"#utility.yul\":8805:8812   */\n      dup5\n        /* \"#utility.yul\":8801:8824   */\n      sub\n        /* \"#utility.yul\":8797:8829   */\n      slt\n        /* \"#utility.yul\":8794:8913   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":8832:8911   */\n      tag_337\n      tag_288\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8794:8913   */\n    tag_336:\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8977:9029   */\n      tag_338\n        /* \"#utility.yul\":9021:9028   */\n      dup5\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9001:9010   */\n      dup6\n        /* \"#utility.yul\":8997:9019   */\n      add\n        /* \"#utility.yul\":8977:9029   */\n      tag_270\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8967:9029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8923:9039   */\n      pop\n        /* \"#utility.yul\":8719:9046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:9401   */\n    tag_165:\n        /* \"#utility.yul\":9121:9127   */\n      0x00\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"#utility.yul\":9158:9167   */\n      dup3\n        /* \"#utility.yul\":9149:9156   */\n      dup5\n        /* \"#utility.yul\":9145:9168   */\n      sub\n        /* \"#utility.yul\":9141:9173   */\n      slt\n        /* \"#utility.yul\":9138:9257   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":9176:9255   */\n      tag_341\n      tag_288\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9138:9257   */\n    tag_340:\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9321:9384   */\n      tag_342\n        /* \"#utility.yul\":9376:9383   */\n      dup5\n        /* \"#utility.yul\":9367:9373   */\n      dup3\n        /* \"#utility.yul\":9356:9365   */\n      dup6\n        /* \"#utility.yul\":9352:9374   */\n      add\n        /* \"#utility.yul\":9321:9384   */\n      tag_274\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9311:9384   */\n      swap2\n      pop\n        /* \"#utility.yul\":9267:9394   */\n      pop\n        /* \"#utility.yul\":9052:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9736   */\n    tag_26:\n        /* \"#utility.yul\":9466:9472   */\n      0x00\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup3\n        /* \"#utility.yul\":9494:9501   */\n      dup5\n        /* \"#utility.yul\":9490:9513   */\n      sub\n        /* \"#utility.yul\":9486:9518   */\n      slt\n        /* \"#utility.yul\":9483:9602   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9521:9600   */\n      tag_345\n      tag_288\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9483:9602   */\n    tag_344:\n        /* \"#utility.yul\":9641:9642   */\n      0x00\n        /* \"#utility.yul\":9666:9719   */\n      tag_346\n        /* \"#utility.yul\":9711:9718   */\n      dup5\n        /* \"#utility.yul\":9702:9708   */\n      dup3\n        /* \"#utility.yul\":9691:9700   */\n      dup6\n        /* \"#utility.yul\":9687:9709   */\n      add\n        /* \"#utility.yul\":9666:9719   */\n      tag_241\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9656:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9612:9729   */\n      pop\n        /* \"#utility.yul\":9407:9736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9742:9921   */\n    tag_347:\n        /* \"#utility.yul\":9811:9821   */\n      0x00\n        /* \"#utility.yul\":9832:9878   */\n      tag_349\n        /* \"#utility.yul\":9874:9877   */\n      dup4\n        /* \"#utility.yul\":9866:9872   */\n      dup4\n        /* \"#utility.yul\":9832:9878   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9910:9914   */\n      0x20\n        /* \"#utility.yul\":9905:9908   */\n      dup4\n        /* \"#utility.yul\":9901:9915   */\n      add\n        /* \"#utility.yul\":9887:9915   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:9921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9927:10045   */\n    tag_351:\n        /* \"#utility.yul\":10014:10038   */\n      tag_353\n        /* \"#utility.yul\":10032:10037   */\n      dup2\n        /* \"#utility.yul\":10014:10038   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":10002:10039   */\n      mstore\n        /* \"#utility.yul\":9927:10045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10813   */\n    tag_355:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10229:10283   */\n      tag_357\n        /* \"#utility.yul\":10277:10282   */\n      dup3\n        /* \"#utility.yul\":10229:10283   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10299:10385   */\n      tag_359\n        /* \"#utility.yul\":10378:10384   */\n      dup2\n        /* \"#utility.yul\":10373:10376   */\n      dup6\n        /* \"#utility.yul\":10299:10385   */\n      tag_360\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10292:10385   */\n      swap4\n      pop\n        /* \"#utility.yul\":10409:10465   */\n      tag_361\n        /* \"#utility.yul\":10459:10464   */\n      dup4\n        /* \"#utility.yul\":10409:10465   */\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10488:10495   */\n      dup1\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10504:10788   */\n    tag_363:\n        /* \"#utility.yul\":10529:10535   */\n      dup4\n        /* \"#utility.yul\":10526:10527   */\n      dup2\n        /* \"#utility.yul\":10523:10536   */\n      lt\n        /* \"#utility.yul\":10504:10788   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":10605:10611   */\n      dup2\n        /* \"#utility.yul\":10599:10612   */\n      mload\n        /* \"#utility.yul\":10632:10695   */\n      tag_366\n        /* \"#utility.yul\":10691:10694   */\n      dup9\n        /* \"#utility.yul\":10676:10689   */\n      dup3\n        /* \"#utility.yul\":10632:10695   */\n      tag_347\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10625:10695   */\n      swap8\n      pop\n        /* \"#utility.yul\":10718:10778   */\n      tag_367\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10718:10778   */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10708:10778   */\n      swap3\n      pop\n        /* \"#utility.yul\":10564:10788   */\n      pop\n        /* \"#utility.yul\":10551:10552   */\n      0x01\n        /* \"#utility.yul\":10548:10549   */\n      dup2\n        /* \"#utility.yul\":10544:10553   */\n      add\n        /* \"#utility.yul\":10539:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10788   */\n      jump(tag_363)\n    tag_365:\n        /* \"#utility.yul\":10508:10522   */\n      pop\n        /* \"#utility.yul\":10804:10807   */\n      dup6\n        /* \"#utility.yul\":10797:10807   */\n      swap4\n      pop\n        /* \"#utility.yul\":10205:10813   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10081:10813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10928   */\n    tag_369:\n        /* \"#utility.yul\":10900:10921   */\n      tag_371\n        /* \"#utility.yul\":10915:10920   */\n      dup2\n        /* \"#utility.yul\":10900:10921   */\n      tag_372\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10888:10922   */\n      mstore\n        /* \"#utility.yul\":10819:10928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11294   */\n    tag_373:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11048:11086   */\n      tag_375\n        /* \"#utility.yul\":11080:11085   */\n      dup3\n        /* \"#utility.yul\":11048:11086   */\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11102:11172   */\n      tag_377\n        /* \"#utility.yul\":11165:11171   */\n      dup2\n        /* \"#utility.yul\":11160:11163   */\n      dup6\n        /* \"#utility.yul\":11102:11172   */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11095:11172   */\n      swap4\n      pop\n        /* \"#utility.yul\":11181:11233   */\n      tag_379\n        /* \"#utility.yul\":11226:11232   */\n      dup2\n        /* \"#utility.yul\":11221:11224   */\n      dup6\n        /* \"#utility.yul\":11214:11218   */\n      0x20\n        /* \"#utility.yul\":11207:11212   */\n      dup7\n        /* \"#utility.yul\":11203:11219   */\n      add\n        /* \"#utility.yul\":11181:11233   */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11258:11287   */\n      tag_381\n        /* \"#utility.yul\":11280:11286   */\n      dup2\n        /* \"#utility.yul\":11258:11287   */\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11253:11256   */\n      dup5\n        /* \"#utility.yul\":11249:11288   */\n      add\n        /* \"#utility.yul\":11242:11288   */\n      swap2\n      pop\n        /* \"#utility.yul\":11024:11294   */\n      pop\n        /* \"#utility.yul\":10934:11294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11664   */\n    tag_383:\n        /* \"#utility.yul\":11388:11391   */\n      0x00\n        /* \"#utility.yul\":11416:11455   */\n      tag_385\n        /* \"#utility.yul\":11449:11454   */\n      dup3\n        /* \"#utility.yul\":11416:11455   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11471:11542   */\n      tag_387\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11530:11533   */\n      dup6\n        /* \"#utility.yul\":11471:11542   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11464:11542   */\n      swap4\n      pop\n        /* \"#utility.yul\":11551:11603   */\n      tag_389\n        /* \"#utility.yul\":11596:11602   */\n      dup2\n        /* \"#utility.yul\":11591:11594   */\n      dup6\n        /* \"#utility.yul\":11584:11588   */\n      0x20\n        /* \"#utility.yul\":11577:11582   */\n      dup7\n        /* \"#utility.yul\":11573:11589   */\n      add\n        /* \"#utility.yul\":11551:11603   */\n      tag_380\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11628:11657   */\n      tag_390\n        /* \"#utility.yul\":11650:11656   */\n      dup2\n        /* \"#utility.yul\":11628:11657   */\n      tag_382\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11623:11626   */\n      dup5\n        /* \"#utility.yul\":11619:11658   */\n      add\n        /* \"#utility.yul\":11612:11658   */\n      swap2\n      pop\n        /* \"#utility.yul\":11392:11664   */\n      pop\n        /* \"#utility.yul\":11300:11664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12047   */\n    tag_391:\n        /* \"#utility.yul\":11776:11779   */\n      0x00\n        /* \"#utility.yul\":11804:11843   */\n      tag_393\n        /* \"#utility.yul\":11837:11842   */\n      dup3\n        /* \"#utility.yul\":11804:11843   */\n      tag_386\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11859:11948   */\n      tag_394\n        /* \"#utility.yul\":11941:11947   */\n      dup2\n        /* \"#utility.yul\":11936:11939   */\n      dup6\n        /* \"#utility.yul\":11859:11948   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11852:11948   */\n      swap4\n      pop\n        /* \"#utility.yul\":11957:12009   */\n      tag_396\n        /* \"#utility.yul\":12002:12008   */\n      dup2\n        /* \"#utility.yul\":11997:12000   */\n      dup6\n        /* \"#utility.yul\":11990:11994   */\n      0x20\n        /* \"#utility.yul\":11983:11988   */\n      dup7\n        /* \"#utility.yul\":11979:11995   */\n      add\n        /* \"#utility.yul\":11957:12009   */\n      tag_380\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12034:12040   */\n      dup1\n        /* \"#utility.yul\":12029:12032   */\n      dup5\n        /* \"#utility.yul\":12025:12041   */\n      add\n        /* \"#utility.yul\":12018:12041   */\n      swap2\n      pop\n        /* \"#utility.yul\":11780:12047   */\n      pop\n        /* \"#utility.yul\":11670:12047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12053:12419   */\n    tag_397:\n        /* \"#utility.yul\":12195:12198   */\n      0x00\n        /* \"#utility.yul\":12216:12283   */\n      tag_399\n        /* \"#utility.yul\":12280:12282   */\n      0x2f\n        /* \"#utility.yul\":12275:12278   */\n      dup4\n        /* \"#utility.yul\":12216:12283   */\n      tag_388\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12209:12283   */\n      swap2\n      pop\n        /* \"#utility.yul\":12292:12385   */\n      tag_400\n        /* \"#utility.yul\":12381:12384   */\n      dup3\n        /* \"#utility.yul\":12292:12385   */\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12410:12412   */\n      0x40\n        /* \"#utility.yul\":12405:12408   */\n      dup3\n        /* \"#utility.yul\":12401:12413   */\n      add\n        /* \"#utility.yul\":12394:12413   */\n      swap1\n      pop\n        /* \"#utility.yul\":12053:12419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12425:12791   */\n    tag_402:\n        /* \"#utility.yul\":12567:12570   */\n      0x00\n        /* \"#utility.yul\":12588:12655   */\n      tag_404\n        /* \"#utility.yul\":12652:12654   */\n      0x28\n        /* \"#utility.yul\":12647:12650   */\n      dup4\n        /* \"#utility.yul\":12588:12655   */\n      tag_388\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12581:12655   */\n      swap2\n      pop\n        /* \"#utility.yul\":12664:12757   */\n      tag_405\n        /* \"#utility.yul\":12753:12756   */\n      dup3\n        /* \"#utility.yul\":12664:12757   */\n      tag_406\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":12782:12784   */\n      0x40\n        /* \"#utility.yul\":12777:12780   */\n      dup3\n        /* \"#utility.yul\":12773:12785   */\n      add\n        /* \"#utility.yul\":12766:12785   */\n      swap1\n      pop\n        /* \"#utility.yul\":12425:12791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12797:13163   */\n    tag_407:\n        /* \"#utility.yul\":12939:12942   */\n      0x00\n        /* \"#utility.yul\":12960:13027   */\n      tag_409\n        /* \"#utility.yul\":13024:13026   */\n      0x3d\n        /* \"#utility.yul\":13019:13022   */\n      dup4\n        /* \"#utility.yul\":12960:13027   */\n      tag_388\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":12953:13027   */\n      swap2\n      pop\n        /* \"#utility.yul\":13036:13129   */\n      tag_410\n        /* \"#utility.yul\":13125:13128   */\n      dup3\n        /* \"#utility.yul\":13036:13129   */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13154:13156   */\n      0x40\n        /* \"#utility.yul\":13149:13152   */\n      dup3\n        /* \"#utility.yul\":13145:13157   */\n      add\n        /* \"#utility.yul\":13138:13157   */\n      swap1\n      pop\n        /* \"#utility.yul\":12797:13163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13169:13535   */\n    tag_412:\n        /* \"#utility.yul\":13311:13314   */\n      0x00\n        /* \"#utility.yul\":13332:13399   */\n      tag_414\n        /* \"#utility.yul\":13396:13398   */\n      0x2e\n        /* \"#utility.yul\":13391:13394   */\n      dup4\n        /* \"#utility.yul\":13332:13399   */\n      tag_388\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13325:13399   */\n      swap2\n      pop\n        /* \"#utility.yul\":13408:13501   */\n      tag_415\n        /* \"#utility.yul\":13497:13500   */\n      dup3\n        /* \"#utility.yul\":13408:13501   */\n      tag_416\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13526:13528   */\n      0x40\n        /* \"#utility.yul\":13521:13524   */\n      dup3\n        /* \"#utility.yul\":13517:13529   */\n      add\n        /* \"#utility.yul\":13510:13529   */\n      swap1\n      pop\n        /* \"#utility.yul\":13169:13535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13541:13907   */\n    tag_417:\n        /* \"#utility.yul\":13683:13686   */\n      0x00\n        /* \"#utility.yul\":13704:13771   */\n      tag_419\n        /* \"#utility.yul\":13768:13770   */\n      0x20\n        /* \"#utility.yul\":13763:13766   */\n      dup4\n        /* \"#utility.yul\":13704:13771   */\n      tag_388\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13697:13771   */\n      swap2\n      pop\n        /* \"#utility.yul\":13780:13873   */\n      tag_420\n        /* \"#utility.yul\":13869:13872   */\n      dup3\n        /* \"#utility.yul\":13780:13873   */\n      tag_421\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13898:13900   */\n      0x20\n        /* \"#utility.yul\":13893:13896   */\n      dup3\n        /* \"#utility.yul\":13889:13901   */\n      add\n        /* \"#utility.yul\":13882:13901   */\n      swap1\n      pop\n        /* \"#utility.yul\":13541:13907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13913:14279   */\n    tag_422:\n        /* \"#utility.yul\":14055:14058   */\n      0x00\n        /* \"#utility.yul\":14076:14143   */\n      tag_424\n        /* \"#utility.yul\":14140:14142   */\n      0x2a\n        /* \"#utility.yul\":14135:14138   */\n      dup4\n        /* \"#utility.yul\":14076:14143   */\n      tag_388\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14069:14143   */\n      swap2\n      pop\n        /* \"#utility.yul\":14152:14245   */\n      tag_425\n        /* \"#utility.yul\":14241:14244   */\n      dup3\n        /* \"#utility.yul\":14152:14245   */\n      tag_426\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":14270:14272   */\n      0x40\n        /* \"#utility.yul\":14265:14268   */\n      dup3\n        /* \"#utility.yul\":14261:14273   */\n      add\n        /* \"#utility.yul\":14254:14273   */\n      swap1\n      pop\n        /* \"#utility.yul\":13913:14279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14285:14651   */\n    tag_427:\n        /* \"#utility.yul\":14427:14430   */\n      0x00\n        /* \"#utility.yul\":14448:14515   */\n      tag_429\n        /* \"#utility.yul\":14512:14514   */\n      0x2b\n        /* \"#utility.yul\":14507:14510   */\n      dup4\n        /* \"#utility.yul\":14448:14515   */\n      tag_388\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14441:14515   */\n      swap2\n      pop\n        /* \"#utility.yul\":14524:14617   */\n      tag_430\n        /* \"#utility.yul\":14613:14616   */\n      dup3\n        /* \"#utility.yul\":14524:14617   */\n      tag_431\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14642:14644   */\n      0x40\n        /* \"#utility.yul\":14637:14640   */\n      dup3\n        /* \"#utility.yul\":14633:14645   */\n      add\n        /* \"#utility.yul\":14626:14645   */\n      swap1\n      pop\n        /* \"#utility.yul\":14285:14651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14657:15023   */\n    tag_432:\n        /* \"#utility.yul\":14799:14802   */\n      0x00\n        /* \"#utility.yul\":14820:14887   */\n      tag_434\n        /* \"#utility.yul\":14884:14886   */\n      0x31\n        /* \"#utility.yul\":14879:14882   */\n      dup4\n        /* \"#utility.yul\":14820:14887   */\n      tag_388\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14813:14887   */\n      swap2\n      pop\n        /* \"#utility.yul\":14896:14989   */\n      tag_435\n        /* \"#utility.yul\":14985:14988   */\n      dup3\n        /* \"#utility.yul\":14896:14989   */\n      tag_436\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":15014:15016   */\n      0x40\n        /* \"#utility.yul\":15009:15012   */\n      dup3\n        /* \"#utility.yul\":15005:15017   */\n      add\n        /* \"#utility.yul\":14998:15017   */\n      swap1\n      pop\n        /* \"#utility.yul\":14657:15023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15029:15395   */\n    tag_437:\n        /* \"#utility.yul\":15171:15174   */\n      0x00\n        /* \"#utility.yul\":15192:15259   */\n      tag_439\n        /* \"#utility.yul\":15256:15258   */\n      0x2d\n        /* \"#utility.yul\":15251:15254   */\n      dup4\n        /* \"#utility.yul\":15192:15259   */\n      tag_388\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15185:15259   */\n      swap2\n      pop\n        /* \"#utility.yul\":15268:15361   */\n      tag_440\n        /* \"#utility.yul\":15357:15360   */\n      dup3\n        /* \"#utility.yul\":15268:15361   */\n      tag_441\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15386:15388   */\n      0x40\n        /* \"#utility.yul\":15381:15384   */\n      dup3\n        /* \"#utility.yul\":15377:15389   */\n      add\n        /* \"#utility.yul\":15370:15389   */\n      swap1\n      pop\n        /* \"#utility.yul\":15029:15395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15401:15767   */\n    tag_442:\n        /* \"#utility.yul\":15543:15546   */\n      0x00\n        /* \"#utility.yul\":15564:15631   */\n      tag_444\n        /* \"#utility.yul\":15628:15630   */\n      0x29\n        /* \"#utility.yul\":15623:15626   */\n      dup4\n        /* \"#utility.yul\":15564:15631   */\n      tag_388\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15557:15631   */\n      swap2\n      pop\n        /* \"#utility.yul\":15640:15733   */\n      tag_445\n        /* \"#utility.yul\":15729:15732   */\n      dup3\n        /* \"#utility.yul\":15640:15733   */\n      tag_446\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15758:15760   */\n      0x40\n        /* \"#utility.yul\":15753:15756   */\n      dup3\n        /* \"#utility.yul\":15749:15761   */\n      add\n        /* \"#utility.yul\":15742:15761   */\n      swap1\n      pop\n        /* \"#utility.yul\":15401:15767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15773:16139   */\n    tag_447:\n        /* \"#utility.yul\":15915:15918   */\n      0x00\n        /* \"#utility.yul\":15936:16003   */\n      tag_449\n        /* \"#utility.yul\":16000:16002   */\n      0x29\n        /* \"#utility.yul\":15995:15998   */\n      dup4\n        /* \"#utility.yul\":15936:16003   */\n      tag_388\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":15929:16003   */\n      swap2\n      pop\n        /* \"#utility.yul\":16012:16105   */\n      tag_450\n        /* \"#utility.yul\":16101:16104   */\n      dup3\n        /* \"#utility.yul\":16012:16105   */\n      tag_451\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":16130:16132   */\n      0x40\n        /* \"#utility.yul\":16125:16128   */\n      dup3\n        /* \"#utility.yul\":16121:16133   */\n      add\n        /* \"#utility.yul\":16114:16133   */\n      swap1\n      pop\n        /* \"#utility.yul\":15773:16139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16145:16511   */\n    tag_452:\n        /* \"#utility.yul\":16287:16290   */\n      0x00\n        /* \"#utility.yul\":16308:16375   */\n      tag_454\n        /* \"#utility.yul\":16372:16374   */\n      0x28\n        /* \"#utility.yul\":16367:16370   */\n      dup4\n        /* \"#utility.yul\":16308:16375   */\n      tag_388\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16301:16375   */\n      swap2\n      pop\n        /* \"#utility.yul\":16384:16477   */\n      tag_455\n        /* \"#utility.yul\":16473:16476   */\n      dup3\n        /* \"#utility.yul\":16384:16477   */\n      tag_456\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16502:16504   */\n      0x40\n        /* \"#utility.yul\":16497:16500   */\n      dup3\n        /* \"#utility.yul\":16493:16505   */\n      add\n        /* \"#utility.yul\":16486:16505   */\n      swap1\n      pop\n        /* \"#utility.yul\":16145:16511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16517:16625   */\n    tag_350:\n        /* \"#utility.yul\":16594:16618   */\n      tag_458\n        /* \"#utility.yul\":16612:16617   */\n      dup2\n        /* \"#utility.yul\":16594:16618   */\n      tag_459\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16589:16592   */\n      dup3\n        /* \"#utility.yul\":16582:16619   */\n      mstore\n        /* \"#utility.yul\":16517:16625   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16631:16749   */\n    tag_460:\n        /* \"#utility.yul\":16718:16742   */\n      tag_462\n        /* \"#utility.yul\":16736:16741   */\n      dup2\n        /* \"#utility.yul\":16718:16742   */\n      tag_459\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":16713:16716   */\n      dup3\n        /* \"#utility.yul\":16706:16743   */\n      mstore\n        /* \"#utility.yul\":16631:16749   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16755:17190   */\n    tag_68:\n        /* \"#utility.yul\":16935:16938   */\n      0x00\n        /* \"#utility.yul\":16957:17052   */\n      tag_464\n        /* \"#utility.yul\":17048:17051   */\n      dup3\n        /* \"#utility.yul\":17039:17045   */\n      dup6\n        /* \"#utility.yul\":16957:17052   */\n      tag_391\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16950:17052   */\n      swap2\n      pop\n        /* \"#utility.yul\":17069:17164   */\n      tag_465\n        /* \"#utility.yul\":17160:17163   */\n      dup3\n        /* \"#utility.yul\":17151:17157   */\n      dup5\n        /* \"#utility.yul\":17069:17164   */\n      tag_391\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17062:17164   */\n      swap2\n      pop\n        /* \"#utility.yul\":17181:17184   */\n      dup2\n        /* \"#utility.yul\":17174:17184   */\n      swap1\n      pop\n        /* \"#utility.yul\":16755:17190   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17196:18249   */\n    tag_161:\n        /* \"#utility.yul\":17519:17523   */\n      0x00\n        /* \"#utility.yul\":17557:17560   */\n      0xa0\n        /* \"#utility.yul\":17546:17555   */\n      dup3\n        /* \"#utility.yul\":17542:17561   */\n      add\n        /* \"#utility.yul\":17534:17561   */\n      swap1\n      pop\n        /* \"#utility.yul\":17571:17642   */\n      tag_467\n        /* \"#utility.yul\":17639:17640   */\n      0x00\n        /* \"#utility.yul\":17628:17637   */\n      dup4\n        /* \"#utility.yul\":17624:17641   */\n      add\n        /* \"#utility.yul\":17615:17621   */\n      dup9\n        /* \"#utility.yul\":17571:17642   */\n      tag_351\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":17652:17724   */\n      tag_468\n        /* \"#utility.yul\":17720:17722   */\n      0x20\n        /* \"#utility.yul\":17709:17718   */\n      dup4\n        /* \"#utility.yul\":17705:17723   */\n      add\n        /* \"#utility.yul\":17696:17702   */\n      dup8\n        /* \"#utility.yul\":17652:17724   */\n      tag_351\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":17771:17780   */\n      dup2\n        /* \"#utility.yul\":17765:17769   */\n      dup2\n        /* \"#utility.yul\":17761:17781   */\n      sub\n        /* \"#utility.yul\":17756:17758   */\n      0x40\n        /* \"#utility.yul\":17745:17754   */\n      dup4\n        /* \"#utility.yul\":17741:17759   */\n      add\n        /* \"#utility.yul\":17734:17782   */\n      mstore\n        /* \"#utility.yul\":17799:17907   */\n      tag_469\n        /* \"#utility.yul\":17902:17906   */\n      dup2\n        /* \"#utility.yul\":17893:17899   */\n      dup7\n        /* \"#utility.yul\":17799:17907   */\n      tag_355\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":17791:17907   */\n      swap1\n      pop\n        /* \"#utility.yul\":17954:17963   */\n      dup2\n        /* \"#utility.yul\":17948:17952   */\n      dup2\n        /* \"#utility.yul\":17944:17964   */\n      sub\n        /* \"#utility.yul\":17939:17941   */\n      0x60\n        /* \"#utility.yul\":17928:17937   */\n      dup4\n        /* \"#utility.yul\":17924:17942   */\n      add\n        /* \"#utility.yul\":17917:17965   */\n      mstore\n        /* \"#utility.yul\":17982:18090   */\n      tag_470\n        /* \"#utility.yul\":18085:18089   */\n      dup2\n        /* \"#utility.yul\":18076:18082   */\n      dup6\n        /* \"#utility.yul\":17982:18090   */\n      tag_355\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":17974:18090   */\n      swap1\n      pop\n        /* \"#utility.yul\":18138:18147   */\n      dup2\n        /* \"#utility.yul\":18132:18136   */\n      dup2\n        /* \"#utility.yul\":18128:18148   */\n      sub\n        /* \"#utility.yul\":18122:18125   */\n      0x80\n        /* \"#utility.yul\":18111:18120   */\n      dup4\n        /* \"#utility.yul\":18107:18126   */\n      add\n        /* \"#utility.yul\":18100:18149   */\n      mstore\n        /* \"#utility.yul\":18166:18242   */\n      tag_471\n        /* \"#utility.yul\":18237:18241   */\n      dup2\n        /* \"#utility.yul\":18228:18234   */\n      dup5\n        /* \"#utility.yul\":18166:18242   */\n      tag_373\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18158:18242   */\n      swap1\n      pop\n        /* \"#utility.yul\":17196:18249   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18255:19006   */\n    tag_180:\n        /* \"#utility.yul\":18478:18482   */\n      0x00\n        /* \"#utility.yul\":18516:18519   */\n      0xa0\n        /* \"#utility.yul\":18505:18514   */\n      dup3\n        /* \"#utility.yul\":18501:18520   */\n      add\n        /* \"#utility.yul\":18493:18520   */\n      swap1\n      pop\n        /* \"#utility.yul\":18530:18601   */\n      tag_473\n        /* \"#utility.yul\":18598:18599   */\n      0x00\n        /* \"#utility.yul\":18587:18596   */\n      dup4\n        /* \"#utility.yul\":18583:18600   */\n      add\n        /* \"#utility.yul\":18574:18580   */\n      dup9\n        /* \"#utility.yul\":18530:18601   */\n      tag_351\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":18611:18683   */\n      tag_474\n        /* \"#utility.yul\":18679:18681   */\n      0x20\n        /* \"#utility.yul\":18668:18677   */\n      dup4\n        /* \"#utility.yul\":18664:18682   */\n      add\n        /* \"#utility.yul\":18655:18661   */\n      dup8\n        /* \"#utility.yul\":18611:18683   */\n      tag_351\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":18693:18765   */\n      tag_475\n        /* \"#utility.yul\":18761:18763   */\n      0x40\n        /* \"#utility.yul\":18750:18759   */\n      dup4\n        /* \"#utility.yul\":18746:18764   */\n      add\n        /* \"#utility.yul\":18737:18743   */\n      dup7\n        /* \"#utility.yul\":18693:18765   */\n      tag_460\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":18775:18847   */\n      tag_476\n        /* \"#utility.yul\":18843:18845   */\n      0x60\n        /* \"#utility.yul\":18832:18841   */\n      dup4\n        /* \"#utility.yul\":18828:18846   */\n      add\n        /* \"#utility.yul\":18819:18825   */\n      dup6\n        /* \"#utility.yul\":18775:18847   */\n      tag_460\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":18895:18904   */\n      dup2\n        /* \"#utility.yul\":18889:18893   */\n      dup2\n        /* \"#utility.yul\":18885:18905   */\n      sub\n        /* \"#utility.yul\":18879:18882   */\n      0x80\n        /* \"#utility.yul\":18868:18877   */\n      dup4\n        /* \"#utility.yul\":18864:18883   */\n      add\n        /* \"#utility.yul\":18857:18906   */\n      mstore\n        /* \"#utility.yul\":18923:18999   */\n      tag_477\n        /* \"#utility.yul\":18994:18998   */\n      dup2\n        /* \"#utility.yul\":18985:18991   */\n      dup5\n        /* \"#utility.yul\":18923:18999   */\n      tag_373\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":18915:18999   */\n      swap1\n      pop\n        /* \"#utility.yul\":18255:19006   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19012:19385   */\n    tag_39:\n        /* \"#utility.yul\":19155:19159   */\n      0x00\n        /* \"#utility.yul\":19193:19195   */\n      0x20\n        /* \"#utility.yul\":19182:19191   */\n      dup3\n        /* \"#utility.yul\":19178:19196   */\n      add\n        /* \"#utility.yul\":19170:19196   */\n      swap1\n      pop\n        /* \"#utility.yul\":19242:19251   */\n      dup2\n        /* \"#utility.yul\":19236:19240   */\n      dup2\n        /* \"#utility.yul\":19232:19252   */\n      sub\n        /* \"#utility.yul\":19228:19229   */\n      0x00\n        /* \"#utility.yul\":19217:19226   */\n      dup4\n        /* \"#utility.yul\":19213:19230   */\n      add\n        /* \"#utility.yul\":19206:19253   */\n      mstore\n        /* \"#utility.yul\":19270:19378   */\n      tag_479\n        /* \"#utility.yul\":19373:19377   */\n      dup2\n        /* \"#utility.yul\":19364:19370   */\n      dup5\n        /* \"#utility.yul\":19270:19378   */\n      tag_355\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":19262:19378   */\n      swap1\n      pop\n        /* \"#utility.yul\":19012:19385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19391:20025   */\n    tag_101:\n        /* \"#utility.yul\":19612:19616   */\n      0x00\n        /* \"#utility.yul\":19650:19652   */\n      0x40\n        /* \"#utility.yul\":19639:19648   */\n      dup3\n        /* \"#utility.yul\":19635:19653   */\n      add\n        /* \"#utility.yul\":19627:19653   */\n      swap1\n      pop\n        /* \"#utility.yul\":19699:19708   */\n      dup2\n        /* \"#utility.yul\":19693:19697   */\n      dup2\n        /* \"#utility.yul\":19689:19709   */\n      sub\n        /* \"#utility.yul\":19685:19686   */\n      0x00\n        /* \"#utility.yul\":19674:19683   */\n      dup4\n        /* \"#utility.yul\":19670:19687   */\n      add\n        /* \"#utility.yul\":19663:19710   */\n      mstore\n        /* \"#utility.yul\":19727:19835   */\n      tag_481\n        /* \"#utility.yul\":19830:19834   */\n      dup2\n        /* \"#utility.yul\":19821:19827   */\n      dup6\n        /* \"#utility.yul\":19727:19835   */\n      tag_355\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":19719:19835   */\n      swap1\n      pop\n        /* \"#utility.yul\":19882:19891   */\n      dup2\n        /* \"#utility.yul\":19876:19880   */\n      dup2\n        /* \"#utility.yul\":19872:19892   */\n      sub\n        /* \"#utility.yul\":19867:19869   */\n      0x20\n        /* \"#utility.yul\":19856:19865   */\n      dup4\n        /* \"#utility.yul\":19852:19870   */\n      add\n        /* \"#utility.yul\":19845:19893   */\n      mstore\n        /* \"#utility.yul\":19910:20018   */\n      tag_482\n        /* \"#utility.yul\":20013:20017   */\n      dup2\n        /* \"#utility.yul\":20004:20010   */\n      dup5\n        /* \"#utility.yul\":19910:20018   */\n      tag_355\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":19902:20018   */\n      swap1\n      pop\n        /* \"#utility.yul\":19391:20025   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20031:20241   */\n    tag_23:\n        /* \"#utility.yul\":20118:20122   */\n      0x00\n        /* \"#utility.yul\":20156:20158   */\n      0x20\n        /* \"#utility.yul\":20145:20154   */\n      dup3\n        /* \"#utility.yul\":20141:20159   */\n      add\n        /* \"#utility.yul\":20133:20159   */\n      swap1\n      pop\n        /* \"#utility.yul\":20169:20234   */\n      tag_484\n        /* \"#utility.yul\":20231:20232   */\n      0x00\n        /* \"#utility.yul\":20220:20229   */\n      dup4\n        /* \"#utility.yul\":20216:20233   */\n      add\n        /* \"#utility.yul\":20207:20213   */\n      dup5\n        /* \"#utility.yul\":20169:20234   */\n      tag_369\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":20031:20241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20247:20560   */\n    tag_29:\n        /* \"#utility.yul\":20360:20364   */\n      0x00\n        /* \"#utility.yul\":20398:20400   */\n      0x20\n        /* \"#utility.yul\":20387:20396   */\n      dup3\n        /* \"#utility.yul\":20383:20401   */\n      add\n        /* \"#utility.yul\":20375:20401   */\n      swap1\n      pop\n        /* \"#utility.yul\":20447:20456   */\n      dup2\n        /* \"#utility.yul\":20441:20445   */\n      dup2\n        /* \"#utility.yul\":20437:20457   */\n      sub\n        /* \"#utility.yul\":20433:20434   */\n      0x00\n        /* \"#utility.yul\":20422:20431   */\n      dup4\n        /* \"#utility.yul\":20418:20435   */\n      add\n        /* \"#utility.yul\":20411:20458   */\n      mstore\n        /* \"#utility.yul\":20475:20553   */\n      tag_486\n        /* \"#utility.yul\":20548:20552   */\n      dup2\n        /* \"#utility.yul\":20539:20545   */\n      dup5\n        /* \"#utility.yul\":20475:20553   */\n      tag_383\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":20467:20553   */\n      swap1\n      pop\n        /* \"#utility.yul\":20247:20560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20566:20985   */\n    tag_74:\n        /* \"#utility.yul\":20732:20736   */\n      0x00\n        /* \"#utility.yul\":20770:20772   */\n      0x20\n        /* \"#utility.yul\":20759:20768   */\n      dup3\n        /* \"#utility.yul\":20755:20773   */\n      add\n        /* \"#utility.yul\":20747:20773   */\n      swap1\n      pop\n        /* \"#utility.yul\":20819:20828   */\n      dup2\n        /* \"#utility.yul\":20813:20817   */\n      dup2\n        /* \"#utility.yul\":20809:20829   */\n      sub\n        /* \"#utility.yul\":20805:20806   */\n      0x00\n        /* \"#utility.yul\":20794:20803   */\n      dup4\n        /* \"#utility.yul\":20790:20807   */\n      add\n        /* \"#utility.yul\":20783:20830   */\n      mstore\n        /* \"#utility.yul\":20847:20978   */\n      tag_488\n        /* \"#utility.yul\":20973:20977   */\n      dup2\n        /* \"#utility.yul\":20847:20978   */\n      tag_397\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":20839:20978   */\n      swap1\n      pop\n        /* \"#utility.yul\":20566:20985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20991:21410   */\n    tag_175:\n        /* \"#utility.yul\":21157:21161   */\n      0x00\n        /* \"#utility.yul\":21195:21197   */\n      0x20\n        /* \"#utility.yul\":21184:21193   */\n      dup3\n        /* \"#utility.yul\":21180:21198   */\n      add\n        /* \"#utility.yul\":21172:21198   */\n      swap1\n      pop\n        /* \"#utility.yul\":21244:21253   */\n      dup2\n        /* \"#utility.yul\":21238:21242   */\n      dup2\n        /* \"#utility.yul\":21234:21254   */\n      sub\n        /* \"#utility.yul\":21230:21231   */\n      0x00\n        /* \"#utility.yul\":21219:21228   */\n      dup4\n        /* \"#utility.yul\":21215:21232   */\n      add\n        /* \"#utility.yul\":21208:21255   */\n      mstore\n        /* \"#utility.yul\":21272:21403   */\n      tag_490\n        /* \"#utility.yul\":21398:21402   */\n      dup2\n        /* \"#utility.yul\":21272:21403   */\n      tag_402\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":21264:21403   */\n      swap1\n      pop\n        /* \"#utility.yul\":20991:21410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21416:21835   */\n    tag_171:\n        /* \"#utility.yul\":21582:21586   */\n      0x00\n        /* \"#utility.yul\":21620:21622   */\n      0x20\n        /* \"#utility.yul\":21609:21618   */\n      dup3\n        /* \"#utility.yul\":21605:21623   */\n      add\n        /* \"#utility.yul\":21597:21623   */\n      swap1\n      pop\n        /* \"#utility.yul\":21669:21678   */\n      dup2\n        /* \"#utility.yul\":21663:21667   */\n      dup2\n        /* \"#utility.yul\":21659:21679   */\n      sub\n        /* \"#utility.yul\":21655:21656   */\n      0x00\n        /* \"#utility.yul\":21644:21653   */\n      dup4\n        /* \"#utility.yul\":21640:21657   */\n      add\n        /* \"#utility.yul\":21633:21680   */\n      mstore\n        /* \"#utility.yul\":21697:21828   */\n      tag_492\n        /* \"#utility.yul\":21823:21827   */\n      dup2\n        /* \"#utility.yul\":21697:21828   */\n      tag_407\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":21689:21828   */\n      swap1\n      pop\n        /* \"#utility.yul\":21416:21835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21841:22260   */\n    tag_132:\n        /* \"#utility.yul\":22007:22011   */\n      0x00\n        /* \"#utility.yul\":22045:22047   */\n      0x20\n        /* \"#utility.yul\":22034:22043   */\n      dup3\n        /* \"#utility.yul\":22030:22048   */\n      add\n        /* \"#utility.yul\":22022:22048   */\n      swap1\n      pop\n        /* \"#utility.yul\":22094:22103   */\n      dup2\n        /* \"#utility.yul\":22088:22092   */\n      dup2\n        /* \"#utility.yul\":22084:22104   */\n      sub\n        /* \"#utility.yul\":22080:22081   */\n      0x00\n        /* \"#utility.yul\":22069:22078   */\n      dup4\n        /* \"#utility.yul\":22065:22082   */\n      add\n        /* \"#utility.yul\":22058:22105   */\n      mstore\n        /* \"#utility.yul\":22122:22253   */\n      tag_494\n        /* \"#utility.yul\":22248:22252   */\n      dup2\n        /* \"#utility.yul\":22122:22253   */\n      tag_412\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":22114:22253   */\n      swap1\n      pop\n        /* \"#utility.yul\":21841:22260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22266:22685   */\n    tag_193:\n        /* \"#utility.yul\":22432:22436   */\n      0x00\n        /* \"#utility.yul\":22470:22472   */\n      0x20\n        /* \"#utility.yul\":22459:22468   */\n      dup3\n        /* \"#utility.yul\":22455:22473   */\n      add\n        /* \"#utility.yul\":22447:22473   */\n      swap1\n      pop\n        /* \"#utility.yul\":22519:22528   */\n      dup2\n        /* \"#utility.yul\":22513:22517   */\n      dup2\n        /* \"#utility.yul\":22509:22529   */\n      sub\n        /* \"#utility.yul\":22505:22506   */\n      0x00\n        /* \"#utility.yul\":22494:22503   */\n      dup4\n        /* \"#utility.yul\":22490:22507   */\n      add\n        /* \"#utility.yul\":22483:22530   */\n      mstore\n        /* \"#utility.yul\":22547:22678   */\n      tag_496\n        /* \"#utility.yul\":22673:22677   */\n      dup2\n        /* \"#utility.yul\":22547:22678   */\n      tag_417\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":22539:22678   */\n      swap1\n      pop\n        /* \"#utility.yul\":22266:22685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22691:23110   */\n    tag_93:\n        /* \"#utility.yul\":22857:22861   */\n      0x00\n        /* \"#utility.yul\":22895:22897   */\n      0x20\n        /* \"#utility.yul\":22884:22893   */\n      dup3\n        /* \"#utility.yul\":22880:22898   */\n      add\n        /* \"#utility.yul\":22872:22898   */\n      swap1\n      pop\n        /* \"#utility.yul\":22944:22953   */\n      dup2\n        /* \"#utility.yul\":22938:22942   */\n      dup2\n        /* \"#utility.yul\":22934:22954   */\n      sub\n        /* \"#utility.yul\":22930:22931   */\n      0x00\n        /* \"#utility.yul\":22919:22928   */\n      dup4\n        /* \"#utility.yul\":22915:22932   */\n      add\n        /* \"#utility.yul\":22908:22955   */\n      mstore\n        /* \"#utility.yul\":22972:23103   */\n      tag_498\n        /* \"#utility.yul\":23098:23102   */\n      dup2\n        /* \"#utility.yul\":22972:23103   */\n      tag_422\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":22964:23103   */\n      swap1\n      pop\n        /* \"#utility.yul\":22691:23110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23116:23535   */\n    tag_56:\n        /* \"#utility.yul\":23282:23286   */\n      0x00\n        /* \"#utility.yul\":23320:23322   */\n      0x20\n        /* \"#utility.yul\":23309:23318   */\n      dup3\n        /* \"#utility.yul\":23305:23323   */\n      add\n        /* \"#utility.yul\":23297:23323   */\n      swap1\n      pop\n        /* \"#utility.yul\":23369:23378   */\n      dup2\n        /* \"#utility.yul\":23363:23367   */\n      dup2\n        /* \"#utility.yul\":23359:23379   */\n      sub\n        /* \"#utility.yul\":23355:23356   */\n      0x00\n        /* \"#utility.yul\":23344:23353   */\n      dup4\n        /* \"#utility.yul\":23340:23357   */\n      add\n        /* \"#utility.yul\":23333:23380   */\n      mstore\n        /* \"#utility.yul\":23397:23528   */\n      tag_500\n        /* \"#utility.yul\":23523:23527   */\n      dup2\n        /* \"#utility.yul\":23397:23528   */\n      tag_427\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":23389:23528   */\n      swap1\n      pop\n        /* \"#utility.yul\":23116:23535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23541:23960   */\n    tag_189:\n        /* \"#utility.yul\":23707:23711   */\n      0x00\n        /* \"#utility.yul\":23745:23747   */\n      0x20\n        /* \"#utility.yul\":23734:23743   */\n      dup3\n        /* \"#utility.yul\":23730:23748   */\n      add\n        /* \"#utility.yul\":23722:23748   */\n      swap1\n      pop\n        /* \"#utility.yul\":23794:23803   */\n      dup2\n        /* \"#utility.yul\":23788:23792   */\n      dup2\n        /* \"#utility.yul\":23784:23804   */\n      sub\n        /* \"#utility.yul\":23780:23781   */\n      0x00\n        /* \"#utility.yul\":23769:23778   */\n      dup4\n        /* \"#utility.yul\":23765:23782   */\n      add\n        /* \"#utility.yul\":23758:23805   */\n      mstore\n        /* \"#utility.yul\":23822:23953   */\n      tag_502\n        /* \"#utility.yul\":23948:23952   */\n      dup2\n        /* \"#utility.yul\":23822:23953   */\n      tag_432\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":23814:23953   */\n      swap1\n      pop\n        /* \"#utility.yul\":23541:23960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23966:24385   */\n    tag_80:\n        /* \"#utility.yul\":24132:24136   */\n      0x00\n        /* \"#utility.yul\":24170:24172   */\n      0x20\n        /* \"#utility.yul\":24159:24168   */\n      dup3\n        /* \"#utility.yul\":24155:24173   */\n      add\n        /* \"#utility.yul\":24147:24173   */\n      swap1\n      pop\n        /* \"#utility.yul\":24219:24228   */\n      dup2\n        /* \"#utility.yul\":24213:24217   */\n      dup2\n        /* \"#utility.yul\":24209:24229   */\n      sub\n        /* \"#utility.yul\":24205:24206   */\n      0x00\n        /* \"#utility.yul\":24194:24203   */\n      dup4\n        /* \"#utility.yul\":24190:24207   */\n      add\n        /* \"#utility.yul\":24183:24230   */\n      mstore\n        /* \"#utility.yul\":24247:24378   */\n      tag_504\n        /* \"#utility.yul\":24373:24377   */\n      dup2\n        /* \"#utility.yul\":24247:24378   */\n      tag_437\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":24239:24378   */\n      swap1\n      pop\n        /* \"#utility.yul\":23966:24385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24391:24810   */\n    tag_124:\n        /* \"#utility.yul\":24557:24561   */\n      0x00\n        /* \"#utility.yul\":24595:24597   */\n      0x20\n        /* \"#utility.yul\":24584:24593   */\n      dup3\n        /* \"#utility.yul\":24580:24598   */\n      add\n        /* \"#utility.yul\":24572:24598   */\n      swap1\n      pop\n        /* \"#utility.yul\":24644:24653   */\n      dup2\n        /* \"#utility.yul\":24638:24642   */\n      dup2\n        /* \"#utility.yul\":24634:24654   */\n      sub\n        /* \"#utility.yul\":24630:24631   */\n      0x00\n        /* \"#utility.yul\":24619:24628   */\n      dup4\n        /* \"#utility.yul\":24615:24632   */\n      add\n        /* \"#utility.yul\":24608:24655   */\n      mstore\n        /* \"#utility.yul\":24672:24803   */\n      tag_506\n        /* \"#utility.yul\":24798:24802   */\n      dup2\n        /* \"#utility.yul\":24672:24803   */\n      tag_442\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":24664:24803   */\n      swap1\n      pop\n        /* \"#utility.yul\":24391:24810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24816:25235   */\n    tag_105:\n        /* \"#utility.yul\":24982:24986   */\n      0x00\n        /* \"#utility.yul\":25020:25022   */\n      0x20\n        /* \"#utility.yul\":25009:25018   */\n      dup3\n        /* \"#utility.yul\":25005:25023   */\n      add\n        /* \"#utility.yul\":24997:25023   */\n      swap1\n      pop\n        /* \"#utility.yul\":25069:25078   */\n      dup2\n        /* \"#utility.yul\":25063:25067   */\n      dup2\n        /* \"#utility.yul\":25059:25079   */\n      sub\n        /* \"#utility.yul\":25055:25056   */\n      0x00\n        /* \"#utility.yul\":25044:25053   */\n      dup4\n        /* \"#utility.yul\":25040:25057   */\n      add\n        /* \"#utility.yul\":25033:25080   */\n      mstore\n        /* \"#utility.yul\":25097:25228   */\n      tag_508\n        /* \"#utility.yul\":25223:25227   */\n      dup2\n        /* \"#utility.yul\":25097:25228   */\n      tag_447\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":25089:25228   */\n      swap1\n      pop\n        /* \"#utility.yul\":24816:25235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25241:25660   */\n    tag_77:\n        /* \"#utility.yul\":25407:25411   */\n      0x00\n        /* \"#utility.yul\":25445:25447   */\n      0x20\n        /* \"#utility.yul\":25434:25443   */\n      dup3\n        /* \"#utility.yul\":25430:25448   */\n      add\n        /* \"#utility.yul\":25422:25448   */\n      swap1\n      pop\n        /* \"#utility.yul\":25494:25503   */\n      dup2\n        /* \"#utility.yul\":25488:25492   */\n      dup2\n        /* \"#utility.yul\":25484:25504   */\n      sub\n        /* \"#utility.yul\":25480:25481   */\n      0x00\n        /* \"#utility.yul\":25469:25478   */\n      dup4\n        /* \"#utility.yul\":25465:25482   */\n      add\n        /* \"#utility.yul\":25458:25505   */\n      mstore\n        /* \"#utility.yul\":25522:25653   */\n      tag_510\n        /* \"#utility.yul\":25648:25652   */\n      dup2\n        /* \"#utility.yul\":25522:25653   */\n      tag_452\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":25514:25653   */\n      swap1\n      pop\n        /* \"#utility.yul\":25241:25660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25666:25888   */\n    tag_17:\n        /* \"#utility.yul\":25759:25763   */\n      0x00\n        /* \"#utility.yul\":25797:25799   */\n      0x20\n        /* \"#utility.yul\":25786:25795   */\n      dup3\n        /* \"#utility.yul\":25782:25800   */\n      add\n        /* \"#utility.yul\":25774:25800   */\n      swap1\n      pop\n        /* \"#utility.yul\":25810:25881   */\n      tag_512\n        /* \"#utility.yul\":25878:25879   */\n      0x00\n        /* \"#utility.yul\":25867:25876   */\n      dup4\n        /* \"#utility.yul\":25863:25880   */\n      add\n        /* \"#utility.yul\":25854:25860   */\n      dup5\n        /* \"#utility.yul\":25810:25881   */\n      tag_460\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":25666:25888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25894:26226   */\n    tag_142:\n        /* \"#utility.yul\":26015:26019   */\n      0x00\n        /* \"#utility.yul\":26053:26055   */\n      0x40\n        /* \"#utility.yul\":26042:26051   */\n      dup3\n        /* \"#utility.yul\":26038:26056   */\n      add\n        /* \"#utility.yul\":26030:26056   */\n      swap1\n      pop\n        /* \"#utility.yul\":26066:26137   */\n      tag_514\n        /* \"#utility.yul\":26134:26135   */\n      0x00\n        /* \"#utility.yul\":26123:26132   */\n      dup4\n        /* \"#utility.yul\":26119:26136   */\n      add\n        /* \"#utility.yul\":26110:26116   */\n      dup6\n        /* \"#utility.yul\":26066:26137   */\n      tag_460\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":26147:26219   */\n      tag_515\n        /* \"#utility.yul\":26215:26217   */\n      0x20\n        /* \"#utility.yul\":26204:26213   */\n      dup4\n        /* \"#utility.yul\":26200:26218   */\n      add\n        /* \"#utility.yul\":26191:26197   */\n      dup5\n        /* \"#utility.yul\":26147:26219   */\n      tag_460\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":25894:26226   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26232:26361   */\n    tag_221:\n        /* \"#utility.yul\":26266:26272   */\n      0x00\n        /* \"#utility.yul\":26293:26313   */\n      tag_517\n      tag_518\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":26283:26313   */\n      swap1\n      pop\n        /* \"#utility.yul\":26322:26355   */\n      tag_519\n        /* \"#utility.yul\":26350:26354   */\n      dup3\n        /* \"#utility.yul\":26342:26348   */\n      dup3\n        /* \"#utility.yul\":26322:26355   */\n      tag_520\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":26232:26361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26367:26442   */\n    tag_518:\n        /* \"#utility.yul\":26400:26406   */\n      0x00\n        /* \"#utility.yul\":26433:26435   */\n      0x40\n        /* \"#utility.yul\":26427:26436   */\n      mload\n        /* \"#utility.yul\":26417:26436   */\n      swap1\n      pop\n        /* \"#utility.yul\":26367:26442   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":26448:26759   */\n    tag_220:\n        /* \"#utility.yul\":26525:26529   */\n      0x00\n        /* \"#utility.yul\":26615:26633   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26607:26613   */\n      dup3\n        /* \"#utility.yul\":26604:26634   */\n      gt\n        /* \"#utility.yul\":26601:26657   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":26637:26655   */\n      tag_524\n      tag_108\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":26601:26657   */\n    tag_523:\n        /* \"#utility.yul\":26687:26691   */\n      0x20\n        /* \"#utility.yul\":26679:26685   */\n      dup3\n        /* \"#utility.yul\":26675:26692   */\n      mul\n        /* \"#utility.yul\":26667:26692   */\n      swap1\n      pop\n        /* \"#utility.yul\":26747:26751   */\n      0x20\n        /* \"#utility.yul\":26741:26745   */\n      dup2\n        /* \"#utility.yul\":26737:26752   */\n      add\n        /* \"#utility.yul\":26729:26752   */\n      swap1\n      pop\n        /* \"#utility.yul\":26448:26759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26765:27076   */\n    tag_234:\n        /* \"#utility.yul\":26842:26846   */\n      0x00\n        /* \"#utility.yul\":26932:26950   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26924:26930   */\n      dup3\n        /* \"#utility.yul\":26921:26951   */\n      gt\n        /* \"#utility.yul\":26918:26974   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":26954:26972   */\n      tag_527\n      tag_108\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":26918:26974   */\n    tag_526:\n        /* \"#utility.yul\":27004:27008   */\n      0x20\n        /* \"#utility.yul\":26996:27002   */\n      dup3\n        /* \"#utility.yul\":26992:27009   */\n      mul\n        /* \"#utility.yul\":26984:27009   */\n      swap1\n      pop\n        /* \"#utility.yul\":27064:27068   */\n      0x20\n        /* \"#utility.yul\":27058:27062   */\n      dup2\n        /* \"#utility.yul\":27054:27069   */\n      add\n        /* \"#utility.yul\":27046:27069   */\n      swap1\n      pop\n        /* \"#utility.yul\":26765:27076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27082:27389   */\n    tag_246:\n        /* \"#utility.yul\":27143:27147   */\n      0x00\n        /* \"#utility.yul\":27233:27251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27225:27231   */\n      dup3\n        /* \"#utility.yul\":27222:27252   */\n      gt\n        /* \"#utility.yul\":27219:27275   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":27255:27273   */\n      tag_530\n      tag_108\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":27219:27275   */\n    tag_529:\n        /* \"#utility.yul\":27293:27322   */\n      tag_531\n        /* \"#utility.yul\":27315:27321   */\n      dup3\n        /* \"#utility.yul\":27293:27322   */\n      tag_382\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":27285:27322   */\n      swap1\n      pop\n        /* \"#utility.yul\":27377:27381   */\n      0x20\n        /* \"#utility.yul\":27371:27375   */\n      dup2\n        /* \"#utility.yul\":27367:27382   */\n      add\n        /* \"#utility.yul\":27359:27382   */\n      swap1\n      pop\n        /* \"#utility.yul\":27082:27389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27395:27527   */\n    tag_362:\n        /* \"#utility.yul\":27462:27466   */\n      0x00\n        /* \"#utility.yul\":27485:27488   */\n      dup2\n        /* \"#utility.yul\":27477:27488   */\n      swap1\n      pop\n        /* \"#utility.yul\":27515:27519   */\n      0x20\n        /* \"#utility.yul\":27510:27513   */\n      dup3\n        /* \"#utility.yul\":27506:27520   */\n      add\n        /* \"#utility.yul\":27498:27520   */\n      swap1\n      pop\n        /* \"#utility.yul\":27395:27527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27533:27647   */\n    tag_358:\n        /* \"#utility.yul\":27600:27606   */\n      0x00\n        /* \"#utility.yul\":27634:27639   */\n      dup2\n        /* \"#utility.yul\":27628:27640   */\n      mload\n        /* \"#utility.yul\":27618:27640   */\n      swap1\n      pop\n        /* \"#utility.yul\":27533:27647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27653:27751   */\n    tag_376:\n        /* \"#utility.yul\":27704:27710   */\n      0x00\n        /* \"#utility.yul\":27738:27743   */\n      dup2\n        /* \"#utility.yul\":27732:27744   */\n      mload\n        /* \"#utility.yul\":27722:27744   */\n      swap1\n      pop\n        /* \"#utility.yul\":27653:27751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27757:27856   */\n    tag_386:\n        /* \"#utility.yul\":27809:27815   */\n      0x00\n        /* \"#utility.yul\":27843:27848   */\n      dup2\n        /* \"#utility.yul\":27837:27849   */\n      mload\n        /* \"#utility.yul\":27827:27849   */\n      swap1\n      pop\n        /* \"#utility.yul\":27757:27856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27862:27975   */\n    tag_368:\n        /* \"#utility.yul\":27932:27936   */\n      0x00\n        /* \"#utility.yul\":27964:27968   */\n      0x20\n        /* \"#utility.yul\":27959:27962   */\n      dup3\n        /* \"#utility.yul\":27955:27969   */\n      add\n        /* \"#utility.yul\":27947:27969   */\n      swap1\n      pop\n        /* \"#utility.yul\":27862:27975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27981:28165   */\n    tag_360:\n        /* \"#utility.yul\":28080:28091   */\n      0x00\n        /* \"#utility.yul\":28114:28120   */\n      dup3\n        /* \"#utility.yul\":28109:28112   */\n      dup3\n        /* \"#utility.yul\":28102:28121   */\n      mstore\n        /* \"#utility.yul\":28154:28158   */\n      0x20\n        /* \"#utility.yul\":28149:28152   */\n      dup3\n        /* \"#utility.yul\":28145:28159   */\n      add\n        /* \"#utility.yul\":28130:28159   */\n      swap1\n      pop\n        /* \"#utility.yul\":27981:28165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28171:28339   */\n    tag_378:\n        /* \"#utility.yul\":28254:28265   */\n      0x00\n        /* \"#utility.yul\":28288:28294   */\n      dup3\n        /* \"#utility.yul\":28283:28286   */\n      dup3\n        /* \"#utility.yul\":28276:28295   */\n      mstore\n        /* \"#utility.yul\":28328:28332   */\n      0x20\n        /* \"#utility.yul\":28323:28326   */\n      dup3\n        /* \"#utility.yul\":28319:28333   */\n      add\n        /* \"#utility.yul\":28304:28333   */\n      swap1\n      pop\n        /* \"#utility.yul\":28171:28339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28345:28514   */\n    tag_388:\n        /* \"#utility.yul\":28429:28440   */\n      0x00\n        /* \"#utility.yul\":28463:28469   */\n      dup3\n        /* \"#utility.yul\":28458:28461   */\n      dup3\n        /* \"#utility.yul\":28451:28470   */\n      mstore\n        /* \"#utility.yul\":28503:28507   */\n      0x20\n        /* \"#utility.yul\":28498:28501   */\n      dup3\n        /* \"#utility.yul\":28494:28508   */\n      add\n        /* \"#utility.yul\":28479:28508   */\n      swap1\n      pop\n        /* \"#utility.yul\":28345:28514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28520:28668   */\n    tag_395:\n        /* \"#utility.yul\":28622:28633   */\n      0x00\n        /* \"#utility.yul\":28659:28662   */\n      dup2\n        /* \"#utility.yul\":28644:28662   */\n      swap1\n      pop\n        /* \"#utility.yul\":28520:28668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28674:28979   */\n    tag_97:\n        /* \"#utility.yul\":28714:28717   */\n      0x00\n        /* \"#utility.yul\":28733:28753   */\n      tag_542\n        /* \"#utility.yul\":28751:28752   */\n      dup3\n        /* \"#utility.yul\":28733:28753   */\n      tag_459\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":28728:28753   */\n      swap2\n      pop\n        /* \"#utility.yul\":28767:28787   */\n      tag_543\n        /* \"#utility.yul\":28785:28786   */\n      dup4\n        /* \"#utility.yul\":28767:28787   */\n      tag_459\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":28762:28787   */\n      swap3\n      pop\n        /* \"#utility.yul\":28921:28922   */\n      dup3\n        /* \"#utility.yul\":28853:28919   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28849:28923   */\n      sub\n        /* \"#utility.yul\":28846:28847   */\n      dup3\n        /* \"#utility.yul\":28843:28924   */\n      gt\n        /* \"#utility.yul\":28840:28947   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":28927:28945   */\n      tag_545\n      tag_546\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":28840:28947   */\n    tag_544:\n        /* \"#utility.yul\":28971:28972   */\n      dup3\n        /* \"#utility.yul\":28968:28969   */\n      dup3\n        /* \"#utility.yul\":28964:28973   */\n      add\n        /* \"#utility.yul\":28957:28973   */\n      swap1\n      pop\n        /* \"#utility.yul\":28674:28979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28985:29176   */\n    tag_95:\n        /* \"#utility.yul\":29025:29029   */\n      0x00\n        /* \"#utility.yul\":29045:29065   */\n      tag_548\n        /* \"#utility.yul\":29063:29064   */\n      dup3\n        /* \"#utility.yul\":29045:29065   */\n      tag_459\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":29040:29065   */\n      swap2\n      pop\n        /* \"#utility.yul\":29079:29099   */\n      tag_549\n        /* \"#utility.yul\":29097:29098   */\n      dup4\n        /* \"#utility.yul\":29079:29099   */\n      tag_459\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":29074:29099   */\n      swap3\n      pop\n        /* \"#utility.yul\":29118:29119   */\n      dup3\n        /* \"#utility.yul\":29115:29116   */\n      dup3\n        /* \"#utility.yul\":29112:29120   */\n      lt\n        /* \"#utility.yul\":29109:29143   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":29123:29141   */\n      tag_551\n      tag_546\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":29109:29143   */\n    tag_550:\n        /* \"#utility.yul\":29168:29169   */\n      dup3\n        /* \"#utility.yul\":29165:29166   */\n      dup3\n        /* \"#utility.yul\":29161:29170   */\n      sub\n        /* \"#utility.yul\":29153:29170   */\n      swap1\n      pop\n        /* \"#utility.yul\":28985:29176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29182:29278   */\n    tag_354:\n        /* \"#utility.yul\":29219:29226   */\n      0x00\n        /* \"#utility.yul\":29248:29272   */\n      tag_553\n        /* \"#utility.yul\":29266:29271   */\n      dup3\n        /* \"#utility.yul\":29248:29272   */\n      tag_554\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":29237:29272   */\n      swap1\n      pop\n        /* \"#utility.yul\":29182:29278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29284:29374   */\n    tag_372:\n        /* \"#utility.yul\":29318:29325   */\n      0x00\n        /* \"#utility.yul\":29361:29366   */\n      dup2\n        /* \"#utility.yul\":29354:29367   */\n      iszero\n        /* \"#utility.yul\":29347:29368   */\n      iszero\n        /* \"#utility.yul\":29336:29368   */\n      swap1\n      pop\n        /* \"#utility.yul\":29284:29374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29380:29529   */\n    tag_556:\n        /* \"#utility.yul\":29416:29423   */\n      0x00\n        /* \"#utility.yul\":29456:29522   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29449:29454   */\n      dup3\n        /* \"#utility.yul\":29445:29523   */\n      and\n        /* \"#utility.yul\":29434:29523   */\n      swap1\n      pop\n        /* \"#utility.yul\":29380:29529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29535:29661   */\n    tag_554:\n        /* \"#utility.yul\":29572:29579   */\n      0x00\n        /* \"#utility.yul\":29612:29654   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":29605:29610   */\n      dup3\n        /* \"#utility.yul\":29601:29655   */\n      and\n        /* \"#utility.yul\":29590:29655   */\n      swap1\n      pop\n        /* \"#utility.yul\":29535:29661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29667:29744   */\n    tag_459:\n        /* \"#utility.yul\":29704:29711   */\n      0x00\n        /* \"#utility.yul\":29733:29738   */\n      dup2\n        /* \"#utility.yul\":29722:29738   */\n      swap1\n      pop\n        /* \"#utility.yul\":29667:29744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29750:29904   */\n    tag_251:\n        /* \"#utility.yul\":29834:29840   */\n      dup3\n        /* \"#utility.yul\":29829:29832   */\n      dup2\n        /* \"#utility.yul\":29824:29827   */\n      dup4\n        /* \"#utility.yul\":29811:29841   */\n      calldatacopy\n        /* \"#utility.yul\":29896:29897   */\n      0x00\n        /* \"#utility.yul\":29887:29893   */\n      dup4\n        /* \"#utility.yul\":29882:29885   */\n      dup4\n        /* \"#utility.yul\":29878:29894   */\n      add\n        /* \"#utility.yul\":29871:29898   */\n      mstore\n        /* \"#utility.yul\":29750:29904   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29910:30217   */\n    tag_380:\n        /* \"#utility.yul\":29978:29979   */\n      0x00\n        /* \"#utility.yul\":29988:30101   */\n    tag_562:\n        /* \"#utility.yul\":30002:30008   */\n      dup4\n        /* \"#utility.yul\":29999:30000   */\n      dup2\n        /* \"#utility.yul\":29996:30009   */\n      lt\n        /* \"#utility.yul\":29988:30101   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":30087:30088   */\n      dup1\n        /* \"#utility.yul\":30082:30085   */\n      dup3\n        /* \"#utility.yul\":30078:30089   */\n      add\n        /* \"#utility.yul\":30072:30090   */\n      mload\n        /* \"#utility.yul\":30068:30069   */\n      dup2\n        /* \"#utility.yul\":30063:30066   */\n      dup5\n        /* \"#utility.yul\":30059:30070   */\n      add\n        /* \"#utility.yul\":30052:30091   */\n      mstore\n        /* \"#utility.yul\":30024:30026   */\n      0x20\n        /* \"#utility.yul\":30021:30022   */\n      dup2\n        /* \"#utility.yul\":30017:30027   */\n      add\n        /* \"#utility.yul\":30012:30027   */\n      swap1\n      pop\n        /* \"#utility.yul\":29988:30101   */\n      jump(tag_562)\n    tag_564:\n        /* \"#utility.yul\":30119:30125   */\n      dup4\n        /* \"#utility.yul\":30116:30117   */\n      dup2\n        /* \"#utility.yul\":30113:30126   */\n      gt\n        /* \"#utility.yul\":30110:30211   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":30199:30200   */\n      0x00\n        /* \"#utility.yul\":30190:30196   */\n      dup5\n        /* \"#utility.yul\":30185:30188   */\n      dup5\n        /* \"#utility.yul\":30181:30197   */\n      add\n        /* \"#utility.yul\":30174:30201   */\n      mstore\n        /* \"#utility.yul\":30110:30211   */\n    tag_565:\n        /* \"#utility.yul\":29959:30217   */\n      pop\n        /* \"#utility.yul\":29910:30217   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30223:30504   */\n    tag_520:\n        /* \"#utility.yul\":30306:30333   */\n      tag_567\n        /* \"#utility.yul\":30328:30332   */\n      dup3\n        /* \"#utility.yul\":30306:30333   */\n      tag_382\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":30298:30304   */\n      dup2\n        /* \"#utility.yul\":30294:30334   */\n      add\n        /* \"#utility.yul\":30436:30442   */\n      dup2\n        /* \"#utility.yul\":30424:30434   */\n      dup2\n        /* \"#utility.yul\":30421:30443   */\n      lt\n        /* \"#utility.yul\":30400:30418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30388:30398   */\n      dup3\n        /* \"#utility.yul\":30385:30419   */\n      gt\n        /* \"#utility.yul\":30382:30444   */\n      or\n        /* \"#utility.yul\":30379:30467   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":30447:30465   */\n      tag_569\n      tag_108\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":30379:30467   */\n    tag_568:\n        /* \"#utility.yul\":30487:30497   */\n      dup1\n        /* \"#utility.yul\":30483:30485   */\n      0x40\n        /* \"#utility.yul\":30476:30498   */\n      mstore\n        /* \"#utility.yul\":30266:30504   */\n      pop\n        /* \"#utility.yul\":30223:30504   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30510:30743   */\n    tag_99:\n        /* \"#utility.yul\":30549:30552   */\n      0x00\n        /* \"#utility.yul\":30572:30596   */\n      tag_571\n        /* \"#utility.yul\":30590:30595   */\n      dup3\n        /* \"#utility.yul\":30572:30596   */\n      tag_459\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":30563:30596   */\n      swap2\n      pop\n        /* \"#utility.yul\":30618:30684   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":30611:30616   */\n      dup3\n        /* \"#utility.yul\":30608:30685   */\n      eq\n        /* \"#utility.yul\":30605:30708   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":30688:30706   */\n      tag_573\n      tag_546\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":30605:30708   */\n    tag_572:\n        /* \"#utility.yul\":30735:30736   */\n      0x01\n        /* \"#utility.yul\":30728:30733   */\n      dup3\n        /* \"#utility.yul\":30724:30737   */\n      add\n        /* \"#utility.yul\":30717:30737   */\n      swap1\n      pop\n        /* \"#utility.yul\":30510:30743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30749:30929   */\n    tag_546:\n        /* \"#utility.yul\":30797:30874   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30794:30795   */\n      0x00\n        /* \"#utility.yul\":30787:30875   */\n      mstore\n        /* \"#utility.yul\":30894:30898   */\n      0x11\n        /* \"#utility.yul\":30891:30892   */\n      0x04\n        /* \"#utility.yul\":30884:30899   */\n      mstore\n        /* \"#utility.yul\":30918:30922   */\n      0x24\n        /* \"#utility.yul\":30915:30916   */\n      0x00\n        /* \"#utility.yul\":30908:30923   */\n      revert\n        /* \"#utility.yul\":30935:31115   */\n    tag_154:\n        /* \"#utility.yul\":30983:31060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30980:30981   */\n      0x00\n        /* \"#utility.yul\":30973:31061   */\n      mstore\n        /* \"#utility.yul\":31080:31084   */\n      0x12\n        /* \"#utility.yul\":31077:31078   */\n      0x04\n        /* \"#utility.yul\":31070:31085   */\n      mstore\n        /* \"#utility.yul\":31104:31108   */\n      0x24\n        /* \"#utility.yul\":31101:31102   */\n      0x00\n        /* \"#utility.yul\":31094:31109   */\n      revert\n        /* \"#utility.yul\":31121:31301   */\n    tag_88:\n        /* \"#utility.yul\":31169:31246   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31166:31167   */\n      0x00\n        /* \"#utility.yul\":31159:31247   */\n      mstore\n        /* \"#utility.yul\":31266:31270   */\n      0x32\n        /* \"#utility.yul\":31263:31264   */\n      0x04\n        /* \"#utility.yul\":31256:31271   */\n      mstore\n        /* \"#utility.yul\":31290:31294   */\n      0x24\n        /* \"#utility.yul\":31287:31288   */\n      0x00\n        /* \"#utility.yul\":31280:31295   */\n      revert\n        /* \"#utility.yul\":31307:31487   */\n    tag_108:\n        /* \"#utility.yul\":31355:31432   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31352:31353   */\n      0x00\n        /* \"#utility.yul\":31345:31433   */\n      mstore\n        /* \"#utility.yul\":31452:31456   */\n      0x41\n        /* \"#utility.yul\":31449:31450   */\n      0x04\n        /* \"#utility.yul\":31442:31457   */\n      mstore\n        /* \"#utility.yul\":31476:31480   */\n      0x24\n        /* \"#utility.yul\":31473:31474   */\n      0x00\n        /* \"#utility.yul\":31466:31481   */\n      revert\n        /* \"#utility.yul\":31493:31610   */\n    tag_259:\n        /* \"#utility.yul\":31602:31603   */\n      0x00\n        /* \"#utility.yul\":31599:31600   */\n      dup1\n        /* \"#utility.yul\":31592:31604   */\n      revert\n        /* \"#utility.yul\":31616:31733   */\n    tag_224:\n        /* \"#utility.yul\":31725:31726   */\n      0x00\n        /* \"#utility.yul\":31722:31723   */\n      dup1\n        /* \"#utility.yul\":31715:31727   */\n      revert\n        /* \"#utility.yul\":31739:31856   */\n    tag_249:\n        /* \"#utility.yul\":31848:31849   */\n      0x00\n        /* \"#utility.yul\":31845:31846   */\n      dup1\n        /* \"#utility.yul\":31838:31850   */\n      revert\n        /* \"#utility.yul\":31862:31979   */\n    tag_298:\n        /* \"#utility.yul\":31971:31972   */\n      0x00\n        /* \"#utility.yul\":31968:31969   */\n      dup1\n        /* \"#utility.yul\":31961:31973   */\n      revert\n        /* \"#utility.yul\":31985:32102   */\n    tag_288:\n        /* \"#utility.yul\":32094:32095   */\n      0x00\n        /* \"#utility.yul\":32091:32092   */\n      dup1\n        /* \"#utility.yul\":32084:32096   */\n      revert\n        /* \"#utility.yul\":32108:32210   */\n    tag_382:\n        /* \"#utility.yul\":32149:32155   */\n      0x00\n        /* \"#utility.yul\":32200:32202   */\n      0x1f\n        /* \"#utility.yul\":32196:32203   */\n      not\n        /* \"#utility.yul\":32191:32193   */\n      0x1f\n        /* \"#utility.yul\":32184:32189   */\n      dup4\n        /* \"#utility.yul\":32180:32194   */\n      add\n        /* \"#utility.yul\":32176:32204   */\n      and\n        /* \"#utility.yul\":32166:32204   */\n      swap1\n      pop\n        /* \"#utility.yul\":32108:32210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32216:32450   */\n    tag_401:\n        /* \"#utility.yul\":32356:32390   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":32352:32353   */\n      0x00\n        /* \"#utility.yul\":32344:32350   */\n      dup3\n        /* \"#utility.yul\":32340:32354   */\n      add\n        /* \"#utility.yul\":32333:32391   */\n      mstore\n        /* \"#utility.yul\":32425:32442   */\n      0x6572206e6f7220617070726f7665640000000000000000000000000000000000\n        /* \"#utility.yul\":32420:32422   */\n      0x20\n        /* \"#utility.yul\":32412:32418   */\n      dup3\n        /* \"#utility.yul\":32408:32423   */\n      add\n        /* \"#utility.yul\":32401:32443   */\n      mstore\n        /* \"#utility.yul\":32216:32450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32456:32683   */\n    tag_406:\n        /* \"#utility.yul\":32596:32630   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":32592:32593   */\n      0x00\n        /* \"#utility.yul\":32584:32590   */\n      dup3\n        /* \"#utility.yul\":32580:32594   */\n      add\n        /* \"#utility.yul\":32573:32631   */\n      mstore\n        /* \"#utility.yul\":32665:32675   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32660:32662   */\n      0x20\n        /* \"#utility.yul\":32652:32658   */\n      dup3\n        /* \"#utility.yul\":32648:32663   */\n      add\n        /* \"#utility.yul\":32641:32676   */\n      mstore\n        /* \"#utility.yul\":32456:32683   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32689:32937   */\n    tag_411:\n        /* \"#utility.yul\":32829:32863   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":32825:32826   */\n      0x00\n        /* \"#utility.yul\":32817:32823   */\n      dup3\n        /* \"#utility.yul\":32813:32827   */\n      add\n        /* \"#utility.yul\":32806:32864   */\n      mstore\n        /* \"#utility.yul\":32898:32929   */\n      0x526563656976657220696d706c656d656e74657220636f6e7472616374000000\n        /* \"#utility.yul\":32893:32895   */\n      0x20\n        /* \"#utility.yul\":32885:32891   */\n      dup3\n        /* \"#utility.yul\":32881:32896   */\n      add\n        /* \"#utility.yul\":32874:32930   */\n      mstore\n        /* \"#utility.yul\":32689:32937   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32943:33176   */\n    tag_416:\n        /* \"#utility.yul\":33083:33117   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":33079:33080   */\n      0x00\n        /* \"#utility.yul\":33071:33077   */\n      dup3\n        /* \"#utility.yul\":33067:33081   */\n      add\n        /* \"#utility.yul\":33060:33118   */\n      mstore\n        /* \"#utility.yul\":33152:33168   */\n      0x6572206f7220617070726f766564000000000000000000000000000000000000\n        /* \"#utility.yul\":33147:33149   */\n      0x20\n        /* \"#utility.yul\":33139:33145   */\n      dup3\n        /* \"#utility.yul\":33135:33150   */\n      add\n        /* \"#utility.yul\":33128:33169   */\n      mstore\n        /* \"#utility.yul\":32943:33176   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33182:33364   */\n    tag_421:\n        /* \"#utility.yul\":33322:33356   */\n      0x455243313135353a4552433131353552656365697665722072656a6563746564\n        /* \"#utility.yul\":33318:33319   */\n      0x00\n        /* \"#utility.yul\":33310:33316   */\n      dup3\n        /* \"#utility.yul\":33306:33320   */\n      add\n        /* \"#utility.yul\":33299:33357   */\n      mstore\n        /* \"#utility.yul\":33182:33364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33370:33599   */\n    tag_426:\n        /* \"#utility.yul\":33510:33544   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":33506:33507   */\n      0x00\n        /* \"#utility.yul\":33498:33504   */\n      dup3\n        /* \"#utility.yul\":33494:33508   */\n      add\n        /* \"#utility.yul\":33487:33545   */\n      mstore\n        /* \"#utility.yul\":33579:33591   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33574:33576   */\n      0x20\n        /* \"#utility.yul\":33566:33572   */\n      dup3\n        /* \"#utility.yul\":33562:33577   */\n      add\n        /* \"#utility.yul\":33555:33592   */\n      mstore\n        /* \"#utility.yul\":33370:33599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33605:33835   */\n    tag_431:\n        /* \"#utility.yul\":33745:33779   */\n      0x455243313135353a61646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":33741:33742   */\n      0x00\n        /* \"#utility.yul\":33733:33739   */\n      dup3\n        /* \"#utility.yul\":33729:33743   */\n      add\n        /* \"#utility.yul\":33722:33780   */\n      mstore\n        /* \"#utility.yul\":33814:33827   */\n      0x6c69642061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33809:33811   */\n      0x20\n        /* \"#utility.yul\":33801:33807   */\n      dup3\n        /* \"#utility.yul\":33797:33812   */\n      add\n        /* \"#utility.yul\":33790:33828   */\n      mstore\n        /* \"#utility.yul\":33605:33835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33841:34077   */\n    tag_436:\n        /* \"#utility.yul\":33981:34015   */\n      0x455243313135353a726563656976657220646f206e6f7420696d706c656d656e\n        /* \"#utility.yul\":33977:33978   */\n      0x00\n        /* \"#utility.yul\":33969:33975   */\n      dup3\n        /* \"#utility.yul\":33965:33979   */\n      add\n        /* \"#utility.yul\":33958:34016   */\n      mstore\n        /* \"#utility.yul\":34050:34069   */\n      0x7420455243313135355265636569766572000000000000000000000000000000\n        /* \"#utility.yul\":34045:34047   */\n      0x20\n        /* \"#utility.yul\":34037:34043   */\n      dup3\n        /* \"#utility.yul\":34033:34048   */\n      add\n        /* \"#utility.yul\":34026:34070   */\n      mstore\n        /* \"#utility.yul\":33841:34077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34083:34315   */\n    tag_441:\n        /* \"#utility.yul\":34223:34257   */\n      0x455243313135353a2063616e206e6f74207472616e7366657220746f20746865\n        /* \"#utility.yul\":34219:34220   */\n      0x00\n        /* \"#utility.yul\":34211:34217   */\n      dup3\n        /* \"#utility.yul\":34207:34221   */\n      add\n        /* \"#utility.yul\":34200:34258   */\n      mstore\n        /* \"#utility.yul\":34292:34307   */\n      0x207a65726f206164647265737300000000000000000000000000000000000000\n        /* \"#utility.yul\":34287:34289   */\n      0x20\n        /* \"#utility.yul\":34279:34285   */\n      dup3\n        /* \"#utility.yul\":34275:34290   */\n      add\n        /* \"#utility.yul\":34268:34308   */\n      mstore\n        /* \"#utility.yul\":34083:34315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34321:34549   */\n    tag_446:\n        /* \"#utility.yul\":34461:34495   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":34457:34458   */\n      0x00\n        /* \"#utility.yul\":34449:34455   */\n      dup3\n        /* \"#utility.yul\":34445:34459   */\n      add\n        /* \"#utility.yul\":34438:34496   */\n      mstore\n        /* \"#utility.yul\":34530:34541   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34525:34527   */\n      0x20\n        /* \"#utility.yul\":34517:34523   */\n      dup3\n        /* \"#utility.yul\":34513:34528   */\n      add\n        /* \"#utility.yul\":34506:34542   */\n      mstore\n        /* \"#utility.yul\":34321:34549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34555:34783   */\n    tag_451:\n        /* \"#utility.yul\":34695:34729   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":34691:34692   */\n      0x00\n        /* \"#utility.yul\":34683:34689   */\n      dup3\n        /* \"#utility.yul\":34679:34693   */\n      add\n        /* \"#utility.yul\":34672:34730   */\n      mstore\n        /* \"#utility.yul\":34764:34775   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34759:34761   */\n      0x20\n        /* \"#utility.yul\":34751:34757   */\n      dup3\n        /* \"#utility.yul\":34747:34762   */\n      add\n        /* \"#utility.yul\":34740:34776   */\n      mstore\n        /* \"#utility.yul\":34555:34783   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34789:35016   */\n    tag_456:\n        /* \"#utility.yul\":34929:34963   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":34925:34926   */\n      0x00\n        /* \"#utility.yul\":34917:34923   */\n      dup3\n        /* \"#utility.yul\":34913:34927   */\n      add\n        /* \"#utility.yul\":34906:34964   */\n      mstore\n        /* \"#utility.yul\":34998:35008   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34993:34995   */\n      0x20\n        /* \"#utility.yul\":34985:34991   */\n      dup3\n        /* \"#utility.yul\":34981:34996   */\n      add\n        /* \"#utility.yul\":34974:35009   */\n      mstore\n        /* \"#utility.yul\":34789:35016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35022:35144   */\n    tag_254:\n        /* \"#utility.yul\":35095:35119   */\n      tag_597\n        /* \"#utility.yul\":35113:35118   */\n      dup2\n        /* \"#utility.yul\":35095:35119   */\n      tag_354\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":35088:35093   */\n      dup2\n        /* \"#utility.yul\":35085:35120   */\n      eq\n        /* \"#utility.yul\":35075:35138   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":35134:35135   */\n      0x00\n        /* \"#utility.yul\":35131:35132   */\n      dup1\n        /* \"#utility.yul\":35124:35136   */\n      revert\n        /* \"#utility.yul\":35075:35138   */\n    tag_598:\n        /* \"#utility.yul\":35022:35144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35150:35266   */\n    tag_269:\n        /* \"#utility.yul\":35220:35241   */\n      tag_600\n        /* \"#utility.yul\":35235:35240   */\n      dup2\n        /* \"#utility.yul\":35220:35241   */\n      tag_372\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":35213:35218   */\n      dup2\n        /* \"#utility.yul\":35210:35242   */\n      eq\n        /* \"#utility.yul\":35200:35260   */\n      tag_601\n      jumpi\n        /* \"#utility.yul\":35256:35257   */\n      0x00\n        /* \"#utility.yul\":35253:35254   */\n      dup1\n        /* \"#utility.yul\":35246:35258   */\n      revert\n        /* \"#utility.yul\":35200:35260   */\n    tag_601:\n        /* \"#utility.yul\":35150:35266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35272:35392   */\n    tag_273:\n        /* \"#utility.yul\":35344:35367   */\n      tag_603\n        /* \"#utility.yul\":35361:35366   */\n      dup2\n        /* \"#utility.yul\":35344:35367   */\n      tag_556\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":35337:35342   */\n      dup2\n        /* \"#utility.yul\":35334:35368   */\n      eq\n        /* \"#utility.yul\":35324:35386   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":35382:35383   */\n      0x00\n        /* \"#utility.yul\":35379:35380   */\n      dup1\n        /* \"#utility.yul\":35372:35384   */\n      revert\n        /* \"#utility.yul\":35324:35386   */\n    tag_604:\n        /* \"#utility.yul\":35272:35392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35398:35520   */\n    tag_284:\n        /* \"#utility.yul\":35471:35495   */\n      tag_606\n        /* \"#utility.yul\":35489:35494   */\n      dup2\n        /* \"#utility.yul\":35471:35495   */\n      tag_459\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":35464:35469   */\n      dup2\n        /* \"#utility.yul\":35461:35496   */\n      eq\n        /* \"#utility.yul\":35451:35514   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":35510:35511   */\n      0x00\n        /* \"#utility.yul\":35507:35508   */\n      dup1\n        /* \"#utility.yul\":35500:35512   */\n      revert\n        /* \"#utility.yul\":35451:35514   */\n    tag_607:\n        /* \"#utility.yul\":35398:35520   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220434167668d67d79567ddbed1b518039217024113a9a644a5e1f04a6f61357a8364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50612683806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a19190611721565b6101d0565b6040516100b39190611e55565b60405180910390f35b6100d660048036038101906100d191906117d9565b610299565b6040516100e39190611c98565b60405180910390f35b61010660048036038101906101019190611833565b6103d3565b6040516101139190611cb3565b60405180910390f35b6101366004803603810190610131919061157b565b610432565b005b610152600480360381019061014d9190611761565b6107bb565b60405161015f9190611c3f565b60405180910390f35b610182600480360381019061017d91906116e1565b6108d6565b005b61019e6004803603810190610199919061153b565b610a48565b6040516101ab9190611c98565b60405180910390f35b6101ce60048036038101906101c9919061164a565b610adc565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611d95565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103cc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060006103df610dc1565b905060008151116103ff576040518060200160405280600081525061042a565b8061040984610dd8565b60405160200161041a929190611b59565b6040516020818303038152906040525b915050919050565b60003390508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16148061047757506104768682610a48565b5b6104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90611cd5565b60405180910390fd5b82518451146104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190611e35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190611dd5565b60405180910390fd5b610578818787878787610eb0565b60005b8451811015610734576000858281518110610599576105986121db565b5b6020026020010151905060008583815181106105b8576105b76121db565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090611d75565b60405180910390fd5b81816106659190612019565b60008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107179190611fc3565b92505081905550505050808061072c90612134565b91505061057b565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107ab929190611c61565b60405180910390a4505050505050565b60608151835114610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611e15565b60405180910390fd5b6000835167ffffffffffffffff81111561081e5761081d61220a565b5b60405190808252806020026020018201604052801561084c5781602001602082028036833780820191505090505b50905060005b84518110156108cb57610899858281518110610871576108706121db565b5b602002602001015185838151811061088c5761088b6121db565b5b60200260200101516101d0565b8282815181106108ac576108ab6121db565b5b60200260200101818152505080806108c390612134565b915050610852565b508091505092915050565b60003390508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190611df5565b60405180910390fd5b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610a3b9190611c98565b60405180910390a3505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003390508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480610b215750610b208682610a48565b5b610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790611d35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790611dd5565b60405180910390fd5b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5e90611d75565b60405180910390fd5b610c75828888888888611030565b8381610c819190612019565b60008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d339190611fc3565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610db0929190611e70565b60405180910390a450505050505050565b606060405180602001604052806000815250905090565b606060006001610de7846111b0565b01905060008167ffffffffffffffff811115610e0657610e0561220a565b5b6040519080825280601f01601f191660200182016040528015610e385781602001600182028036833780820191505090505b509050600082602001820190505b600115610ea5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610e8f57610e8e6121ac565b5b0494506000851415610ea057610ea5565b610e46565b819350505050919050565b610ecf8473ffffffffffffffffffffffffffffffffffffffff16611303565b15611028578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f15959493929190611b7d565b602060405180830381600087803b158015610f2f57600080fd5b505af1925050508015610f6057506040513d601f19601f82011682018060405250810190610f5d9190611806565b60015b610f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9690611d15565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101d90611cf5565b60405180910390fd5b505b505050505050565b61104f8473ffffffffffffffffffffffffffffffffffffffff16611303565b156111a8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611095959493929190611be5565b602060405180830381600087803b1580156110af57600080fd5b505af19250505080156110e057506040513d601f19601f820116820180604052508101906110dd9190611806565b60015b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690611db5565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90611d55565b60405180910390fd5b505b505050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061120e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611204576112036121ac565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061124b576d04ee2d6d415b85acef81000000008381611241576112406121ac565b5b0492506020810190505b662386f26fc10000831061127a57662386f26fc1000083816112705761126f6121ac565b5b0492506010810190505b6305f5e10083106112a3576305f5e1008381611299576112986121ac565b5b0492506008810190505b61271083106112c85761271083816112be576112bd6121ac565b5b0492506004810190505b606483106112eb57606483816112e1576112e06121ac565b5b0492506002810190505b600a83106112fa576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061133961133484611ebe565b611e99565b9050808382526020820190508285602086028201111561135c5761135b61223e565b5b60005b8581101561138c57816113728882611448565b84526020840193506020830192505060018101905061135f565b5050509392505050565b60006113a96113a484611eea565b611e99565b905080838252602082019050828560208602820111156113cc576113cb61223e565b5b60005b858110156113fc57816113e28882611526565b8452602084019350602083019250506001810190506113cf565b5050509392505050565b600061141961141484611f16565b611e99565b90508281526020810184848401111561143557611434612243565b5b6114408482856120c1565b509392505050565b600081359050611457816125f1565b92915050565b600082601f83011261147257611471612239565b5b8135611482848260208601611326565b91505092915050565b600082601f8301126114a05761149f612239565b5b81356114b0848260208601611396565b91505092915050565b6000813590506114c881612608565b92915050565b6000813590506114dd8161261f565b92915050565b6000815190506114f28161261f565b92915050565b600082601f83011261150d5761150c612239565b5b813561151d848260208601611406565b91505092915050565b60008135905061153581612636565b92915050565b600080604083850312156115525761155161224d565b5b600061156085828601611448565b925050602061157185828601611448565b9150509250929050565b600080600080600060a086880312156115975761159661224d565b5b60006115a588828901611448565b95505060206115b688828901611448565b945050604086013567ffffffffffffffff8111156115d7576115d6612248565b5b6115e38882890161148b565b935050606086013567ffffffffffffffff81111561160457611603612248565b5b6116108882890161148b565b925050608086013567ffffffffffffffff81111561163157611630612248565b5b61163d888289016114f8565b9150509295509295909350565b600080600080600060a086880312156116665761166561224d565b5b600061167488828901611448565b955050602061168588828901611448565b945050604061169688828901611526565b93505060606116a788828901611526565b925050608086013567ffffffffffffffff8111156116c8576116c7612248565b5b6116d4888289016114f8565b9150509295509295909350565b600080604083850312156116f8576116f761224d565b5b600061170685828601611448565b9250506020611717858286016114b9565b9150509250929050565b600080604083850312156117385761173761224d565b5b600061174685828601611448565b925050602061175785828601611526565b9150509250929050565b600080604083850312156117785761177761224d565b5b600083013567ffffffffffffffff81111561179657611795612248565b5b6117a28582860161145d565b925050602083013567ffffffffffffffff8111156117c3576117c2612248565b5b6117cf8582860161148b565b9150509250929050565b6000602082840312156117ef576117ee61224d565b5b60006117fd848285016114ce565b91505092915050565b60006020828403121561181c5761181b61224d565b5b600061182a848285016114e3565b91505092915050565b6000602082840312156118495761184861224d565b5b600061185784828501611526565b91505092915050565b600061186c8383611b3b565b60208301905092915050565b6118818161204d565b82525050565b600061189282611f57565b61189c8185611f85565b93506118a783611f47565b8060005b838110156118d85781516118bf8882611860565b97506118ca83611f78565b9250506001810190506118ab565b5085935050505092915050565b6118ee8161205f565b82525050565b60006118ff82611f62565b6119098185611f96565b93506119198185602086016120d0565b61192281612252565b840191505092915050565b600061193882611f6d565b6119428185611fa7565b93506119528185602086016120d0565b61195b81612252565b840191505092915050565b600061197182611f6d565b61197b8185611fb8565b935061198b8185602086016120d0565b80840191505092915050565b60006119a4602f83611fa7565b91506119af82612263565b604082019050919050565b60006119c7602883611fa7565b91506119d2826122b2565b604082019050919050565b60006119ea603d83611fa7565b91506119f582612301565b604082019050919050565b6000611a0d602e83611fa7565b9150611a1882612350565b604082019050919050565b6000611a30602083611fa7565b9150611a3b8261239f565b602082019050919050565b6000611a53602a83611fa7565b9150611a5e826123c8565b604082019050919050565b6000611a76602b83611fa7565b9150611a8182612417565b604082019050919050565b6000611a99603183611fa7565b9150611aa482612466565b604082019050919050565b6000611abc602d83611fa7565b9150611ac7826124b5565b604082019050919050565b6000611adf602983611fa7565b9150611aea82612504565b604082019050919050565b6000611b02602983611fa7565b9150611b0d82612553565b604082019050919050565b6000611b25602883611fa7565b9150611b30826125a2565b604082019050919050565b611b44816120b7565b82525050565b611b53816120b7565b82525050565b6000611b658285611966565b9150611b718284611966565b91508190509392505050565b600060a082019050611b926000830188611878565b611b9f6020830187611878565b8181036040830152611bb18186611887565b90508181036060830152611bc58185611887565b90508181036080830152611bd981846118f4565b90509695505050505050565b600060a082019050611bfa6000830188611878565b611c076020830187611878565b611c146040830186611b4a565b611c216060830185611b4a565b8181036080830152611c3381846118f4565b90509695505050505050565b60006020820190508181036000830152611c598184611887565b905092915050565b60006040820190508181036000830152611c7b8185611887565b90508181036020830152611c8f8184611887565b90509392505050565b6000602082019050611cad60008301846118e5565b92915050565b60006020820190508181036000830152611ccd818461192d565b905092915050565b60006020820190508181036000830152611cee81611997565b9050919050565b60006020820190508181036000830152611d0e816119ba565b9050919050565b60006020820190508181036000830152611d2e816119dd565b9050919050565b60006020820190508181036000830152611d4e81611a00565b9050919050565b60006020820190508181036000830152611d6e81611a23565b9050919050565b60006020820190508181036000830152611d8e81611a46565b9050919050565b60006020820190508181036000830152611dae81611a69565b9050919050565b60006020820190508181036000830152611dce81611a8c565b9050919050565b60006020820190508181036000830152611dee81611aaf565b9050919050565b60006020820190508181036000830152611e0e81611ad2565b9050919050565b60006020820190508181036000830152611e2e81611af5565b9050919050565b60006020820190508181036000830152611e4e81611b18565b9050919050565b6000602082019050611e6a6000830184611b4a565b92915050565b6000604082019050611e856000830185611b4a565b611e926020830184611b4a565b9392505050565b6000611ea3611eb4565b9050611eaf8282612103565b919050565b6000604051905090565b600067ffffffffffffffff821115611ed957611ed861220a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f0557611f0461220a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f3157611f3061220a565b5b611f3a82612252565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611fce826120b7565b9150611fd9836120b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561200e5761200d61217d565b5b828201905092915050565b6000612024826120b7565b915061202f836120b7565b9250828210156120425761204161217d565b5b828203905092915050565b600061205882612097565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120ee5780820151818401526020810190506120d3565b838111156120fd576000848401525b50505050565b61210c82612252565b810181811067ffffffffffffffff8211171561212b5761212a61220a565b5b80604052505050565b600061213f826120b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121725761217161217d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e74657220636f6e7472616374000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b7f455243313135353a4552433131353552656365697665722072656a6563746564600082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a61646472657373207a65726f206973206e6f74206120766160008201527f6c69642061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a726563656976657220646f206e6f7420696d706c656d656e60008201527f7420455243313135355265636569766572000000000000000000000000000000602082015250565b7f455243313135353a2063616e206e6f74207472616e7366657220746f2074686560008201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6125fa8161204d565b811461260557600080fd5b50565b6126118161205f565b811461261c57600080fd5b50565b6126288161206b565b811461263357600080fd5b50565b61263f816120b7565b811461264a57600080fd5b5056fea2646970667358221220434167668d67d79567ddbed1b518039217024113a9a644a5e1f04a6f61357a8364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2683 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3CC JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3DF PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x42A JUMP JUMPDEST DUP1 PUSH2 0x409 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x41A SWAP3 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x477 JUMPI POP PUSH2 0x476 DUP7 DUP3 PUSH2 0xA48 JUMP JUMPDEST JUMPDEST PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F1 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x578 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x599 JUMPI PUSH2 0x598 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B7 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x72C SWAP1 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57B JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7AB SWAP3 SWAP2 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x84C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x899 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8AC JUMPI PUSH2 0x8AB PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x8C3 SWAP1 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x852 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x941 SWAP1 PUSH2 0x1DF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB21 JUMPI POP PUSH2 0xB20 DUP7 DUP3 PUSH2 0xA48 JUMP JUMPDEST JUMPDEST PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB57 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC7 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5E SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC75 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1030 JUMP JUMPDEST DUP4 DUP2 PUSH2 0xC81 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD33 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xDB0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xDE7 DUP5 PUSH2 0x11B0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE06 JUMPI PUSH2 0xE05 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE38 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xEA5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xEA0 JUMPI PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1303 JUMP JUMPDEST ISZERO PUSH2 0x1028 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF60 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF96 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x104F DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1303 JUMP JUMPDEST ISZERO PUSH2 0x11A8 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1095 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10E0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1116 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119D SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x120E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x124B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x127A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1270 JUMPI PUSH2 0x126F PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x12A3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x12C8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12EB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12FA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1339 PUSH2 0x1334 DUP5 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x223E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x138C JUMPI DUP2 PUSH2 0x1372 DUP9 DUP3 PUSH2 0x1448 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x135F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A9 PUSH2 0x13A4 DUP5 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13CC JUMPI PUSH2 0x13CB PUSH2 0x223E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x13FC JUMPI DUP2 PUSH2 0x13E2 DUP9 DUP3 PUSH2 0x1526 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13CF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1419 PUSH2 0x1414 DUP5 PUSH2 0x1F16 JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x2243 JUMP JUMPDEST JUMPDEST PUSH2 0x1440 DUP5 DUP3 DUP6 PUSH2 0x20C1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1457 DUP2 PUSH2 0x25F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1472 JUMPI PUSH2 0x1471 PUSH2 0x2239 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1482 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1326 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x2239 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C8 DUP2 PUSH2 0x2608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DD DUP2 PUSH2 0x261F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14F2 DUP2 PUSH2 0x261F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0x2239 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x151D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1406 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1535 DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1560 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1571 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1597 JUMPI PUSH2 0x1596 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A5 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15B6 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x15E3 DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x1610 DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1631 JUMPI PUSH2 0x1630 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x163D DUP9 DUP3 DUP10 ADD PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1674 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1685 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x16A7 DUP9 DUP3 DUP10 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C7 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x16D4 DUP9 DUP3 DUP10 ADD PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F8 JUMPI PUSH2 0x16F7 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1706 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1717 DUP6 DUP3 DUP7 ADD PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1746 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1757 DUP6 DUP3 DUP7 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x17A2 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x17CF DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EF JUMPI PUSH2 0x17EE PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182A DUP5 DUP3 DUP6 ADD PUSH2 0x14E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1857 DUP5 DUP3 DUP6 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186C DUP4 DUP4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x204D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1892 DUP3 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x189C DUP2 DUP6 PUSH2 0x1F85 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A7 DUP4 PUSH2 0x1F47 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D8 JUMPI DUP2 MLOAD PUSH2 0x18BF DUP9 DUP3 PUSH2 0x1860 JUMP JUMPDEST SWAP8 POP PUSH2 0x18CA DUP4 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x205F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FF DUP3 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x1909 DUP2 DUP6 PUSH2 0x1F96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1919 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x1922 DUP2 PUSH2 0x2252 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1938 DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0x1942 DUP2 DUP6 PUSH2 0x1FA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1952 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x2252 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1971 DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0x197B DUP2 DUP6 PUSH2 0x1FB8 JUMP JUMPDEST SWAP4 POP PUSH2 0x198B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A4 PUSH1 0x2F DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AF DUP3 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C7 PUSH1 0x28 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D2 DUP3 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EA PUSH1 0x3D DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F5 DUP3 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D PUSH1 0x2E DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A18 DUP3 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A30 PUSH1 0x20 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3B DUP3 PUSH2 0x239F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A53 PUSH1 0x2A DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5E DUP3 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A76 PUSH1 0x2B DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A81 DUP3 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 PUSH1 0x31 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA4 DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC PUSH1 0x2D DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF PUSH1 0x29 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEA DUP3 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B02 PUSH1 0x29 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B25 PUSH1 0x28 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B30 DUP3 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x20B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x20B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B65 DUP3 DUP6 PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B71 DUP3 DUP5 PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B92 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x1B9F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1878 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BB1 DUP2 DUP7 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BC5 DUP2 DUP6 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1BD9 DUP2 DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BFA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x1C07 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x1C21 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B4A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C33 DUP2 DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C59 DUP2 DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7B DUP2 DUP6 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C8F DUP2 DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CCD DUP2 DUP5 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CEE DUP2 PUSH2 0x1997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0E DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2E DUP2 PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4E DUP2 PUSH2 0x1A00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D6E DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D8E DUP2 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DAE DUP2 PUSH2 0x1A69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCE DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEE DUP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0E DUP2 PUSH2 0x1AD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E2E DUP2 PUSH2 0x1AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4E DUP2 PUSH2 0x1B18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E85 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x1E92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA3 PUSH2 0x1EB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAF DUP3 DUP3 PUSH2 0x2103 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ED9 JUMPI PUSH2 0x1ED8 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F05 JUMPI PUSH2 0x1F04 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH2 0x1F3A DUP3 PUSH2 0x2252 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCE DUP3 PUSH2 0x20B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD9 DUP4 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x200E JUMPI PUSH2 0x200D PUSH2 0x217D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2024 DUP3 PUSH2 0x20B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x202F DUP4 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2042 JUMPI PUSH2 0x2041 PUSH2 0x217D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP3 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20D3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20FD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x210C DUP3 PUSH2 0x2252 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x212B JUMPI PUSH2 0x212A PUSH2 0x220A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213F DUP3 PUSH2 0x20B7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x217D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E74657220636F6E7472616374000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A4552433131353552656365697665722072656A6563746564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A61646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69642061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A726563656976657220646F206E6F7420696D706C656D656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420455243313135355265636569766572000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616E206E6F74207472616E7366657220746F20746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x25FA DUP2 PUSH2 0x204D JUMP JUMPDEST DUP2 EQ PUSH2 0x2605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2611 DUP2 PUSH2 0x205F JUMP JUMPDEST DUP2 EQ PUSH2 0x261C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2628 DUP2 PUSH2 0x206B JUMP JUMPDEST DUP2 EQ PUSH2 0x2633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x263F DUP2 PUSH2 0x20B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x264A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER COINBASE PUSH8 0x668D67D79567DDBE 0xD1 0xB5 XOR SUB SWAP3 OR MUL COINBASE SGT 0xA9 0xA6 DIFFICULTY 0xA5 0xE1 CREATE 0x4A PUSH16 0x61357A8364736F6C6343000807003300 ",
							"sourceMap": "277:9731:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_baseURI_103": {
									"entryPoint": 3521,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferCheck_581": {
									"entryPoint": 3760,
									"id": 581,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_safeTransferCheck_396": {
									"entryPoint": 4144,
									"id": 396,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@balanceOfBatch_195": {
									"entryPoint": 1979,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_131": {
									"entryPoint": 464,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_249": {
									"entryPoint": 2632,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1080": {
									"entryPoint": 4867,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2105": {
									"entryPoint": 4528,
									"id": 2105,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_525": {
									"entryPoint": 1074,
									"id": 525,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_342": {
									"entryPoint": 2780,
									"id": 342,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_231": {
									"entryPoint": 2262,
									"id": 231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_61": {
									"entryPoint": 665,
									"id": 61,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_2326": {
									"entryPoint": 3544,
									"id": 2326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_95": {
									"entryPoint": 979,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5126,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370": {
									"entryPoint": 8803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4": {
									"entryPoint": 8961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754": {
									"entryPoint": 9119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 9160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d": {
									"entryPoint": 9397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 9634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:35523:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:8",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:8"
															},
															"nodeType": "YulIf",
															"src": "350:143:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:8",
														"type": ""
													}
												],
												"src": "24:722:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:8",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:8"
															},
															"nodeType": "YulIf",
															"src": "1095:143:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:8",
														"type": ""
													}
												],
												"src": "769:722:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:327:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1615:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1599:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1703:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1718:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1707:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1770:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1763:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:25:8"
															},
															"nodeType": "YulIf",
															"src": "1739:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1860:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:41:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1558:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1566:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1574:5:8",
														"type": ""
													}
												],
												"src": "1497:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1984:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2040:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2013:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1943:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1951:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1959:5:8",
														"type": ""
													}
												],
												"src": "1913:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2203:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2188:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2195:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:35:8"
															},
															"nodeType": "YulIf",
															"src": "2162:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2297:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2420:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2345:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2146:5:8",
														"type": ""
													}
												],
												"src": "2075:370:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2596:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2569:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2569:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:35:8"
															},
															"nodeType": "YulIf",
															"src": "2555:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2686:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2690:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2729:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2738:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2523:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2531:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2539:5:8",
														"type": ""
													}
												],
												"src": "2468:370:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:84:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2903:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2903:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2965:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2941:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2871:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:8",
														"type": ""
													}
												],
												"src": "2844:133:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:86:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3053:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3044:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3012:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3020:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3028:5:8",
														"type": ""
													}
												],
												"src": "2983:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3229:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:8",
														"type": ""
													}
												],
												"src": "3126:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:277:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3383:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:35:8"
															},
															"nodeType": "YulIf",
															"src": "3357:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3502:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3492:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3606:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3540:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3341:5:8",
														"type": ""
													}
												],
												"src": "3286:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3701:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3692:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3730:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3660:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3668:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:8",
														"type": ""
													}
												],
												"src": "3630:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3904:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:32:8"
															},
															"nodeType": "YulIf",
															"src": "3868:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3997:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4041:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4076:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4087:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4072:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4096:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4051:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4179:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3831:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3851:6:8",
														"type": ""
													}
												],
												"src": "3775:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:1316:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4495:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4497:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4469:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:8"
															},
															"nodeType": "YulIf",
															"src": "4458:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4588:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4603:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4607:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4632:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4667:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4663:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4687:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4642:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4632:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4715:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4730:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4734:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4760:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4843:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4889:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4900:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4872:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4951:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4953:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4953:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4953:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4920:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "4917:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5048:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5108:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5119:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5104:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5104:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5128:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5058:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5048:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5156:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5171:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5213:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5198:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5175:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5264:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5266:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5266:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5266:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5233:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "5230:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5361:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5421:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5432:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5441:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5371:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5361:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5526:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5498:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5578:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5580:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5580:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5580:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "5544:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5675:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5719:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5730:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5715:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5739:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5685:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5675:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4397:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4417:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4425:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4433:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4441:6:8",
														"type": ""
													}
												],
												"src": "4255:1509:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:946:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5962:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:8"
															},
															"nodeType": "YulIf",
															"src": "5923:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6053:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6068:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6072:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6097:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6143:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6128:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6152:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6107:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6097:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6180:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6195:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6199:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6225:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6235:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6225:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6308:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6353:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6436:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6451:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6455:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6481:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6516:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6527:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6512:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6491:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6481:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6564:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6579:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6610:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6621:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6606:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6606:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6593:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6583:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6673:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6675:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6675:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6642:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6642:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "6639:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6770:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6814:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6825:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6810:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6780:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5851:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5862:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5874:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5890:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5898:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5906:6:8",
														"type": ""
													}
												],
												"src": "5770:1089:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:388:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:32:8"
															},
															"nodeType": "YulIf",
															"src": "6955:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7084:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7128:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7211:115:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7256:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7266:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7256:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6938:6:8",
														"type": ""
													}
												],
												"src": "6865:468:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:32:8"
															},
															"nodeType": "YulIf",
															"src": "7432:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7561:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7576:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7580:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7605:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7688:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7768:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7779:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7764:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7764:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7743:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7384:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7395:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7407:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7415:6:8",
														"type": ""
													}
												],
												"src": "7339:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:761:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8000:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8000:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:32:8"
															},
															"nodeType": "YulIf",
															"src": "7962:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8091:302:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8106:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8137:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8148:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8133:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8133:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8120:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8110:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8198:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8200:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8200:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8200:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8164:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8295:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8355:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8366:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8351:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8351:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8375:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8305:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8403:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8418:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8449:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8460:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8445:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8445:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8432:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8422:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8511:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8513:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8513:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8513:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8483:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8480:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8477:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8608:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8668:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8679:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8664:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8664:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8688:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8618:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8608:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7925:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7945:6:8",
														"type": ""
													}
												],
												"src": "7819:894:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8784:262:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8830:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8832:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8832:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8797:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:32:8"
															},
															"nodeType": "YulIf",
															"src": "8794:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8923:116:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8938:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8942:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8967:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9001:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9012:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8997:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9021:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8977:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8977:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8967:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8754:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8765:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8777:6:8",
														"type": ""
													}
												],
												"src": "8719:327:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9128:273:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9174:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9176:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9176:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9176:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9149:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:32:8"
															},
															"nodeType": "YulIf",
															"src": "9138:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9267:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9282:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9286:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9311:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9356:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9367:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9352:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9352:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9376:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9321:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9311:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9098:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9109:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9121:6:8",
														"type": ""
													}
												],
												"src": "9052:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9519:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9521:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9521:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9521:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9494:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:32:8"
															},
															"nodeType": "YulIf",
															"src": "9483:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9612:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9627:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9641:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9631:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9656:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9691:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9702:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9687:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9687:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9711:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9666:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9656:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9443:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9454:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9466:6:8",
														"type": ""
													}
												],
												"src": "9407:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9832:33:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9887:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9905:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9910:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9887:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9795:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9803:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9811:10:8",
														"type": ""
													}
												],
												"src": "9742:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10032:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10014:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9980:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9987:3:8",
														"type": ""
													}
												],
												"src": "9927:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10205:608:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10215:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10277:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10229:47:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10219:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10373:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10378:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10299:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10292:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10394:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10409:49:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10398:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10474:21:8",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10488:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10478:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10564:224:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10578:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10605:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10599:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10599:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10582:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10625:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10676:13:8"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10691:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10632:43:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10632:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10625:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10708:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10771:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10718:52:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10718:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10708:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10526:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10529:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10523:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10537:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10539:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10548:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10551:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10544:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10544:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10539:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10508:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10510:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10519:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10514:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10504:284:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10804:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10184:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10191:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10200:3:8",
														"type": ""
													}
												],
												"src": "10081:732:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10878:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10915:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10900:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10873:3:8",
														"type": ""
													}
												],
												"src": "10819:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:270:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11034:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11048:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11038:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11095:77:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11160:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11165:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11102:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:70:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11095:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11207:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11214:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11221:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11226:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11181:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11258:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11005:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11012:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11020:3:8",
														"type": ""
													}
												],
												"src": "10934:360:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11402:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11449:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11416:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11406:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11464:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11535:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11471:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11471:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11577:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11584:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11573:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11596:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11551:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11650:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11628:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11373:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11380:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11388:3:8",
														"type": ""
													}
												],
												"src": "11300:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11780:267:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11790:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11837:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11804:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11804:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11794:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11852:96:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11936:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11941:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11859:76:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11859:89:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11983:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11990:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11979:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11997:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12002:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11957:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11957:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12018:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12029:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12034:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12025:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12025:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11761:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11768:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11776:3:8",
														"type": ""
													}
												],
												"src": "11670:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12199:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12209:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12275:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12280:2:8",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12216:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12216:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12209:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12381:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																	"nodeType": "YulIdentifier",
																	"src": "12292:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12292:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12394:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12405:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12410:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12401:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12401:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12394:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12187:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12195:3:8",
														"type": ""
													}
												],
												"src": "12053:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12571:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12581:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12647:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12652:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12588:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12588:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12581:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12753:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "12664:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12664:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12664:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12766:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12777:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12782:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12773:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12766:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12559:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12567:3:8",
														"type": ""
													}
												],
												"src": "12425:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12943:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12953:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13019:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13024:2:8",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12960:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12960:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12953:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13125:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4",
																	"nodeType": "YulIdentifier",
																	"src": "13036:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13036:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13138:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13149:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13154:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13145:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13145:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13138:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12931:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12939:3:8",
														"type": ""
													}
												],
												"src": "12797:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13315:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13325:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13391:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13396:2:8",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13332:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13325:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13497:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																	"nodeType": "YulIdentifier",
																	"src": "13408:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13408:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13510:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13521:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13526:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13517:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13517:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13510:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13303:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13311:3:8",
														"type": ""
													}
												],
												"src": "13169:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13687:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13697:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13763:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13768:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13704:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13697:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13869:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754",
																	"nodeType": "YulIdentifier",
																	"src": "13780:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13780:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13780:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13882:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13893:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13898:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13889:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13889:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13882:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13675:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13683:3:8",
														"type": ""
													}
												],
												"src": "13541:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14059:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14069:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14135:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14140:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14076:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14076:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14069:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14241:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "14152:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14152:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14152:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14254:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14270:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14261:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14254:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14047:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14055:3:8",
														"type": ""
													}
												],
												"src": "13913:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14431:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14441:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14507:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14512:2:8",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14448:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14448:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14441:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14613:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e",
																	"nodeType": "YulIdentifier",
																	"src": "14524:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14524:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14524:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14626:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14637:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14642:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14633:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14626:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14419:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14427:3:8",
														"type": ""
													}
												],
												"src": "14285:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14803:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14813:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14879:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14884:2:8",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14820:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14820:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14813:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14985:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f",
																	"nodeType": "YulIdentifier",
																	"src": "14896:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14896:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14896:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14998:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15009:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15014:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15005:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15005:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14998:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14791:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14799:3:8",
														"type": ""
													}
												],
												"src": "14657:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15175:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15185:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15251:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15256:2:8",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15192:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15192:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15357:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d",
																	"nodeType": "YulIdentifier",
																	"src": "15268:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15268:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15268:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15370:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15381:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15386:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15377:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15377:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15370:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15163:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15171:3:8",
														"type": ""
													}
												],
												"src": "15029:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15547:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15557:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15623:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15628:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15564:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15564:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15557:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15729:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "15640:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15640:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15640:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15742:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15753:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15758:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15749:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15749:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15742:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15535:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15543:3:8",
														"type": ""
													}
												],
												"src": "15401:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15919:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15929:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15995:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16000:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15936:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15936:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15929:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16101:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "16012:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16012:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16012:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16114:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16125:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16130:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16121:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16121:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16114:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15907:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15915:3:8",
														"type": ""
													}
												],
												"src": "15773:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16291:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16301:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16367:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16372:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16308:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16308:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16301:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16473:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "16384:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16384:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16384:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16486:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16497:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16502:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16493:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16493:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16486:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16279:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16287:3:8",
														"type": ""
													}
												],
												"src": "16145:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16572:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16589:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16612:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16594:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16594:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16582:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16582:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16582:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16560:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16567:3:8",
														"type": ""
													}
												],
												"src": "16517:108:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16696:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16713:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16736:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16718:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16718:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16706:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16706:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16706:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16684:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16691:3:8",
														"type": ""
													}
												],
												"src": "16631:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16939:251:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16950:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17039:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17048:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16957:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16957:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16950:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17062:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17151:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17160:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17069:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17069:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17062:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17174:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17181:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17174:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16910:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16916:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16924:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16935:3:8",
														"type": ""
													}
												],
												"src": "16755:435:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17524:725:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17534:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17546:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17557:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17542:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17542:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17534:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17615:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17628:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17639:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17624:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17624:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17571:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17571:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17571:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17696:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17709:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17720:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17705:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17705:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17652:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17652:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17652:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17745:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17756:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17741:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17741:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17765:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17771:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17761:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17761:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17734:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17734:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17734:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17791:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17893:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17902:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17799:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17799:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17791:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17928:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17939:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17924:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17924:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17948:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17954:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17944:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17944:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17917:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17917:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17917:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17974:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18076:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18085:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17982:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17982:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17974:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18111:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18122:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18107:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18107:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18132:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18128:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18100:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18100:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18100:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18158:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18228:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18237:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18166:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18166:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18158:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17464:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "17476:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17484:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17492:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17500:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17508:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17519:4:8",
														"type": ""
													}
												],
												"src": "17196:1053:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18483:523:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18493:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18505:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18516:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18501:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18501:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18493:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18574:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18587:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18598:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18583:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18583:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18530:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18530:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18530:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18655:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18668:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18679:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18664:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18664:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18611:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18611:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18611:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18737:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18750:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18761:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18746:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18693:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18693:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18693:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18819:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18832:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18843:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18828:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18828:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18775:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18775:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18775:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18868:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18879:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18864:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18864:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18889:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18895:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18885:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18885:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18857:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18857:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18857:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18915:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18985:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18994:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18923:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18923:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18915:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18423:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18435:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18443:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18451:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18459:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18467:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18478:4:8",
														"type": ""
													}
												],
												"src": "18255:751:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19160:225:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19170:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19182:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19193:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19178:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19178:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19170:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19217:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19228:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19213:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19213:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19236:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19242:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19232:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19232:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19206:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19206:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19206:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19262:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19364:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19373:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19270:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19270:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19262:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19132:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19144:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19155:4:8",
														"type": ""
													}
												],
												"src": "19012:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19617:408:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19627:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19639:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19650:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19635:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19627:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19674:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19685:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19670:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19670:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19693:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19699:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19689:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19689:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19663:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19663:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19663:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19719:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19821:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19830:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19727:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19727:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19719:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19856:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19867:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19852:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19852:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19876:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19882:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19872:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19845:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19845:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19902:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20004:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20013:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19910:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19910:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19902:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19581:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19593:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19601:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19612:4:8",
														"type": ""
													}
												],
												"src": "19391:634:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20123:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20133:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20145:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20156:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20141:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20141:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20133:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20207:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20220:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20231:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20216:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20216:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20169:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20169:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20169:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20095:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20107:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20118:4:8",
														"type": ""
													}
												],
												"src": "20031:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20365:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20375:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20387:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20398:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20383:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20383:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20375:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20422:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20433:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20418:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20418:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20441:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20447:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20437:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20437:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20411:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20411:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20411:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20467:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20539:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20548:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20475:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20475:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20467:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20337:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20349:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20360:4:8",
														"type": ""
													}
												],
												"src": "20247:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20737:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20747:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20759:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20770:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20755:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20755:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20747:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20794:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20805:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20790:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20813:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20819:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20809:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20809:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20783:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20783:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20839:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20973:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20847:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20847:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20839:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20717:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20732:4:8",
														"type": ""
													}
												],
												"src": "20566:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21162:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21172:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21184:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21195:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21180:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21180:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21172:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21219:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21230:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21215:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21215:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21238:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21244:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21234:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21234:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21208:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21208:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21208:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21264:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21398:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21272:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21272:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21264:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21142:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21157:4:8",
														"type": ""
													}
												],
												"src": "20991:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21587:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21597:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21609:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21620:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21605:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21605:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21597:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21644:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21655:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21640:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21640:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21663:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21669:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21659:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21659:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21633:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21633:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21633:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21689:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21823:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21697:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21697:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21689:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21567:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21582:4:8",
														"type": ""
													}
												],
												"src": "21416:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22012:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22022:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22034:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22045:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22030:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22030:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22022:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22069:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22080:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22065:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22065:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22088:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22094:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22084:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22084:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22058:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22058:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22058:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22114:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22248:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22122:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22122:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22114:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21992:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22007:4:8",
														"type": ""
													}
												],
												"src": "21841:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22437:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22447:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22459:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22470:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22455:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22455:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22447:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22494:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22505:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22490:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22490:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22513:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22519:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22509:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22483:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22483:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22483:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22539:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22673:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22547:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22547:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22539:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22417:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22432:4:8",
														"type": ""
													}
												],
												"src": "22266:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22862:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22872:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22884:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22895:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22880:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22880:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22872:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22919:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22930:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22915:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22915:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22938:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22944:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22934:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22934:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22908:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22908:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22908:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22964:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23098:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22972:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22972:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22964:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22842:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22857:4:8",
														"type": ""
													}
												],
												"src": "22691:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23287:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23297:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23309:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23320:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23305:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23305:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23297:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23344:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23355:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23340:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23340:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23363:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23369:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23359:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23359:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23333:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23333:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23333:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23389:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23523:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23397:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23397:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23389:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23267:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23282:4:8",
														"type": ""
													}
												],
												"src": "23116:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23712:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23722:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23734:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23745:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23730:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23730:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23722:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23769:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23780:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23765:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23765:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23788:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23794:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23784:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23784:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23758:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23758:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23758:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23814:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23948:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23822:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23822:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23814:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23692:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23707:4:8",
														"type": ""
													}
												],
												"src": "23541:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24137:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24147:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24159:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24170:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24155:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24155:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24147:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24194:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24205:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24190:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24190:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24213:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24219:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24209:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24209:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24183:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24183:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24183:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24239:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24373:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24247:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24247:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24239:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24117:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24132:4:8",
														"type": ""
													}
												],
												"src": "23966:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24562:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24572:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24584:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24595:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24580:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24572:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24619:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24630:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24615:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24615:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24638:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24644:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24634:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24608:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24608:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24608:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24664:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24798:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24672:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24672:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24664:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24542:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24557:4:8",
														"type": ""
													}
												],
												"src": "24391:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24987:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24997:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25009:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25020:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25005:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25005:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24997:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25044:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25055:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25040:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25040:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25063:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25069:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25059:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25033:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25033:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25033:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25089:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25223:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25097:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25097:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25089:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24967:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24982:4:8",
														"type": ""
													}
												],
												"src": "24816:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25412:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25422:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25434:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25445:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25430:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25430:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25422:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25469:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25480:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25465:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25488:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25494:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25484:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25484:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25458:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25458:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25458:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25514:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25648:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25522:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25522:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25514:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25392:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25407:4:8",
														"type": ""
													}
												],
												"src": "25241:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25764:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25774:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25786:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25797:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25782:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25782:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25774:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25854:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25867:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25878:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25863:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25863:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25810:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25810:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25810:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25736:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25748:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25759:4:8",
														"type": ""
													}
												],
												"src": "25666:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26020:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26030:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26042:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26053:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26038:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26038:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26030:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26110:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26123:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26134:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26119:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26119:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26066:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26066:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26066:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26191:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26204:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26215:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26200:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26200:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26147:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26147:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26147:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25984:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25996:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26004:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26015:4:8",
														"type": ""
													}
												],
												"src": "25894:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26273:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26283:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "26293:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26293:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "26283:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "26342:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "26350:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "26322:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26322:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26322:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26257:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26266:6:8",
														"type": ""
													}
												],
												"src": "26232:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26407:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26417:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26433:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26427:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26427:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "26417:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26400:6:8",
														"type": ""
													}
												],
												"src": "26367:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26530:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26635:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26637:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26637:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26637:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26607:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26615:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26604:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26604:30:8"
															},
															"nodeType": "YulIf",
															"src": "26601:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26667:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26679:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26687:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26675:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26675:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26667:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26729:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "26741:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26747:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26737:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26737:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26729:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26514:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26525:4:8",
														"type": ""
													}
												],
												"src": "26448:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26847:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26952:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26954:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26954:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26954:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26924:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26932:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26921:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26921:30:8"
															},
															"nodeType": "YulIf",
															"src": "26918:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26984:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26996:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27004:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26992:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26992:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26984:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27046:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "27058:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27064:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27054:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27054:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "27046:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26831:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26842:4:8",
														"type": ""
													}
												],
												"src": "26765:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27148:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27253:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "27255:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27255:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27255:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27225:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27233:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27222:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27222:30:8"
															},
															"nodeType": "YulIf",
															"src": "27219:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27285:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27315:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "27293:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27293:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "27285:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27359:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "27371:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27377:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27367:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "27359:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "27143:4:8",
														"type": ""
													}
												],
												"src": "27082:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27467:60:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27477:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "27485:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "27477:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27498:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "27510:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27515:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27506:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27506:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "27498:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "27454:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "27462:4:8",
														"type": ""
													}
												],
												"src": "27395:132:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27607:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27634:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27628:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27628:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27618:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27590:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27600:6:8",
														"type": ""
													}
												],
												"src": "27533:114:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27711:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27722:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27738:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27732:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27732:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27722:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27694:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27704:6:8",
														"type": ""
													}
												],
												"src": "27653:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27816:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27827:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27843:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27837:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27837:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27827:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27799:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27809:6:8",
														"type": ""
													}
												],
												"src": "27757:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27937:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27947:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "27959:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27964:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27955:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27955:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "27947:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "27924:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "27932:4:8",
														"type": ""
													}
												],
												"src": "27862:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28092:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28109:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28114:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28102:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28102:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28102:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28130:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28149:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28154:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28145:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28145:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28130:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28064:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28069:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28080:11:8",
														"type": ""
													}
												],
												"src": "27981:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28266:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28283:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28288:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28276:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28276:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28276:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28304:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28323:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28328:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28319:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28319:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28304:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28238:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28243:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28254:11:8",
														"type": ""
													}
												],
												"src": "28171:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28441:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28458:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28463:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28451:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28451:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28451:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28479:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28498:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28503:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28494:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28479:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28413:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28418:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28429:11:8",
														"type": ""
													}
												],
												"src": "28345:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28634:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28644:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "28659:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28644:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28606:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28611:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28622:11:8",
														"type": ""
													}
												],
												"src": "28520:148:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28718:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28728:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28751:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28733:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28733:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28728:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28762:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28785:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28767:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28767:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28762:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28925:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28927:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28927:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28927:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28846:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28853:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "28921:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28849:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28849:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28843:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28843:81:8"
															},
															"nodeType": "YulIf",
															"src": "28840:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28957:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28968:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28971:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28964:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28964:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "28957:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28705:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28708:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "28714:3:8",
														"type": ""
													}
												],
												"src": "28674:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29030:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29040:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29063:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29045:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29045:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29040:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29074:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29097:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29079:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29079:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29074:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29121:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29123:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29123:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29123:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29115:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29118:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29112:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29112:8:8"
															},
															"nodeType": "YulIf",
															"src": "29109:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29153:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29165:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29168:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29161:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29161:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "29153:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29016:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29019:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "29025:4:8",
														"type": ""
													}
												],
												"src": "28985:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29227:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29237:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29266:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "29248:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29248:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29237:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29209:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29219:7:8",
														"type": ""
													}
												],
												"src": "29182:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29326:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29336:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29361:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "29354:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29354:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29347:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29347:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29336:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29308:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29318:7:8",
														"type": ""
													}
												],
												"src": "29284:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29424:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29434:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29449:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29456:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29445:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29445:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29434:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29406:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29416:7:8",
														"type": ""
													}
												],
												"src": "29380:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29580:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29590:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29605:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29612:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29601:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29601:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29590:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29562:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29572:7:8",
														"type": ""
													}
												],
												"src": "29535:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29712:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29722:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "29733:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29722:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29694:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29704:7:8",
														"type": ""
													}
												],
												"src": "29667:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29801:103:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "29824:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "29829:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29834:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "29811:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29811:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29811:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "29882:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "29887:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29878:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29878:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29896:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29871:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29871:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29871:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "29783:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "29788:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29793:6:8",
														"type": ""
													}
												],
												"src": "29750:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29959:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29969:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "29978:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "29973:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30038:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "30063:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "30068:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30059:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30059:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "30082:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "30087:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "30078:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "30078:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "30072:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30072:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "30052:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30052:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30052:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "29999:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30002:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29996:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29996:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "30010:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "30012:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "30021:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30024:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "30017:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30017:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "30012:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "29992:3:8",
																"statements": []
															},
															"src": "29988:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30135:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "30185:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "30190:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30181:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30181:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30199:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "30174:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30174:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30174:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "30116:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30119:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30113:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30113:13:8"
															},
															"nodeType": "YulIf",
															"src": "30110:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "29941:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "29946:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29951:6:8",
														"type": ""
													}
												],
												"src": "29910:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30266:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30276:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "30298:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "30328:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "30306:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30306:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30294:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30294:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "30280:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30445:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "30447:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30447:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30447:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "30388:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30400:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30385:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30385:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "30424:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30436:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "30421:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30421:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30382:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30382:62:8"
															},
															"nodeType": "YulIf",
															"src": "30379:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30483:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "30487:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30476:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30476:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30476:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30252:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "30260:4:8",
														"type": ""
													}
												],
												"src": "30223:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30553:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30563:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30590:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30572:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30572:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "30563:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30686:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "30688:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30688:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30688:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30611:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30618:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "30608:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30608:77:8"
															},
															"nodeType": "YulIf",
															"src": "30605:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30717:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30728:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30735:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30724:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30724:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30717:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30539:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30549:3:8",
														"type": ""
													}
												],
												"src": "30510:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30777:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30794:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30797:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30787:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30787:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30787:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30891:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30894:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30884:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30884:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30884:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30915:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30918:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30908:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30908:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30908:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "30749:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30963:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30983:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30973:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30973:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30973:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31077:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31080:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31070:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31070:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31070:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31101:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31104:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31094:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31094:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31094:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "30935:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31149:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31169:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31159:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31159:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31159:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31263:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31266:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31256:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31256:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31287:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31290:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31280:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31280:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31280:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "31121:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31335:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31352:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31355:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31345:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31345:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31449:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31452:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31442:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31442:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31442:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31473:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31476:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31466:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31466:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "31307:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31582:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31599:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31602:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31592:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31592:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31592:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "31493:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31705:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31722:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31725:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31715:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31715:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31715:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "31616:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31828:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31845:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31848:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31838:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31838:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31838:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "31739:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31951:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31968:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31971:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31961:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31961:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31961:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "31862:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32074:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32091:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32094:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "32084:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32084:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32084:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "31985:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32156:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32166:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32184:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32191:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32180:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32180:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32200:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "32196:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32196:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "32176:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32176:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "32166:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32139:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "32149:6:8",
														"type": ""
													}
												],
												"src": "32108:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32322:128:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32344:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32352:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32340:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32340:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32356:34:8",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32333:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32333:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32333:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32412:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32420:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32408:15:8"
																	},
																	{
																		"hexValue": "6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32425:17:8",
																		"type": "",
																		"value": "er nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32401:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32401:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32401:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32314:6:8",
														"type": ""
													}
												],
												"src": "32216:234:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32562:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32584:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32592:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32580:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32580:14:8"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32596:34:8",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32573:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32573:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32573:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32652:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32660:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32648:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32648:15:8"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32665:10:8",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32641:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32641:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32641:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32554:6:8",
														"type": ""
													}
												],
												"src": "32456:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32795:142:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32817:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32825:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32813:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32813:14:8"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32829:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32806:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32806:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32806:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32885:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32893:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32881:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32881:15:8"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e74657220636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32898:31:8",
																		"type": "",
																		"value": "Receiver implementer contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32874:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32874:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32874:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32787:6:8",
														"type": ""
													}
												],
												"src": "32689:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33049:127:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33071:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33079:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33067:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33083:34:8",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33060:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33060:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33060:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33139:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33147:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33135:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33135:15:8"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33152:16:8",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33128:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33128:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33128:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33041:6:8",
														"type": ""
													}
												],
												"src": "32943:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33288:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33310:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33318:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33306:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33306:14:8"
																	},
																	{
																		"hexValue": "455243313135353a4552433131353552656365697665722072656a6563746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33322:34:8",
																		"type": "",
																		"value": "ERC1155:ERC1155Receiver rejected"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33299:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33299:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33299:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33280:6:8",
														"type": ""
													}
												],
												"src": "33182:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33476:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33498:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33506:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33494:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33494:14:8"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33510:34:8",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33487:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33487:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33487:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33566:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33574:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33562:15:8"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33579:12:8",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33555:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33555:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33468:6:8",
														"type": ""
													}
												],
												"src": "33370:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33711:124:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33733:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33741:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33729:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33729:14:8"
																	},
																	{
																		"hexValue": "455243313135353a61646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33745:34:8",
																		"type": "",
																		"value": "ERC1155:address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33722:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33722:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33722:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33801:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33809:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33797:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33797:15:8"
																	},
																	{
																		"hexValue": "6c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33814:13:8",
																		"type": "",
																		"value": "lid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33790:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33790:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33790:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33703:6:8",
														"type": ""
													}
												],
												"src": "33605:230:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33947:130:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33969:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33977:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33965:14:8"
																	},
																	{
																		"hexValue": "455243313135353a726563656976657220646f206e6f7420696d706c656d656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33981:34:8",
																		"type": "",
																		"value": "ERC1155:receiver do not implemen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33958:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33958:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33958:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34037:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34045:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34033:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34033:15:8"
																	},
																	{
																		"hexValue": "7420455243313135355265636569766572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34050:19:8",
																		"type": "",
																		"value": "t ERC1155Receiver"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34026:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34026:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34026:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33939:6:8",
														"type": ""
													}
												],
												"src": "33841:236:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34189:126:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34211:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34219:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34207:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34207:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2063616e206e6f74207472616e7366657220746f20746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34223:34:8",
																		"type": "",
																		"value": "ERC1155: can not transfer to the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34200:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34200:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34200:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34279:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34287:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34275:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34275:15:8"
																	},
																	{
																		"hexValue": "207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34292:15:8",
																		"type": "",
																		"value": " zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34268:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34268:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34268:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34181:6:8",
														"type": ""
													}
												],
												"src": "34083:232:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34427:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34449:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34457:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34445:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34445:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34461:34:8",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34438:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34438:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34438:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34517:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34525:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34513:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34513:15:8"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34530:11:8",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34506:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34506:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34506:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34419:6:8",
														"type": ""
													}
												],
												"src": "34321:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34661:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34683:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34691:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34679:14:8"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34695:34:8",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34672:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34672:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34751:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34759:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34747:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34747:15:8"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34764:11:8",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34740:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34740:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34740:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34653:6:8",
														"type": ""
													}
												],
												"src": "34555:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34895:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34917:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34925:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34913:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34913:14:8"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34929:34:8",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34906:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34906:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34906:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34985:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34993:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34981:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34981:15:8"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34998:10:8",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34974:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "34974:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34974:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34887:6:8",
														"type": ""
													}
												],
												"src": "34789:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35065:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35122:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35131:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35134:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "35124:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35124:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35124:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "35088:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "35113:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "35095:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "35095:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "35085:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35085:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "35078:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "35078:43:8"
															},
															"nodeType": "YulIf",
															"src": "35075:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35058:5:8",
														"type": ""
													}
												],
												"src": "35022:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35190:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35244:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35253:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35256:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "35246:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35246:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35246:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "35213:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "35235:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "35220:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "35220:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "35210:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35210:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "35203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "35203:40:8"
															},
															"nodeType": "YulIf",
															"src": "35200:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35183:5:8",
														"type": ""
													}
												],
												"src": "35150:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35314:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35370:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35379:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35382:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "35372:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35372:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35372:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "35337:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "35361:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "35344:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "35344:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "35334:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35334:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "35327:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "35327:42:8"
															},
															"nodeType": "YulIf",
															"src": "35324:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35307:5:8",
														"type": ""
													}
												],
												"src": "35272:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35441:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35498:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35507:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35510:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "35500:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35500:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35500:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "35464:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "35489:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "35471:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "35471:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "35461:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35461:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "35454:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "35454:43:8"
															},
															"nodeType": "YulIf",
															"src": "35451:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35434:5:8",
														"type": ""
													}
												],
												"src": "35398:122:8"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er nor approved\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non-ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer contract\")\n\n    }\n\n    function store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er or approved\")\n\n    }\n\n    function store_literal_in_memory_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155:ERC1155Receiver rejected\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155:address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid address\")\n\n    }\n\n    function store_literal_in_memory_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155:receiver do not implemen\")\n\n        mstore(add(memPtr, 32), \"t ERC1155Receiver\")\n\n    }\n\n    function store_literal_in_memory_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: can not transfer to the\")\n\n        mstore(add(memPtr, 32), \" zero address\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a19190611721565b6101d0565b6040516100b39190611e55565b60405180910390f35b6100d660048036038101906100d191906117d9565b610299565b6040516100e39190611c98565b60405180910390f35b61010660048036038101906101019190611833565b6103d3565b6040516101139190611cb3565b60405180910390f35b6101366004803603810190610131919061157b565b610432565b005b610152600480360381019061014d9190611761565b6107bb565b60405161015f9190611c3f565b60405180910390f35b610182600480360381019061017d91906116e1565b6108d6565b005b61019e6004803603810190610199919061153b565b610a48565b6040516101ab9190611c98565b60405180910390f35b6101ce60048036038101906101c9919061164a565b610adc565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611d95565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103cc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060006103df610dc1565b905060008151116103ff576040518060200160405280600081525061042a565b8061040984610dd8565b60405160200161041a929190611b59565b6040516020818303038152906040525b915050919050565b60003390508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16148061047757506104768682610a48565b5b6104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90611cd5565b60405180910390fd5b82518451146104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190611e35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190611dd5565b60405180910390fd5b610578818787878787610eb0565b60005b8451811015610734576000858281518110610599576105986121db565b5b6020026020010151905060008583815181106105b8576105b76121db565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090611d75565b60405180910390fd5b81816106659190612019565b60008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107179190611fc3565b92505081905550505050808061072c90612134565b91505061057b565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107ab929190611c61565b60405180910390a4505050505050565b60608151835114610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611e15565b60405180910390fd5b6000835167ffffffffffffffff81111561081e5761081d61220a565b5b60405190808252806020026020018201604052801561084c5781602001602082028036833780820191505090505b50905060005b84518110156108cb57610899858281518110610871576108706121db565b5b602002602001015185838151811061088c5761088b6121db565b5b60200260200101516101d0565b8282815181106108ac576108ab6121db565b5b60200260200101818152505080806108c390612134565b915050610852565b508091505092915050565b60003390508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190611df5565b60405180910390fd5b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610a3b9190611c98565b60405180910390a3505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003390508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480610b215750610b208682610a48565b5b610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790611d35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790611dd5565b60405180910390fd5b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5e90611d75565b60405180910390fd5b610c75828888888888611030565b8381610c819190612019565b60008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d339190611fc3565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610db0929190611e70565b60405180910390a450505050505050565b606060405180602001604052806000815250905090565b606060006001610de7846111b0565b01905060008167ffffffffffffffff811115610e0657610e0561220a565b5b6040519080825280601f01601f191660200182016040528015610e385781602001600182028036833780820191505090505b509050600082602001820190505b600115610ea5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610e8f57610e8e6121ac565b5b0494506000851415610ea057610ea5565b610e46565b819350505050919050565b610ecf8473ffffffffffffffffffffffffffffffffffffffff16611303565b15611028578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f15959493929190611b7d565b602060405180830381600087803b158015610f2f57600080fd5b505af1925050508015610f6057506040513d601f19601f82011682018060405250810190610f5d9190611806565b60015b610f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9690611d15565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101d90611cf5565b60405180910390fd5b505b505050505050565b61104f8473ffffffffffffffffffffffffffffffffffffffff16611303565b156111a8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611095959493929190611be5565b602060405180830381600087803b1580156110af57600080fd5b505af19250505080156110e057506040513d601f19601f820116820180604052508101906110dd9190611806565b60015b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690611db5565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90611d55565b60405180910390fd5b505b505050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061120e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611204576112036121ac565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061124b576d04ee2d6d415b85acef81000000008381611241576112406121ac565b5b0492506020810190505b662386f26fc10000831061127a57662386f26fc1000083816112705761126f6121ac565b5b0492506010810190505b6305f5e10083106112a3576305f5e1008381611299576112986121ac565b5b0492506008810190505b61271083106112c85761271083816112be576112bd6121ac565b5b0492506004810190505b606483106112eb57606483816112e1576112e06121ac565b5b0492506002810190505b600a83106112fa576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061133961133484611ebe565b611e99565b9050808382526020820190508285602086028201111561135c5761135b61223e565b5b60005b8581101561138c57816113728882611448565b84526020840193506020830192505060018101905061135f565b5050509392505050565b60006113a96113a484611eea565b611e99565b905080838252602082019050828560208602820111156113cc576113cb61223e565b5b60005b858110156113fc57816113e28882611526565b8452602084019350602083019250506001810190506113cf565b5050509392505050565b600061141961141484611f16565b611e99565b90508281526020810184848401111561143557611434612243565b5b6114408482856120c1565b509392505050565b600081359050611457816125f1565b92915050565b600082601f83011261147257611471612239565b5b8135611482848260208601611326565b91505092915050565b600082601f8301126114a05761149f612239565b5b81356114b0848260208601611396565b91505092915050565b6000813590506114c881612608565b92915050565b6000813590506114dd8161261f565b92915050565b6000815190506114f28161261f565b92915050565b600082601f83011261150d5761150c612239565b5b813561151d848260208601611406565b91505092915050565b60008135905061153581612636565b92915050565b600080604083850312156115525761155161224d565b5b600061156085828601611448565b925050602061157185828601611448565b9150509250929050565b600080600080600060a086880312156115975761159661224d565b5b60006115a588828901611448565b95505060206115b688828901611448565b945050604086013567ffffffffffffffff8111156115d7576115d6612248565b5b6115e38882890161148b565b935050606086013567ffffffffffffffff81111561160457611603612248565b5b6116108882890161148b565b925050608086013567ffffffffffffffff81111561163157611630612248565b5b61163d888289016114f8565b9150509295509295909350565b600080600080600060a086880312156116665761166561224d565b5b600061167488828901611448565b955050602061168588828901611448565b945050604061169688828901611526565b93505060606116a788828901611526565b925050608086013567ffffffffffffffff8111156116c8576116c7612248565b5b6116d4888289016114f8565b9150509295509295909350565b600080604083850312156116f8576116f761224d565b5b600061170685828601611448565b9250506020611717858286016114b9565b9150509250929050565b600080604083850312156117385761173761224d565b5b600061174685828601611448565b925050602061175785828601611526565b9150509250929050565b600080604083850312156117785761177761224d565b5b600083013567ffffffffffffffff81111561179657611795612248565b5b6117a28582860161145d565b925050602083013567ffffffffffffffff8111156117c3576117c2612248565b5b6117cf8582860161148b565b9150509250929050565b6000602082840312156117ef576117ee61224d565b5b60006117fd848285016114ce565b91505092915050565b60006020828403121561181c5761181b61224d565b5b600061182a848285016114e3565b91505092915050565b6000602082840312156118495761184861224d565b5b600061185784828501611526565b91505092915050565b600061186c8383611b3b565b60208301905092915050565b6118818161204d565b82525050565b600061189282611f57565b61189c8185611f85565b93506118a783611f47565b8060005b838110156118d85781516118bf8882611860565b97506118ca83611f78565b9250506001810190506118ab565b5085935050505092915050565b6118ee8161205f565b82525050565b60006118ff82611f62565b6119098185611f96565b93506119198185602086016120d0565b61192281612252565b840191505092915050565b600061193882611f6d565b6119428185611fa7565b93506119528185602086016120d0565b61195b81612252565b840191505092915050565b600061197182611f6d565b61197b8185611fb8565b935061198b8185602086016120d0565b80840191505092915050565b60006119a4602f83611fa7565b91506119af82612263565b604082019050919050565b60006119c7602883611fa7565b91506119d2826122b2565b604082019050919050565b60006119ea603d83611fa7565b91506119f582612301565b604082019050919050565b6000611a0d602e83611fa7565b9150611a1882612350565b604082019050919050565b6000611a30602083611fa7565b9150611a3b8261239f565b602082019050919050565b6000611a53602a83611fa7565b9150611a5e826123c8565b604082019050919050565b6000611a76602b83611fa7565b9150611a8182612417565b604082019050919050565b6000611a99603183611fa7565b9150611aa482612466565b604082019050919050565b6000611abc602d83611fa7565b9150611ac7826124b5565b604082019050919050565b6000611adf602983611fa7565b9150611aea82612504565b604082019050919050565b6000611b02602983611fa7565b9150611b0d82612553565b604082019050919050565b6000611b25602883611fa7565b9150611b30826125a2565b604082019050919050565b611b44816120b7565b82525050565b611b53816120b7565b82525050565b6000611b658285611966565b9150611b718284611966565b91508190509392505050565b600060a082019050611b926000830188611878565b611b9f6020830187611878565b8181036040830152611bb18186611887565b90508181036060830152611bc58185611887565b90508181036080830152611bd981846118f4565b90509695505050505050565b600060a082019050611bfa6000830188611878565b611c076020830187611878565b611c146040830186611b4a565b611c216060830185611b4a565b8181036080830152611c3381846118f4565b90509695505050505050565b60006020820190508181036000830152611c598184611887565b905092915050565b60006040820190508181036000830152611c7b8185611887565b90508181036020830152611c8f8184611887565b90509392505050565b6000602082019050611cad60008301846118e5565b92915050565b60006020820190508181036000830152611ccd818461192d565b905092915050565b60006020820190508181036000830152611cee81611997565b9050919050565b60006020820190508181036000830152611d0e816119ba565b9050919050565b60006020820190508181036000830152611d2e816119dd565b9050919050565b60006020820190508181036000830152611d4e81611a00565b9050919050565b60006020820190508181036000830152611d6e81611a23565b9050919050565b60006020820190508181036000830152611d8e81611a46565b9050919050565b60006020820190508181036000830152611dae81611a69565b9050919050565b60006020820190508181036000830152611dce81611a8c565b9050919050565b60006020820190508181036000830152611dee81611aaf565b9050919050565b60006020820190508181036000830152611e0e81611ad2565b9050919050565b60006020820190508181036000830152611e2e81611af5565b9050919050565b60006020820190508181036000830152611e4e81611b18565b9050919050565b6000602082019050611e6a6000830184611b4a565b92915050565b6000604082019050611e856000830185611b4a565b611e926020830184611b4a565b9392505050565b6000611ea3611eb4565b9050611eaf8282612103565b919050565b6000604051905090565b600067ffffffffffffffff821115611ed957611ed861220a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f0557611f0461220a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f3157611f3061220a565b5b611f3a82612252565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611fce826120b7565b9150611fd9836120b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561200e5761200d61217d565b5b828201905092915050565b6000612024826120b7565b915061202f836120b7565b9250828210156120425761204161217d565b5b828203905092915050565b600061205882612097565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120ee5780820151818401526020810190506120d3565b838111156120fd576000848401525b50505050565b61210c82612252565b810181811067ffffffffffffffff8211171561212b5761212a61220a565b5b80604052505050565b600061213f826120b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121725761217161217d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e74657220636f6e7472616374000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b7f455243313135353a4552433131353552656365697665722072656a6563746564600082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a61646472657373207a65726f206973206e6f74206120766160008201527f6c69642061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a726563656976657220646f206e6f7420696d706c656d656e60008201527f7420455243313135355265636569766572000000000000000000000000000000602082015250565b7f455243313135353a2063616e206e6f74207472616e7366657220746f2074686560008201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6125fa8161204d565b811461260557600080fd5b50565b6126118161205f565b811461261c57600080fd5b50565b6126288161206b565b811461263357600080fd5b50565b61263f816120b7565b811461264a57600080fd5b5056fea2646970667358221220434167668d67d79567ddbed1b518039217024113a9a644a5e1f04a6f61357a8364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3CC JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3DF PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x42A JUMP JUMPDEST DUP1 PUSH2 0x409 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x41A SWAP3 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x477 JUMPI POP PUSH2 0x476 DUP7 DUP3 PUSH2 0xA48 JUMP JUMPDEST JUMPDEST PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F1 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x578 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x599 JUMPI PUSH2 0x598 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B7 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x72C SWAP1 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57B JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7AB SWAP3 SWAP2 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x84C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x899 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8AC JUMPI PUSH2 0x8AB PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x8C3 SWAP1 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x852 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x941 SWAP1 PUSH2 0x1DF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB21 JUMPI POP PUSH2 0xB20 DUP7 DUP3 PUSH2 0xA48 JUMP JUMPDEST JUMPDEST PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB57 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC7 SWAP1 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5E SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC75 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1030 JUMP JUMPDEST DUP4 DUP2 PUSH2 0xC81 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD33 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xDB0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xDE7 DUP5 PUSH2 0x11B0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE06 JUMPI PUSH2 0xE05 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE38 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xEA5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xEA0 JUMPI PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1303 JUMP JUMPDEST ISZERO PUSH2 0x1028 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF60 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF96 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x104F DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1303 JUMP JUMPDEST ISZERO PUSH2 0x11A8 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1095 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10E0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1116 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119D SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x120E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x124B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x127A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1270 JUMPI PUSH2 0x126F PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x12A3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x12C8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12EB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x21AC JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12FA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1339 PUSH2 0x1334 DUP5 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x223E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x138C JUMPI DUP2 PUSH2 0x1372 DUP9 DUP3 PUSH2 0x1448 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x135F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A9 PUSH2 0x13A4 DUP5 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13CC JUMPI PUSH2 0x13CB PUSH2 0x223E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x13FC JUMPI DUP2 PUSH2 0x13E2 DUP9 DUP3 PUSH2 0x1526 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13CF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1419 PUSH2 0x1414 DUP5 PUSH2 0x1F16 JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x2243 JUMP JUMPDEST JUMPDEST PUSH2 0x1440 DUP5 DUP3 DUP6 PUSH2 0x20C1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1457 DUP2 PUSH2 0x25F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1472 JUMPI PUSH2 0x1471 PUSH2 0x2239 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1482 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1326 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x2239 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C8 DUP2 PUSH2 0x2608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DD DUP2 PUSH2 0x261F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14F2 DUP2 PUSH2 0x261F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0x2239 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x151D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1406 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1535 DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1560 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1571 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1597 JUMPI PUSH2 0x1596 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A5 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15B6 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x15E3 DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x1610 DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1631 JUMPI PUSH2 0x1630 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x163D DUP9 DUP3 DUP10 ADD PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1674 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1685 DUP9 DUP3 DUP10 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x16A7 DUP9 DUP3 DUP10 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C7 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x16D4 DUP9 DUP3 DUP10 ADD PUSH2 0x14F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F8 JUMPI PUSH2 0x16F7 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1706 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1717 DUP6 DUP3 DUP7 ADD PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1746 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1757 DUP6 DUP3 DUP7 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x17A2 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x2248 JUMP JUMPDEST JUMPDEST PUSH2 0x17CF DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EF JUMPI PUSH2 0x17EE PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182A DUP5 DUP3 DUP6 ADD PUSH2 0x14E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x224D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1857 DUP5 DUP3 DUP6 ADD PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186C DUP4 DUP4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x204D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1892 DUP3 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x189C DUP2 DUP6 PUSH2 0x1F85 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A7 DUP4 PUSH2 0x1F47 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D8 JUMPI DUP2 MLOAD PUSH2 0x18BF DUP9 DUP3 PUSH2 0x1860 JUMP JUMPDEST SWAP8 POP PUSH2 0x18CA DUP4 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x205F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FF DUP3 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x1909 DUP2 DUP6 PUSH2 0x1F96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1919 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x1922 DUP2 PUSH2 0x2252 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1938 DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0x1942 DUP2 DUP6 PUSH2 0x1FA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1952 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x2252 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1971 DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0x197B DUP2 DUP6 PUSH2 0x1FB8 JUMP JUMPDEST SWAP4 POP PUSH2 0x198B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A4 PUSH1 0x2F DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AF DUP3 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C7 PUSH1 0x28 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D2 DUP3 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EA PUSH1 0x3D DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F5 DUP3 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D PUSH1 0x2E DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A18 DUP3 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A30 PUSH1 0x20 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3B DUP3 PUSH2 0x239F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A53 PUSH1 0x2A DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5E DUP3 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A76 PUSH1 0x2B DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A81 DUP3 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 PUSH1 0x31 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA4 DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC PUSH1 0x2D DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF PUSH1 0x29 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEA DUP3 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B02 PUSH1 0x29 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B25 PUSH1 0x28 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B30 DUP3 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x20B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x20B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B65 DUP3 DUP6 PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B71 DUP3 DUP5 PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B92 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x1B9F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1878 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BB1 DUP2 DUP7 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BC5 DUP2 DUP6 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1BD9 DUP2 DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BFA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x1C07 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x1C21 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B4A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C33 DUP2 DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C59 DUP2 DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7B DUP2 DUP6 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C8F DUP2 DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CCD DUP2 DUP5 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CEE DUP2 PUSH2 0x1997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0E DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2E DUP2 PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4E DUP2 PUSH2 0x1A00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D6E DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D8E DUP2 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DAE DUP2 PUSH2 0x1A69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCE DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEE DUP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0E DUP2 PUSH2 0x1AD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E2E DUP2 PUSH2 0x1AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4E DUP2 PUSH2 0x1B18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E85 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x1E92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA3 PUSH2 0x1EB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAF DUP3 DUP3 PUSH2 0x2103 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ED9 JUMPI PUSH2 0x1ED8 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F05 JUMPI PUSH2 0x1F04 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH2 0x1F3A DUP3 PUSH2 0x2252 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCE DUP3 PUSH2 0x20B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD9 DUP4 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x200E JUMPI PUSH2 0x200D PUSH2 0x217D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2024 DUP3 PUSH2 0x20B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x202F DUP4 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2042 JUMPI PUSH2 0x2041 PUSH2 0x217D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP3 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20D3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20FD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x210C DUP3 PUSH2 0x2252 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x212B JUMPI PUSH2 0x212A PUSH2 0x220A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213F DUP3 PUSH2 0x20B7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x217D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E74657220636F6E7472616374000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A4552433131353552656365697665722072656A6563746564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A61646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69642061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A726563656976657220646F206E6F7420696D706C656D656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420455243313135355265636569766572000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616E206E6F74207472616E7366657220746F20746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x25FA DUP2 PUSH2 0x204D JUMP JUMPDEST DUP2 EQ PUSH2 0x2605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2611 DUP2 PUSH2 0x205F JUMP JUMPDEST DUP2 EQ PUSH2 0x261C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2628 DUP2 PUSH2 0x206B JUMP JUMPDEST DUP2 EQ PUSH2 0x2633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x263F DUP2 PUSH2 0x20B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x264A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER COINBASE PUSH8 0x668D67D79567DDBE 0xD1 0xB5 XOR SUB SWAP3 OR MUL COINBASE SGT 0xA9 0xA6 DIFFICULTY 0xA5 0xE1 CREATE 0x4A PUSH16 0x61357A8364736F6C6343000807003300 ",
							"sourceMap": "277:9731:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1473:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;660:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1018:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6138:1036;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1924:456;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3183:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4247:847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1473:223;1553:7;1599:1;1579:22;;:8;:22;;;;1571:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1666:8;:13;1675:3;1666:13;;;;;;;;;;;:23;1680:8;1666:23;;;;;;;;;;;;;;;;1659:30;;1473:223;;;;:::o;660:249::-;739:4;776:26;761:41;;;:11;:41;;;;:97;;;;821:37;806:52;;;:11;:52;;;;761:97;:141;;;;877:25;862:40;;;:11;:40;;;;761:141;754:148;;660:249;;;:::o;1018:226::-;1081:13;1105:21;1129:10;:8;:10::i;:::-;1105:34;;1180:1;1162:7;1156:21;:25;:81;;;;;;;;;;;;;;;;;1208:7;1217:13;:2;:11;:13::i;:::-;1191:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1156:81;1149:88;;;1018:226;;;:::o;6138:1036::-;6292:16;6311:10;6292:29;;6348:8;6339:17;;:5;:17;;;:54;;;;6360:33;6377:5;6384:8;6360:16;:33::i;:::-;6339:54;6331:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;6478:8;:15;6463:4;:11;:30;6455:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6571:1;6556:17;;:3;:17;;;;6548:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;6656:68;6680:8;6690:5;6697:3;6702:4;6708:8;6718:5;6656:23;:68::i;:::-;6739:6;6734:368;6755:4;:11;6751:1;:15;6734:368;;;6787:10;6800:4;6805:1;6800:7;;;;;;;;:::i;:::-;;;;;;;;6787:20;;6821:14;6838:8;6847:1;6838:11;;;;;;;;:::i;:::-;;;;;;;;6821:28;;6863:19;6885:8;:12;6894:2;6885:12;;;;;;;;;;;:19;6898:5;6885:19;;;;;;;;;;;;;;;;6863:41;;6941:6;6926:11;:21;;6918:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7044:6;7030:11;:20;;;;:::i;:::-;7008:8;:12;7017:2;7008:12;;;;;;;;;;;:19;7021:5;7008:19;;;;;;;;;;;;;;;:42;;;;7085:6;7064:8;:12;7073:2;7064:12;;;;;;;;;;;:17;7077:3;7064:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6773:329;;;6768:3;;;;;:::i;:::-;;;;6734:368;;;;7147:3;7116:51;;7140:5;7116:51;;7130:8;7116:51;;;7152:4;7158:8;7116:51;;;;;;;:::i;:::-;;;;;;;;6282:892;6138:1036;;;;;:::o;1924:456::-;2028:16;2083:4;:11;2063:9;:16;:31;2055:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2150:30;2197:9;:16;2183:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:64;;2229:6;2224:120;2245:9;:16;2241:1;:20;2224:120;;;2301:32;2311:9;2321:1;2311:12;;;;;;;;:::i;:::-;;;;;;;;2325:4;2330:1;2325:7;;;;;;;;:::i;:::-;;;;;;;;2301:9;:32::i;:::-;2282:13;2296:1;2282:16;;;;;;;;:::i;:::-;;;;;;;:51;;;;;2263:3;;;;;:::i;:::-;;;;2224:120;;;;2360:13;2353:20;;;1924:456;;;;:::o;2688:317::-;2775:13;2791:10;2775:26;;2828:9;2819:18;;:5;:18;;;;2811:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2931:9;2893:17;:24;2911:5;2893:24;;;;;;;;;;;;;;;:35;2918:9;2893:35;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;2977:9;2955:43;;2970:5;2955:43;;;2988:9;2955:43;;;;;;:::i;:::-;;;;;;;;2765:240;2688:317;;:::o;3183:160::-;3276:4;3298:17;:27;3316:8;3298:27;;;;;;;;;;;;;;;:38;3326:9;3298:38;;;;;;;;;;;;;;;;;;;;;;;;;3291:45;;3183:160;;;;:::o;4247:847::-;4459:16;4478:10;4459:29;;4515:8;4506:17;;:5;:17;;;:54;;;;4527:33;4544:5;4551:8;4527:16;:33::i;:::-;4506:54;4498:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;4644:1;4629:17;;:3;:17;;;;4621:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4706:19;4728:8;:13;4737:3;4728:13;;;;;;;;;;;:20;4742:5;4728:20;;;;;;;;;;;;;;;;4706:42;;4781:7;4766:11;:22;;4758:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4868:61;4887:8;4897:5;4904:3;4909;4914:7;4923:5;4868:18;:61::i;:::-;4976:7;4962:11;:21;;;;:::i;:::-;4939:8;:13;4948:3;4939:13;;;;;;;;;;;:20;4953:5;4939:20;;;;;;;;;;;;;;;:44;;;;5015:7;4993:8;:13;5002:3;4993:13;;;;;;;;;;;:18;5007:3;4993:18;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;5069:3;5037:50;;5062:5;5037:50;;5052:8;5037:50;;;5074:3;5079:7;5037:50;;;;;;;:::i;:::-;;;;;;;;4366:728;;4247:847;;;;;:::o;1250:91::-;1301:13;1325:9;;;;;;;;;;;;;;1250:91;:::o;410:696:7:-;466:13;515:14;552:1;532:17;543:5;532:10;:17::i;:::-;:21;515:38;;567:20;601:6;590:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:41;;622:11;748:6;744:2;740:15;732:6;728:28;721:35;;783:280;790:4;783:280;;;814:5;;;;;;;;953:8;948:2;941:5;937:14;932:30;927:3;919:44;1007:2;998:11;;;;;;:::i;:::-;;;;;1040:1;1031:5;:10;1027:21;;;1043:5;;1027:21;783:280;;;1083:6;1076:13;;;;;410:696;;;:::o;7180:612:0:-;7350:16;:3;:14;;;:16::i;:::-;7347:439;;;7401:3;7384:44;;;7429:9;7440:5;7447:4;7453:8;7463:5;7384:85;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7380:396;;7691:71;;;;;;;;;;:::i;:::-;;;;;;;;7380:396;7521:48;;;7511:58;;;:6;:58;;;;7508:145;;7588:50;;;;;;;;;;:::i;:::-;;;;;;;;7508:145;7470:196;7347:439;7180:612;;;;;;:::o;5100:571::-;5245:16;:3;:14;;;:16::i;:::-;5242:423;;;5297:3;5280:39;;;5320:9;5331:5;5338:3;5343:7;5352:5;5280:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5276:379;;5581:59;;;;;;;;;;:::i;:::-;;;;;;;;5276:379;5414:43;;;5404:53;;;:6;:53;;;;5401:140;;5480:42;;;;;;;;;;:::i;:::-;;;;;;;;5401:140;5359:196;5242:423;5100:571;;;;;;:::o;9889:890:6:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;24:722:8:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:410::-;1574:5;1599:65;1615:48;1656:6;1615:48;:::i;:::-;1599:65;:::i;:::-;1590:74;;1687:6;1680:5;1673:21;1725:4;1718:5;1714:16;1763:3;1754:6;1749:3;1745:16;1742:25;1739:112;;;1770:79;;:::i;:::-;1739:112;1860:41;1894:6;1889:3;1884;1860:41;:::i;:::-;1580:327;1497:410;;;;;:::o;1913:139::-;1959:5;1997:6;1984:20;1975:29;;2013:33;2040:5;2013:33;:::i;:::-;1913:139;;;;:::o;2075:370::-;2146:5;2195:3;2188:4;2180:6;2176:17;2172:27;2162:122;;2203:79;;:::i;:::-;2162:122;2320:6;2307:20;2345:94;2435:3;2427:6;2420:4;2412:6;2408:17;2345:94;:::i;:::-;2336:103;;2152:293;2075:370;;;;:::o;2468:::-;2539:5;2588:3;2581:4;2573:6;2569:17;2565:27;2555:122;;2596:79;;:::i;:::-;2555:122;2713:6;2700:20;2738:94;2828:3;2820:6;2813:4;2805:6;2801:17;2738:94;:::i;:::-;2729:103;;2545:293;2468:370;;;;:::o;2844:133::-;2887:5;2925:6;2912:20;2903:29;;2941:30;2965:5;2941:30;:::i;:::-;2844:133;;;;:::o;2983:137::-;3028:5;3066:6;3053:20;3044:29;;3082:32;3108:5;3082:32;:::i;:::-;2983:137;;;;:::o;3126:141::-;3182:5;3213:6;3207:13;3198:22;;3229:32;3255:5;3229:32;:::i;:::-;3126:141;;;;:::o;3286:338::-;3341:5;3390:3;3383:4;3375:6;3371:17;3367:27;3357:122;;3398:79;;:::i;:::-;3357:122;3515:6;3502:20;3540:78;3614:3;3606:6;3599:4;3591:6;3587:17;3540:78;:::i;:::-;3531:87;;3347:277;3286:338;;;;:::o;3630:139::-;3676:5;3714:6;3701:20;3692:29;;3730:33;3757:5;3730:33;:::i;:::-;3630:139;;;;:::o;3775:474::-;3843:6;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3997:117;4153:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4124:118;3775:474;;;;;:::o;4255:1509::-;4409:6;4417;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4900:2;4889:9;4885:18;4872:32;4931:18;4923:6;4920:30;4917:117;;;4953:79;;:::i;:::-;4917:117;5058:78;5128:7;5119:6;5108:9;5104:22;5058:78;:::i;:::-;5048:88;;4843:303;5213:2;5202:9;5198:18;5185:32;5244:18;5236:6;5233:30;5230:117;;;5266:79;;:::i;:::-;5230:117;5371:78;5441:7;5432:6;5421:9;5417:22;5371:78;:::i;:::-;5361:88;;5156:303;5526:3;5515:9;5511:19;5498:33;5558:18;5550:6;5547:30;5544:117;;;5580:79;;:::i;:::-;5544:117;5685:62;5739:7;5730:6;5719:9;5715:22;5685:62;:::i;:::-;5675:72;;5469:288;4255:1509;;;;;;;;:::o;5770:1089::-;5874:6;5882;5890;5898;5906;5955:3;5943:9;5934:7;5930:23;5926:33;5923:120;;;5962:79;;:::i;:::-;5923:120;6082:1;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;:::i;:::-;6097:63;;6053:117;6209:2;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6180:118;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;6621:3;6610:9;6606:19;6593:33;6653:18;6645:6;6642:30;6639:117;;;6675:79;;:::i;:::-;6639:117;6780:62;6834:7;6825:6;6814:9;6810:22;6780:62;:::i;:::-;6770:72;;6564:288;5770:1089;;;;;;;;:::o;6865:468::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7240:2;7266:50;7308:7;7299:6;7288:9;7284:22;7266:50;:::i;:::-;7256:60;;7211:115;6865:468;;;;;:::o;7339:474::-;7407:6;7415;7464:2;7452:9;7443:7;7439:23;7435:32;7432:119;;;7470:79;;:::i;:::-;7432:119;7590:1;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7561:117;7717:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;:::i;:::-;7733:63;;7688:118;7339:474;;;;;:::o;7819:894::-;7937:6;7945;7994:2;7982:9;7973:7;7969:23;7965:32;7962:119;;;8000:79;;:::i;:::-;7962:119;8148:1;8137:9;8133:17;8120:31;8178:18;8170:6;8167:30;8164:117;;;8200:79;;:::i;:::-;8164:117;8305:78;8375:7;8366:6;8355:9;8351:22;8305:78;:::i;:::-;8295:88;;8091:302;8460:2;8449:9;8445:18;8432:32;8491:18;8483:6;8480:30;8477:117;;;8513:79;;:::i;:::-;8477:117;8618:78;8688:7;8679:6;8668:9;8664:22;8618:78;:::i;:::-;8608:88;;8403:303;7819:894;;;;;:::o;8719:327::-;8777:6;8826:2;8814:9;8805:7;8801:23;8797:32;8794:119;;;8832:79;;:::i;:::-;8794:119;8952:1;8977:52;9021:7;9012:6;9001:9;8997:22;8977:52;:::i;:::-;8967:62;;8923:116;8719:327;;;;:::o;9052:349::-;9121:6;9170:2;9158:9;9149:7;9145:23;9141:32;9138:119;;;9176:79;;:::i;:::-;9138:119;9296:1;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;:::i;:::-;9311:73;;9267:127;9052:349;;;;:::o;9407:329::-;9466:6;9515:2;9503:9;9494:7;9490:23;9486:32;9483:119;;;9521:79;;:::i;:::-;9483:119;9641:1;9666:53;9711:7;9702:6;9691:9;9687:22;9666:53;:::i;:::-;9656:63;;9612:117;9407:329;;;;:::o;9742:179::-;9811:10;9832:46;9874:3;9866:6;9832:46;:::i;:::-;9910:4;9905:3;9901:14;9887:28;;9742:179;;;;:::o;9927:118::-;10014:24;10032:5;10014:24;:::i;:::-;10009:3;10002:37;9927:118;;:::o;10081:732::-;10200:3;10229:54;10277:5;10229:54;:::i;:::-;10299:86;10378:6;10373:3;10299:86;:::i;:::-;10292:93;;10409:56;10459:5;10409:56;:::i;:::-;10488:7;10519:1;10504:284;10529:6;10526:1;10523:13;10504:284;;;10605:6;10599:13;10632:63;10691:3;10676:13;10632:63;:::i;:::-;10625:70;;10718:60;10771:6;10718:60;:::i;:::-;10708:70;;10564:224;10551:1;10548;10544:9;10539:14;;10504:284;;;10508:14;10804:3;10797:10;;10205:608;;;10081:732;;;;:::o;10819:109::-;10900:21;10915:5;10900:21;:::i;:::-;10895:3;10888:34;10819:109;;:::o;10934:360::-;11020:3;11048:38;11080:5;11048:38;:::i;:::-;11102:70;11165:6;11160:3;11102:70;:::i;:::-;11095:77;;11181:52;11226:6;11221:3;11214:4;11207:5;11203:16;11181:52;:::i;:::-;11258:29;11280:6;11258:29;:::i;:::-;11253:3;11249:39;11242:46;;11024:270;10934:360;;;;:::o;11300:364::-;11388:3;11416:39;11449:5;11416:39;:::i;:::-;11471:71;11535:6;11530:3;11471:71;:::i;:::-;11464:78;;11551:52;11596:6;11591:3;11584:4;11577:5;11573:16;11551:52;:::i;:::-;11628:29;11650:6;11628:29;:::i;:::-;11623:3;11619:39;11612:46;;11392:272;11300:364;;;;:::o;11670:377::-;11776:3;11804:39;11837:5;11804:39;:::i;:::-;11859:89;11941:6;11936:3;11859:89;:::i;:::-;11852:96;;11957:52;12002:6;11997:3;11990:4;11983:5;11979:16;11957:52;:::i;:::-;12034:6;12029:3;12025:16;12018:23;;11780:267;11670:377;;;;:::o;12053:366::-;12195:3;12216:67;12280:2;12275:3;12216:67;:::i;:::-;12209:74;;12292:93;12381:3;12292:93;:::i;:::-;12410:2;12405:3;12401:12;12394:19;;12053:366;;;:::o;12425:::-;12567:3;12588:67;12652:2;12647:3;12588:67;:::i;:::-;12581:74;;12664:93;12753:3;12664:93;:::i;:::-;12782:2;12777:3;12773:12;12766:19;;12425:366;;;:::o;12797:::-;12939:3;12960:67;13024:2;13019:3;12960:67;:::i;:::-;12953:74;;13036:93;13125:3;13036:93;:::i;:::-;13154:2;13149:3;13145:12;13138:19;;12797:366;;;:::o;13169:::-;13311:3;13332:67;13396:2;13391:3;13332:67;:::i;:::-;13325:74;;13408:93;13497:3;13408:93;:::i;:::-;13526:2;13521:3;13517:12;13510:19;;13169:366;;;:::o;13541:::-;13683:3;13704:67;13768:2;13763:3;13704:67;:::i;:::-;13697:74;;13780:93;13869:3;13780:93;:::i;:::-;13898:2;13893:3;13889:12;13882:19;;13541:366;;;:::o;13913:::-;14055:3;14076:67;14140:2;14135:3;14076:67;:::i;:::-;14069:74;;14152:93;14241:3;14152:93;:::i;:::-;14270:2;14265:3;14261:12;14254:19;;13913:366;;;:::o;14285:::-;14427:3;14448:67;14512:2;14507:3;14448:67;:::i;:::-;14441:74;;14524:93;14613:3;14524:93;:::i;:::-;14642:2;14637:3;14633:12;14626:19;;14285:366;;;:::o;14657:::-;14799:3;14820:67;14884:2;14879:3;14820:67;:::i;:::-;14813:74;;14896:93;14985:3;14896:93;:::i;:::-;15014:2;15009:3;15005:12;14998:19;;14657:366;;;:::o;15029:::-;15171:3;15192:67;15256:2;15251:3;15192:67;:::i;:::-;15185:74;;15268:93;15357:3;15268:93;:::i;:::-;15386:2;15381:3;15377:12;15370:19;;15029:366;;;:::o;15401:::-;15543:3;15564:67;15628:2;15623:3;15564:67;:::i;:::-;15557:74;;15640:93;15729:3;15640:93;:::i;:::-;15758:2;15753:3;15749:12;15742:19;;15401:366;;;:::o;15773:::-;15915:3;15936:67;16000:2;15995:3;15936:67;:::i;:::-;15929:74;;16012:93;16101:3;16012:93;:::i;:::-;16130:2;16125:3;16121:12;16114:19;;15773:366;;;:::o;16145:::-;16287:3;16308:67;16372:2;16367:3;16308:67;:::i;:::-;16301:74;;16384:93;16473:3;16384:93;:::i;:::-;16502:2;16497:3;16493:12;16486:19;;16145:366;;;:::o;16517:108::-;16594:24;16612:5;16594:24;:::i;:::-;16589:3;16582:37;16517:108;;:::o;16631:118::-;16718:24;16736:5;16718:24;:::i;:::-;16713:3;16706:37;16631:118;;:::o;16755:435::-;16935:3;16957:95;17048:3;17039:6;16957:95;:::i;:::-;16950:102;;17069:95;17160:3;17151:6;17069:95;:::i;:::-;17062:102;;17181:3;17174:10;;16755:435;;;;;:::o;17196:1053::-;17519:4;17557:3;17546:9;17542:19;17534:27;;17571:71;17639:1;17628:9;17624:17;17615:6;17571:71;:::i;:::-;17652:72;17720:2;17709:9;17705:18;17696:6;17652:72;:::i;:::-;17771:9;17765:4;17761:20;17756:2;17745:9;17741:18;17734:48;17799:108;17902:4;17893:6;17799:108;:::i;:::-;17791:116;;17954:9;17948:4;17944:20;17939:2;17928:9;17924:18;17917:48;17982:108;18085:4;18076:6;17982:108;:::i;:::-;17974:116;;18138:9;18132:4;18128:20;18122:3;18111:9;18107:19;18100:49;18166:76;18237:4;18228:6;18166:76;:::i;:::-;18158:84;;17196:1053;;;;;;;;:::o;18255:751::-;18478:4;18516:3;18505:9;18501:19;18493:27;;18530:71;18598:1;18587:9;18583:17;18574:6;18530:71;:::i;:::-;18611:72;18679:2;18668:9;18664:18;18655:6;18611:72;:::i;:::-;18693;18761:2;18750:9;18746:18;18737:6;18693:72;:::i;:::-;18775;18843:2;18832:9;18828:18;18819:6;18775:72;:::i;:::-;18895:9;18889:4;18885:20;18879:3;18868:9;18864:19;18857:49;18923:76;18994:4;18985:6;18923:76;:::i;:::-;18915:84;;18255:751;;;;;;;;:::o;19012:373::-;19155:4;19193:2;19182:9;19178:18;19170:26;;19242:9;19236:4;19232:20;19228:1;19217:9;19213:17;19206:47;19270:108;19373:4;19364:6;19270:108;:::i;:::-;19262:116;;19012:373;;;;:::o;19391:634::-;19612:4;19650:2;19639:9;19635:18;19627:26;;19699:9;19693:4;19689:20;19685:1;19674:9;19670:17;19663:47;19727:108;19830:4;19821:6;19727:108;:::i;:::-;19719:116;;19882:9;19876:4;19872:20;19867:2;19856:9;19852:18;19845:48;19910:108;20013:4;20004:6;19910:108;:::i;:::-;19902:116;;19391:634;;;;;:::o;20031:210::-;20118:4;20156:2;20145:9;20141:18;20133:26;;20169:65;20231:1;20220:9;20216:17;20207:6;20169:65;:::i;:::-;20031:210;;;;:::o;20247:313::-;20360:4;20398:2;20387:9;20383:18;20375:26;;20447:9;20441:4;20437:20;20433:1;20422:9;20418:17;20411:47;20475:78;20548:4;20539:6;20475:78;:::i;:::-;20467:86;;20247:313;;;;:::o;20566:419::-;20732:4;20770:2;20759:9;20755:18;20747:26;;20819:9;20813:4;20809:20;20805:1;20794:9;20790:17;20783:47;20847:131;20973:4;20847:131;:::i;:::-;20839:139;;20566:419;;;:::o;20991:::-;21157:4;21195:2;21184:9;21180:18;21172:26;;21244:9;21238:4;21234:20;21230:1;21219:9;21215:17;21208:47;21272:131;21398:4;21272:131;:::i;:::-;21264:139;;20991:419;;;:::o;21416:::-;21582:4;21620:2;21609:9;21605:18;21597:26;;21669:9;21663:4;21659:20;21655:1;21644:9;21640:17;21633:47;21697:131;21823:4;21697:131;:::i;:::-;21689:139;;21416:419;;;:::o;21841:::-;22007:4;22045:2;22034:9;22030:18;22022:26;;22094:9;22088:4;22084:20;22080:1;22069:9;22065:17;22058:47;22122:131;22248:4;22122:131;:::i;:::-;22114:139;;21841:419;;;:::o;22266:::-;22432:4;22470:2;22459:9;22455:18;22447:26;;22519:9;22513:4;22509:20;22505:1;22494:9;22490:17;22483:47;22547:131;22673:4;22547:131;:::i;:::-;22539:139;;22266:419;;;:::o;22691:::-;22857:4;22895:2;22884:9;22880:18;22872:26;;22944:9;22938:4;22934:20;22930:1;22919:9;22915:17;22908:47;22972:131;23098:4;22972:131;:::i;:::-;22964:139;;22691:419;;;:::o;23116:::-;23282:4;23320:2;23309:9;23305:18;23297:26;;23369:9;23363:4;23359:20;23355:1;23344:9;23340:17;23333:47;23397:131;23523:4;23397:131;:::i;:::-;23389:139;;23116:419;;;:::o;23541:::-;23707:4;23745:2;23734:9;23730:18;23722:26;;23794:9;23788:4;23784:20;23780:1;23769:9;23765:17;23758:47;23822:131;23948:4;23822:131;:::i;:::-;23814:139;;23541:419;;;:::o;23966:::-;24132:4;24170:2;24159:9;24155:18;24147:26;;24219:9;24213:4;24209:20;24205:1;24194:9;24190:17;24183:47;24247:131;24373:4;24247:131;:::i;:::-;24239:139;;23966:419;;;:::o;24391:::-;24557:4;24595:2;24584:9;24580:18;24572:26;;24644:9;24638:4;24634:20;24630:1;24619:9;24615:17;24608:47;24672:131;24798:4;24672:131;:::i;:::-;24664:139;;24391:419;;;:::o;24816:::-;24982:4;25020:2;25009:9;25005:18;24997:26;;25069:9;25063:4;25059:20;25055:1;25044:9;25040:17;25033:47;25097:131;25223:4;25097:131;:::i;:::-;25089:139;;24816:419;;;:::o;25241:::-;25407:4;25445:2;25434:9;25430:18;25422:26;;25494:9;25488:4;25484:20;25480:1;25469:9;25465:17;25458:47;25522:131;25648:4;25522:131;:::i;:::-;25514:139;;25241:419;;;:::o;25666:222::-;25759:4;25797:2;25786:9;25782:18;25774:26;;25810:71;25878:1;25867:9;25863:17;25854:6;25810:71;:::i;:::-;25666:222;;;;:::o;25894:332::-;26015:4;26053:2;26042:9;26038:18;26030:26;;26066:71;26134:1;26123:9;26119:17;26110:6;26066:71;:::i;:::-;26147:72;26215:2;26204:9;26200:18;26191:6;26147:72;:::i;:::-;25894:332;;;;;:::o;26232:129::-;26266:6;26293:20;;:::i;:::-;26283:30;;26322:33;26350:4;26342:6;26322:33;:::i;:::-;26232:129;;;:::o;26367:75::-;26400:6;26433:2;26427:9;26417:19;;26367:75;:::o;26448:311::-;26525:4;26615:18;26607:6;26604:30;26601:56;;;26637:18;;:::i;:::-;26601:56;26687:4;26679:6;26675:17;26667:25;;26747:4;26741;26737:15;26729:23;;26448:311;;;:::o;26765:::-;26842:4;26932:18;26924:6;26921:30;26918:56;;;26954:18;;:::i;:::-;26918:56;27004:4;26996:6;26992:17;26984:25;;27064:4;27058;27054:15;27046:23;;26765:311;;;:::o;27082:307::-;27143:4;27233:18;27225:6;27222:30;27219:56;;;27255:18;;:::i;:::-;27219:56;27293:29;27315:6;27293:29;:::i;:::-;27285:37;;27377:4;27371;27367:15;27359:23;;27082:307;;;:::o;27395:132::-;27462:4;27485:3;27477:11;;27515:4;27510:3;27506:14;27498:22;;27395:132;;;:::o;27533:114::-;27600:6;27634:5;27628:12;27618:22;;27533:114;;;:::o;27653:98::-;27704:6;27738:5;27732:12;27722:22;;27653:98;;;:::o;27757:99::-;27809:6;27843:5;27837:12;27827:22;;27757:99;;;:::o;27862:113::-;27932:4;27964;27959:3;27955:14;27947:22;;27862:113;;;:::o;27981:184::-;28080:11;28114:6;28109:3;28102:19;28154:4;28149:3;28145:14;28130:29;;27981:184;;;;:::o;28171:168::-;28254:11;28288:6;28283:3;28276:19;28328:4;28323:3;28319:14;28304:29;;28171:168;;;;:::o;28345:169::-;28429:11;28463:6;28458:3;28451:19;28503:4;28498:3;28494:14;28479:29;;28345:169;;;;:::o;28520:148::-;28622:11;28659:3;28644:18;;28520:148;;;;:::o;28674:305::-;28714:3;28733:20;28751:1;28733:20;:::i;:::-;28728:25;;28767:20;28785:1;28767:20;:::i;:::-;28762:25;;28921:1;28853:66;28849:74;28846:1;28843:81;28840:107;;;28927:18;;:::i;:::-;28840:107;28971:1;28968;28964:9;28957:16;;28674:305;;;;:::o;28985:191::-;29025:4;29045:20;29063:1;29045:20;:::i;:::-;29040:25;;29079:20;29097:1;29079:20;:::i;:::-;29074:25;;29118:1;29115;29112:8;29109:34;;;29123:18;;:::i;:::-;29109:34;29168:1;29165;29161:9;29153:17;;28985:191;;;;:::o;29182:96::-;29219:7;29248:24;29266:5;29248:24;:::i;:::-;29237:35;;29182:96;;;:::o;29284:90::-;29318:7;29361:5;29354:13;29347:21;29336:32;;29284:90;;;:::o;29380:149::-;29416:7;29456:66;29449:5;29445:78;29434:89;;29380:149;;;:::o;29535:126::-;29572:7;29612:42;29605:5;29601:54;29590:65;;29535:126;;;:::o;29667:77::-;29704:7;29733:5;29722:16;;29667:77;;;:::o;29750:154::-;29834:6;29829:3;29824;29811:30;29896:1;29887:6;29882:3;29878:16;29871:27;29750:154;;;:::o;29910:307::-;29978:1;29988:113;30002:6;29999:1;29996:13;29988:113;;;30087:1;30082:3;30078:11;30072:18;30068:1;30063:3;30059:11;30052:39;30024:2;30021:1;30017:10;30012:15;;29988:113;;;30119:6;30116:1;30113:13;30110:101;;;30199:1;30190:6;30185:3;30181:16;30174:27;30110:101;29959:258;29910:307;;;:::o;30223:281::-;30306:27;30328:4;30306:27;:::i;:::-;30298:6;30294:40;30436:6;30424:10;30421:22;30400:18;30388:10;30385:34;30382:62;30379:88;;;30447:18;;:::i;:::-;30379:88;30487:10;30483:2;30476:22;30266:238;30223:281;;:::o;30510:233::-;30549:3;30572:24;30590:5;30572:24;:::i;:::-;30563:33;;30618:66;30611:5;30608:77;30605:103;;;30688:18;;:::i;:::-;30605:103;30735:1;30728:5;30724:13;30717:20;;30510:233;;;:::o;30749:180::-;30797:77;30794:1;30787:88;30894:4;30891:1;30884:15;30918:4;30915:1;30908:15;30935:180;30983:77;30980:1;30973:88;31080:4;31077:1;31070:15;31104:4;31101:1;31094:15;31121:180;31169:77;31166:1;31159:88;31266:4;31263:1;31256:15;31290:4;31287:1;31280:15;31307:180;31355:77;31352:1;31345:88;31452:4;31449:1;31442:15;31476:4;31473:1;31466:15;31493:117;31602:1;31599;31592:12;31616:117;31725:1;31722;31715:12;31739:117;31848:1;31845;31838:12;31862:117;31971:1;31968;31961:12;31985:117;32094:1;32091;32084:12;32108:102;32149:6;32200:2;32196:7;32191:2;32184:5;32180:14;32176:28;32166:38;;32108:102;;;:::o;32216:234::-;32356:34;32352:1;32344:6;32340:14;32333:58;32425:17;32420:2;32412:6;32408:15;32401:42;32216:234;:::o;32456:227::-;32596:34;32592:1;32584:6;32580:14;32573:58;32665:10;32660:2;32652:6;32648:15;32641:35;32456:227;:::o;32689:248::-;32829:34;32825:1;32817:6;32813:14;32806:58;32898:31;32893:2;32885:6;32881:15;32874:56;32689:248;:::o;32943:233::-;33083:34;33079:1;33071:6;33067:14;33060:58;33152:16;33147:2;33139:6;33135:15;33128:41;32943:233;:::o;33182:182::-;33322:34;33318:1;33310:6;33306:14;33299:58;33182:182;:::o;33370:229::-;33510:34;33506:1;33498:6;33494:14;33487:58;33579:12;33574:2;33566:6;33562:15;33555:37;33370:229;:::o;33605:230::-;33745:34;33741:1;33733:6;33729:14;33722:58;33814:13;33809:2;33801:6;33797:15;33790:38;33605:230;:::o;33841:236::-;33981:34;33977:1;33969:6;33965:14;33958:58;34050:19;34045:2;34037:6;34033:15;34026:44;33841:236;:::o;34083:232::-;34223:34;34219:1;34211:6;34207:14;34200:58;34292:15;34287:2;34279:6;34275:15;34268:40;34083:232;:::o;34321:228::-;34461:34;34457:1;34449:6;34445:14;34438:58;34530:11;34525:2;34517:6;34513:15;34506:36;34321:228;:::o;34555:::-;34695:34;34691:1;34683:6;34679:14;34672:58;34764:11;34759:2;34751:6;34747:15;34740:36;34555:228;:::o;34789:227::-;34929:34;34925:1;34917:6;34913:14;34906:58;34998:10;34993:2;34985:6;34981:15;34974:35;34789:227;:::o;35022:122::-;35095:24;35113:5;35095:24;:::i;:::-;35088:5;35085:35;35075:63;;35134:1;35131;35124:12;35075:63;35022:122;:::o;35150:116::-;35220:21;35235:5;35220:21;:::i;:::-;35213:5;35210:32;35200:60;;35256:1;35253;35246:12;35200:60;35150:116;:::o;35272:120::-;35344:23;35361:5;35344:23;:::i;:::-;35337:5;35334:34;35324:62;;35382:1;35379;35372:12;35324:62;35272:120;:::o;35398:122::-;35471:24;35489:5;35471:24;:::i;:::-;35464:5;35461:35;35451:63;;35510:1;35507;35500:12;35451:63;35398:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1971800",
								"executionCost": "2091",
								"totalCost": "1973891"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "753",
								"uri(uint256)": "1079"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferCheck(address,address,address,uint256,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 10008,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220434167668d67d79567ddbed1b518039217024113a9a644a5e1f04a6f61357a8364736f6c63430008070033",
									".code": [
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 10008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1571,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1688,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1696,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 761,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 761,
											"end": 802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 761,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 761,
											"end": 802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 761,
											"end": 802,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 761,
											"end": 858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 761,
											"end": 858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 806,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 858,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 858,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 761,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 761,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 761,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 761,
											"end": 902,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 761,
											"end": 902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1105,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1129,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1217,
											"end": 1230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1217,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1156,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6321,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6339,
											"end": 6356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6339,
											"end": 6356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6339,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6360,
											"end": 6393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6360,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6360,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6339,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6331,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6556,
											"end": 6559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6548,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6680,
											"end": 6688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6700,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6706,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 6716,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6804,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6846,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6947,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6918,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7030,
											"end": 7041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7026,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7075,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7080,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 7102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 7102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 7102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 7102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7158,
											"end": 7166,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7167,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 7174,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2094,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2055,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2801,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2811,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2927,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 2986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 2975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 2988,
											"end": 2997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 3005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 3005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3324,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3343,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4459,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4511,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4506,
											"end": 4560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4544,
											"end": 4549,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4560,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4506,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4498,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4646,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4621,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4740,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4747,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4766,
											"end": 4777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4758,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4887,
											"end": 4895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4868,
											"end": 4929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4929,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4868,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4962,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4951,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4983,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5005,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5006,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5010,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5069,
											"end": 5072,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5067,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5074,
											"end": 5077,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5079,
											"end": 5086,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5087,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 5094,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1250,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 410,
											"end": 1106,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 410,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 466,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 515,
											"end": 529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 532,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 532,
											"end": 549,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 532,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 532,
											"end": 553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 590,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 622,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 732,
											"end": 738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 728,
											"end": 756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 721,
											"end": 756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 721,
											"end": 756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 794,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 814,
											"end": 819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 948,
											"end": 950,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 932,
											"end": 962,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 927,
											"end": 930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 919,
											"end": 963,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1041,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1041,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1027,
											"end": 1048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1027,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 783,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 410,
											"end": 1106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 410,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 410,
											"end": 1106,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7350,
											"end": 7364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7350,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7347,
											"end": 7786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7428,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 7429,
											"end": 7438,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7445,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7451,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7461,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7384,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7380,
											"end": 7776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7776,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7380,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 7521,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7521,
											"end": 7569,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7508,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7508,
											"end": 7653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7508,
											"end": 7653,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7508,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7786,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7347,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7792,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5245,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5245,
											"end": 5248,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5245,
											"end": 5259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5245,
											"end": 5259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5245,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5245,
											"end": 5261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5245,
											"end": 5261,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5245,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 5665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5242,
											"end": 5665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 5320,
											"end": 5329,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5336,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5343,
											"end": 5350,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5357,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5280,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5276,
											"end": 5655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5655,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5276,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 5414,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5414,
											"end": 5457,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5401,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5401,
											"end": 5541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5401,
											"end": 5541,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5401,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5359,
											"end": 5555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5242,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1767,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1580,
											"end": 1907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2592,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3587,
											"end": 3604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3721,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3997,
											"end": 4114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4488,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4588,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4904,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 5146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5441,
											"end": 5448,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6308,
											"end": 6426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6465,
											"end": 6467,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6564,
											"end": 6852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7211,
											"end": 7326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7688,
											"end": 7806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 7992,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8197,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8375,
											"end": 8382,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 8688,
											"end": 8695,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8403,
											"end": 8706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8801,
											"end": 8824,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8797,
											"end": 8829,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9021,
											"end": 9028,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8923,
											"end": 9039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9156,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9168,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9173,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 9376,
											"end": 9383,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9367,
											"end": 9373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9494,
											"end": 9501,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9513,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9486,
											"end": 9518,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 9711,
											"end": 9718,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 9729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 9914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9901,
											"end": 9915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 10032,
											"end": 10037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10277,
											"end": 10282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10523,
											"end": 10536,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10564,
											"end": 10788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10508,
											"end": 10522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 10915,
											"end": 10920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10888,
											"end": 10922,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 11080,
											"end": 11085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11160,
											"end": 11163,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11212,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11203,
											"end": 11219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11249,
											"end": 11288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11024,
											"end": 11294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11584,
											"end": 11588,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11577,
											"end": 11582,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11573,
											"end": 11589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11619,
											"end": 11658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11392,
											"end": 11664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11776,
											"end": 11779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11837,
											"end": 11842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11939,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 11948,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 11948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 12002,
											"end": 12008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11997,
											"end": 12000,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11990,
											"end": 11994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 11988,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11979,
											"end": 11995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12034,
											"end": 12040,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12032,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12025,
											"end": 12041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12041,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 12047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12053,
											"end": 12419,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 12053,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12195,
											"end": 12198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 12280,
											"end": 12282,
											"name": "PUSH",
											"source": 8,
											"value": "2F"
										},
										{
											"begin": 12275,
											"end": 12278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12216,
											"end": 12283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12216,
											"end": 12283,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 12216,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12283,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12381,
											"end": 12384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12292,
											"end": 12385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12292,
											"end": 12385,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12292,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 12412,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12394,
											"end": 12413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12394,
											"end": 12413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12419,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12425,
											"end": 12791,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 12425,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12567,
											"end": 12570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 12647,
											"end": 12650,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12588,
											"end": 12655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12588,
											"end": 12655,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12588,
											"end": 12655,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 12588,
											"end": 12655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12664,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12753,
											"end": 12756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12664,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 12664,
											"end": 12757,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12664,
											"end": 12757,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12664,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12782,
											"end": 12784,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12777,
											"end": 12780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12773,
											"end": 12785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12766,
											"end": 12785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12766,
											"end": 12785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12791,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12791,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12797,
											"end": 13163,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 12797,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12939,
											"end": 12942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12960,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 13024,
											"end": 13026,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 13019,
											"end": 13022,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12960,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12960,
											"end": 13027,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12960,
											"end": 13027,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 12960,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12953,
											"end": 13027,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12953,
											"end": 13027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13125,
											"end": 13128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13036,
											"end": 13129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13036,
											"end": 13129,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13036,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13154,
											"end": 13156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13149,
											"end": 13152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13145,
											"end": 13157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13138,
											"end": 13157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13138,
											"end": 13157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12797,
											"end": 13163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12797,
											"end": 13163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12797,
											"end": 13163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12797,
											"end": 13163,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 13396,
											"end": 13398,
											"name": "PUSH",
											"source": 8,
											"value": "2E"
										},
										{
											"begin": 13391,
											"end": 13394,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 13332,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13497,
											"end": 13500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13408,
											"end": 13501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13526,
											"end": 13528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13521,
											"end": 13524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13517,
											"end": 13529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13510,
											"end": 13529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13510,
											"end": 13529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13535,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13683,
											"end": 13686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 13768,
											"end": 13770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13763,
											"end": 13766,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13697,
											"end": 13771,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13697,
											"end": 13771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 13869,
											"end": 13872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 13780,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13898,
											"end": 13900,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13893,
											"end": 13896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13889,
											"end": 13901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13907,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13913,
											"end": 14279,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13913,
											"end": 14279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14055,
											"end": 14058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 14140,
											"end": 14142,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 14135,
											"end": 14138,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14076,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14076,
											"end": 14143,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14076,
											"end": 14143,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 14076,
											"end": 14143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14069,
											"end": 14143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14069,
											"end": 14143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14152,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 14241,
											"end": 14244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14152,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 14152,
											"end": 14245,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14152,
											"end": 14245,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 14152,
											"end": 14245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14265,
											"end": 14268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14261,
											"end": 14273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14254,
											"end": 14273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14254,
											"end": 14273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 14279,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 14279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 14279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 14279,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14285,
											"end": 14651,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 14285,
											"end": 14651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14448,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 14512,
											"end": 14514,
											"name": "PUSH",
											"source": 8,
											"value": "2B"
										},
										{
											"begin": 14507,
											"end": 14510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14448,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14448,
											"end": 14515,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14448,
											"end": 14515,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 14448,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14441,
											"end": 14515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14441,
											"end": 14515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 14613,
											"end": 14616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 14524,
											"end": 14617,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14524,
											"end": 14617,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 14524,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14642,
											"end": 14644,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14637,
											"end": 14640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 14645,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14626,
											"end": 14645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14626,
											"end": 14645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14285,
											"end": 14651,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14657,
											"end": 15023,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 14657,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14799,
											"end": 14802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14820,
											"end": 14887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 14884,
											"end": 14886,
											"name": "PUSH",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 14879,
											"end": 14882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14820,
											"end": 14887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14820,
											"end": 14887,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14820,
											"end": 14887,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 14820,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14813,
											"end": 14887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14813,
											"end": 14887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14896,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 14985,
											"end": 14988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14896,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 14896,
											"end": 14989,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14896,
											"end": 14989,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 14896,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15014,
											"end": 15016,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15009,
											"end": 15012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15005,
											"end": 15017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14998,
											"end": 15017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14998,
											"end": 15017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 15023,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 15023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 15023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 15023,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15171,
											"end": 15174,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 15256,
											"end": 15258,
											"name": "PUSH",
											"source": 8,
											"value": "2D"
										},
										{
											"begin": 15251,
											"end": 15254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15185,
											"end": 15259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15185,
											"end": 15259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 15357,
											"end": 15360,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15386,
											"end": 15388,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15381,
											"end": 15384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15370,
											"end": 15389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15370,
											"end": 15389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15401,
											"end": 15767,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 15401,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15543,
											"end": 15546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15564,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15628,
											"end": 15630,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 15623,
											"end": 15626,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15564,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 15564,
											"end": 15631,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15564,
											"end": 15631,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 15564,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15557,
											"end": 15631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15557,
											"end": 15631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15640,
											"end": 15733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 15729,
											"end": 15732,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15640,
											"end": 15733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 15640,
											"end": 15733,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15640,
											"end": 15733,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 15640,
											"end": 15733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15758,
											"end": 15760,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15753,
											"end": 15756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15742,
											"end": 15761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15742,
											"end": 15761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15401,
											"end": 15767,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15401,
											"end": 15767,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15401,
											"end": 15767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15401,
											"end": 15767,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15773,
											"end": 16139,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 15773,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15915,
											"end": 15918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 16000,
											"end": 16002,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 15995,
											"end": 15998,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15936,
											"end": 16003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 15936,
											"end": 16003,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15936,
											"end": 16003,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 15936,
											"end": 16003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15929,
											"end": 16003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15929,
											"end": 16003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16012,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 16101,
											"end": 16104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16012,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 16012,
											"end": 16105,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16012,
											"end": 16105,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 16012,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16130,
											"end": 16132,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16125,
											"end": 16128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16121,
											"end": 16133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16114,
											"end": 16133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16114,
											"end": 16133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 16139,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 16139,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 16139,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 16139,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16145,
											"end": 16511,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 16145,
											"end": 16511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16287,
											"end": 16290,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16308,
											"end": 16375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 16372,
											"end": 16374,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 16367,
											"end": 16370,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16308,
											"end": 16375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 16308,
											"end": 16375,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16308,
											"end": 16375,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 16308,
											"end": 16375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16301,
											"end": 16375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16301,
											"end": 16375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16384,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 16473,
											"end": 16476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16384,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 16384,
											"end": 16477,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16384,
											"end": 16477,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 16384,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16502,
											"end": 16504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16497,
											"end": 16500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16493,
											"end": 16505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16511,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16517,
											"end": 16625,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 16517,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 16594,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 16619,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16625,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16631,
											"end": 16749,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 16631,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 16736,
											"end": 16741,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 16718,
											"end": 16742,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16718,
											"end": 16742,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 16718,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16713,
											"end": 16716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16706,
											"end": 16743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16631,
											"end": 16749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16631,
											"end": 16749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16631,
											"end": 16749,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16935,
											"end": 16938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16957,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 17048,
											"end": 17051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17039,
											"end": 17045,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16957,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 16957,
											"end": 17052,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16957,
											"end": 17052,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 16957,
											"end": 17052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16950,
											"end": 17052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16950,
											"end": 17052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17069,
											"end": 17164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17160,
											"end": 17163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17157,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17069,
											"end": 17164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 17069,
											"end": 17164,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17069,
											"end": 17164,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17069,
											"end": 17164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17062,
											"end": 17164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17062,
											"end": 17164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17181,
											"end": 17184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 17190,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17519,
											"end": 17523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17557,
											"end": 17560,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 17546,
											"end": 17555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17542,
											"end": 17561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17534,
											"end": 17561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17534,
											"end": 17561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17571,
											"end": 17642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 17639,
											"end": 17640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17628,
											"end": 17637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17624,
											"end": 17641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17571,
											"end": 17642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 17571,
											"end": 17642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17571,
											"end": 17642,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 17571,
											"end": 17642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 17720,
											"end": 17722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17709,
											"end": 17718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17696,
											"end": 17702,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 17652,
											"end": 17724,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17652,
											"end": 17724,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 17652,
											"end": 17724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17771,
											"end": 17780,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17765,
											"end": 17769,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17781,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17756,
											"end": 17758,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17745,
											"end": 17754,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17741,
											"end": 17759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17734,
											"end": 17782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17799,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 17902,
											"end": 17906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17893,
											"end": 17899,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17799,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 17799,
											"end": 17907,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17799,
											"end": 17907,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 17799,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 17907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 17907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17954,
											"end": 17963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 17952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17944,
											"end": 17964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17939,
											"end": 17941,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17928,
											"end": 17937,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17917,
											"end": 17965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17982,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 18085,
											"end": 18089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18076,
											"end": 18082,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17982,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 17982,
											"end": 18090,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17982,
											"end": 18090,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 17982,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17974,
											"end": 18090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17974,
											"end": 18090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18138,
											"end": 18147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18132,
											"end": 18136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18122,
											"end": 18125,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 18111,
											"end": 18120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18107,
											"end": 18126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18100,
											"end": 18149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18166,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18237,
											"end": 18241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18228,
											"end": 18234,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18166,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 18166,
											"end": 18242,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18166,
											"end": 18242,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18166,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18158,
											"end": 18242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18158,
											"end": 18242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 18249,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18516,
											"end": 18519,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18501,
											"end": 18520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18493,
											"end": 18520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18493,
											"end": 18520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18530,
											"end": 18601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 18598,
											"end": 18599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18587,
											"end": 18596,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18583,
											"end": 18600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18574,
											"end": 18580,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18530,
											"end": 18601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 18530,
											"end": 18601,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18530,
											"end": 18601,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 18530,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18679,
											"end": 18681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18668,
											"end": 18677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18664,
											"end": 18682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18655,
											"end": 18661,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18611,
											"end": 18683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18693,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 18761,
											"end": 18763,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18750,
											"end": 18759,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18746,
											"end": 18764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18737,
											"end": 18743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18693,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 18693,
											"end": 18765,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18693,
											"end": 18765,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 18693,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18775,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 18843,
											"end": 18845,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 18832,
											"end": 18841,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18828,
											"end": 18846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18819,
											"end": 18825,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18775,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 18775,
											"end": 18847,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18775,
											"end": 18847,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 18775,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18895,
											"end": 18904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18889,
											"end": 18893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18885,
											"end": 18905,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18879,
											"end": 18882,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 18868,
											"end": 18877,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18864,
											"end": 18883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 18906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18923,
											"end": 18999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 18994,
											"end": 18998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 18991,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18923,
											"end": 18999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 18923,
											"end": 18999,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18923,
											"end": 18999,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 18923,
											"end": 18999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18915,
											"end": 18999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18915,
											"end": 18999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 19006,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19155,
											"end": 19159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19193,
											"end": 19195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19182,
											"end": 19191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19178,
											"end": 19196,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19170,
											"end": 19196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19170,
											"end": 19196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19242,
											"end": 19251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19236,
											"end": 19240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19232,
											"end": 19252,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19228,
											"end": 19229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19217,
											"end": 19226,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19213,
											"end": 19230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19206,
											"end": 19253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19270,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 19373,
											"end": 19377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19364,
											"end": 19370,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19270,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 19270,
											"end": 19378,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19378,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 19270,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19262,
											"end": 19378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19262,
											"end": 19378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19012,
											"end": 19385,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19612,
											"end": 19616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19650,
											"end": 19652,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19639,
											"end": 19648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19635,
											"end": 19653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19627,
											"end": 19653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19627,
											"end": 19653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19699,
											"end": 19708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19693,
											"end": 19697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19689,
											"end": 19709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19685,
											"end": 19686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19674,
											"end": 19683,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19670,
											"end": 19687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19663,
											"end": 19710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19727,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 19830,
											"end": 19834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 19827,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19727,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 19727,
											"end": 19835,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19727,
											"end": 19835,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 19727,
											"end": 19835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19719,
											"end": 19835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19719,
											"end": 19835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19882,
											"end": 19891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19876,
											"end": 19880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19872,
											"end": 19892,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19867,
											"end": 19869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19856,
											"end": 19865,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19852,
											"end": 19870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19845,
											"end": 19893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19910,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 20013,
											"end": 20017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20004,
											"end": 20010,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19910,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 19910,
											"end": 20018,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19910,
											"end": 20018,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 19910,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19902,
											"end": 20018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19902,
											"end": 20018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 20025,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20156,
											"end": 20158,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20145,
											"end": 20154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20141,
											"end": 20159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20133,
											"end": 20159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20133,
											"end": 20159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 20231,
											"end": 20232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20220,
											"end": 20229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20216,
											"end": 20233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20207,
											"end": 20213,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20241,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20360,
											"end": 20364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20398,
											"end": 20400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20387,
											"end": 20396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20383,
											"end": 20401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20375,
											"end": 20401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20375,
											"end": 20401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20447,
											"end": 20456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20441,
											"end": 20445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20437,
											"end": 20457,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20433,
											"end": 20434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20422,
											"end": 20431,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20418,
											"end": 20435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20411,
											"end": 20458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20475,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 20548,
											"end": 20552,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20539,
											"end": 20545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20475,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 20475,
											"end": 20553,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20475,
											"end": 20553,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 20475,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20467,
											"end": 20553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20467,
											"end": 20553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20247,
											"end": 20560,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20732,
											"end": 20736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20770,
											"end": 20772,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20759,
											"end": 20768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20755,
											"end": 20773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20747,
											"end": 20773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20747,
											"end": 20773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20819,
											"end": 20828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20813,
											"end": 20817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 20829,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20805,
											"end": 20806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20794,
											"end": 20803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20790,
											"end": 20807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 20973,
											"end": 20977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20839,
											"end": 20978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20839,
											"end": 20978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21157,
											"end": 21161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21195,
											"end": 21197,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21184,
											"end": 21193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21180,
											"end": 21198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21172,
											"end": 21198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21172,
											"end": 21198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21244,
											"end": 21253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21238,
											"end": 21242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21234,
											"end": 21254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21230,
											"end": 21231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21219,
											"end": 21228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21215,
											"end": 21232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21208,
											"end": 21255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 21398,
											"end": 21402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21264,
											"end": 21403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21264,
											"end": 21403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21582,
											"end": 21586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21620,
											"end": 21622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21609,
											"end": 21618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 21623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21597,
											"end": 21623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21597,
											"end": 21623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21669,
											"end": 21678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21663,
											"end": 21667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21679,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21655,
											"end": 21656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21644,
											"end": 21653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21640,
											"end": 21657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21633,
											"end": 21680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 21823,
											"end": 21827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21689,
											"end": 21828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21689,
											"end": 21828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21841,
											"end": 22260,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 21841,
											"end": 22260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22007,
											"end": 22011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22047,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22034,
											"end": 22043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22030,
											"end": 22048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22022,
											"end": 22048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22022,
											"end": 22048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22094,
											"end": 22103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22088,
											"end": 22092,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22084,
											"end": 22104,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22080,
											"end": 22081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22069,
											"end": 22078,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22065,
											"end": 22082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22058,
											"end": 22105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22122,
											"end": 22253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 22248,
											"end": 22252,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22122,
											"end": 22253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 22122,
											"end": 22253,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22122,
											"end": 22253,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 22122,
											"end": 22253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22114,
											"end": 22253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22114,
											"end": 22253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21841,
											"end": 22260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21841,
											"end": 22260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21841,
											"end": 22260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21841,
											"end": 22260,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22266,
											"end": 22685,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 22266,
											"end": 22685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22432,
											"end": 22436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22470,
											"end": 22472,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22459,
											"end": 22468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22455,
											"end": 22473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22447,
											"end": 22473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22447,
											"end": 22473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22519,
											"end": 22528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22513,
											"end": 22517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22509,
											"end": 22529,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22505,
											"end": 22506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22494,
											"end": 22503,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22490,
											"end": 22507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22483,
											"end": 22530,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22547,
											"end": 22678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 22673,
											"end": 22677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22547,
											"end": 22678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 22547,
											"end": 22678,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22547,
											"end": 22678,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 22547,
											"end": 22678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22539,
											"end": 22678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22539,
											"end": 22678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22266,
											"end": 22685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22266,
											"end": 22685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22266,
											"end": 22685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22266,
											"end": 22685,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22691,
											"end": 23110,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 22691,
											"end": 23110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22857,
											"end": 22861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22895,
											"end": 22897,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22884,
											"end": 22893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22880,
											"end": 22898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22872,
											"end": 22898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22872,
											"end": 22898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22944,
											"end": 22953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22938,
											"end": 22942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22934,
											"end": 22954,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22930,
											"end": 22931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22919,
											"end": 22928,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22915,
											"end": 22932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22908,
											"end": 22955,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22972,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 23098,
											"end": 23102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22972,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 22972,
											"end": 23103,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22972,
											"end": 23103,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 22972,
											"end": 23103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22964,
											"end": 23103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22964,
											"end": 23103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 23110,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 23110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 23110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 23110,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23116,
											"end": 23535,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 23116,
											"end": 23535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23320,
											"end": 23322,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23309,
											"end": 23318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23305,
											"end": 23323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23297,
											"end": 23323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23297,
											"end": 23323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23369,
											"end": 23378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23363,
											"end": 23367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23359,
											"end": 23379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23355,
											"end": 23356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23344,
											"end": 23353,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23340,
											"end": 23357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23333,
											"end": 23380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23397,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 23523,
											"end": 23527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23397,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 23397,
											"end": 23528,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23397,
											"end": 23528,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 23397,
											"end": 23528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23116,
											"end": 23535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23116,
											"end": 23535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23116,
											"end": 23535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23116,
											"end": 23535,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23541,
											"end": 23960,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 23541,
											"end": 23960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23707,
											"end": 23711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23745,
											"end": 23747,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23734,
											"end": 23743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23730,
											"end": 23748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23722,
											"end": 23748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23722,
											"end": 23748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23794,
											"end": 23803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23784,
											"end": 23804,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23780,
											"end": 23781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23769,
											"end": 23778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23765,
											"end": 23782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23758,
											"end": 23805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23822,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 23948,
											"end": 23952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23822,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 23822,
											"end": 23953,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23822,
											"end": 23953,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 23822,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23814,
											"end": 23953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23814,
											"end": 23953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23541,
											"end": 23960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23541,
											"end": 23960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23541,
											"end": 23960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23541,
											"end": 23960,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23966,
											"end": 24385,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 23966,
											"end": 24385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24132,
											"end": 24136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24170,
											"end": 24172,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24159,
											"end": 24168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24155,
											"end": 24173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24147,
											"end": 24173,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24147,
											"end": 24173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24219,
											"end": 24228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24213,
											"end": 24217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24209,
											"end": 24229,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24205,
											"end": 24206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24194,
											"end": 24203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24190,
											"end": 24207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24183,
											"end": 24230,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24247,
											"end": 24378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 24373,
											"end": 24377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24247,
											"end": 24378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 24247,
											"end": 24378,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24247,
											"end": 24378,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 24247,
											"end": 24378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24239,
											"end": 24378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24239,
											"end": 24378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23966,
											"end": 24385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23966,
											"end": 24385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23966,
											"end": 24385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23966,
											"end": 24385,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24391,
											"end": 24810,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 24391,
											"end": 24810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24557,
											"end": 24561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24595,
											"end": 24597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24584,
											"end": 24593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24580,
											"end": 24598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24572,
											"end": 24598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24572,
											"end": 24598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24644,
											"end": 24653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24638,
											"end": 24642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24634,
											"end": 24654,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24630,
											"end": 24631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24619,
											"end": 24628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24615,
											"end": 24632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24608,
											"end": 24655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24672,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 24798,
											"end": 24802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24672,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 24672,
											"end": 24803,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24672,
											"end": 24803,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 24672,
											"end": 24803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24664,
											"end": 24803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24664,
											"end": 24803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24391,
											"end": 24810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24391,
											"end": 24810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24391,
											"end": 24810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24391,
											"end": 24810,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24816,
											"end": 25235,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 24816,
											"end": 25235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24982,
											"end": 24986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25020,
											"end": 25022,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25009,
											"end": 25018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25005,
											"end": 25023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24997,
											"end": 25023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24997,
											"end": 25023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25069,
											"end": 25078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25063,
											"end": 25067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25059,
											"end": 25079,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25055,
											"end": 25056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25044,
											"end": 25053,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25040,
											"end": 25057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25033,
											"end": 25080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 25223,
											"end": 25227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 25097,
											"end": 25228,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25097,
											"end": 25228,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 25097,
											"end": 25228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25089,
											"end": 25228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25089,
											"end": 25228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24816,
											"end": 25235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24816,
											"end": 25235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24816,
											"end": 25235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24816,
											"end": 25235,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25241,
											"end": 25660,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 25241,
											"end": 25660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25407,
											"end": 25411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25445,
											"end": 25447,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25434,
											"end": 25443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25430,
											"end": 25448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25422,
											"end": 25448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25422,
											"end": 25448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25494,
											"end": 25503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25488,
											"end": 25492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25484,
											"end": 25504,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25480,
											"end": 25481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25469,
											"end": 25478,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25465,
											"end": 25482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25458,
											"end": 25505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25522,
											"end": 25653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 25648,
											"end": 25652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25522,
											"end": 25653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 25522,
											"end": 25653,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25522,
											"end": 25653,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 25522,
											"end": 25653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25514,
											"end": 25653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25514,
											"end": 25653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25241,
											"end": 25660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25241,
											"end": 25660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25241,
											"end": 25660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25241,
											"end": 25660,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25759,
											"end": 25763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25797,
											"end": 25799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25786,
											"end": 25795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25782,
											"end": 25800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25774,
											"end": 25800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25774,
											"end": 25800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25810,
											"end": 25881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 25878,
											"end": 25879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25867,
											"end": 25876,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25854,
											"end": 25860,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25810,
											"end": 25881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 25810,
											"end": 25881,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25810,
											"end": 25881,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 25810,
											"end": 25881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25666,
											"end": 25888,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26015,
											"end": 26019,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26053,
											"end": 26055,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26042,
											"end": 26051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26038,
											"end": 26056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26030,
											"end": 26056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26030,
											"end": 26056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26066,
											"end": 26137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 26134,
											"end": 26135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26123,
											"end": 26132,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26119,
											"end": 26136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26110,
											"end": 26116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26066,
											"end": 26137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 26066,
											"end": 26137,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26066,
											"end": 26137,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 26066,
											"end": 26137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26147,
											"end": 26219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 26215,
											"end": 26217,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26204,
											"end": 26213,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26200,
											"end": 26218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26191,
											"end": 26197,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26147,
											"end": 26219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 26147,
											"end": 26219,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26147,
											"end": 26219,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 26147,
											"end": 26219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25894,
											"end": 26226,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26232,
											"end": 26361,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 26232,
											"end": 26361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26266,
											"end": 26272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26293,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 26293,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 26293,
											"end": 26313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26293,
											"end": 26313,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 26293,
											"end": 26313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26283,
											"end": 26313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26283,
											"end": 26313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26322,
											"end": 26355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 26350,
											"end": 26354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26342,
											"end": 26348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26322,
											"end": 26355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 26322,
											"end": 26355,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26322,
											"end": 26355,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 26322,
											"end": 26355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26232,
											"end": 26361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26232,
											"end": 26361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26232,
											"end": 26361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26232,
											"end": 26361,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26367,
											"end": 26442,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 26367,
											"end": 26442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26400,
											"end": 26406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26433,
											"end": 26435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26427,
											"end": 26436,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 26417,
											"end": 26436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26417,
											"end": 26436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26367,
											"end": 26442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26367,
											"end": 26442,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26448,
											"end": 26759,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 26448,
											"end": 26759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26525,
											"end": 26529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26615,
											"end": 26633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26607,
											"end": 26613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26604,
											"end": 26634,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 26601,
											"end": 26657,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26601,
											"end": 26657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 26601,
											"end": 26657,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26637,
											"end": 26655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 26637,
											"end": 26655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 26637,
											"end": 26655,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26637,
											"end": 26655,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 26637,
											"end": 26655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26601,
											"end": 26657,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 26601,
											"end": 26657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26687,
											"end": 26691,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26679,
											"end": 26685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26675,
											"end": 26692,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 26667,
											"end": 26692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26667,
											"end": 26692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26747,
											"end": 26751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26741,
											"end": 26745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26737,
											"end": 26752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26729,
											"end": 26752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26729,
											"end": 26752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26448,
											"end": 26759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26448,
											"end": 26759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26448,
											"end": 26759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26448,
											"end": 26759,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26765,
											"end": 27076,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 26765,
											"end": 27076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26842,
											"end": 26846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26932,
											"end": 26950,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26924,
											"end": 26930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26921,
											"end": 26951,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 26918,
											"end": 26974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26918,
											"end": 26974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 26918,
											"end": 26974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26954,
											"end": 26972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 26954,
											"end": 26972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 26954,
											"end": 26972,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26954,
											"end": 26972,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 26954,
											"end": 26972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26918,
											"end": 26974,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 26918,
											"end": 26974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27004,
											"end": 27008,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26996,
											"end": 27002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26992,
											"end": 27009,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 26984,
											"end": 27009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26984,
											"end": 27009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27064,
											"end": 27068,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27058,
											"end": 27062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27054,
											"end": 27069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27046,
											"end": 27069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27046,
											"end": 27069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26765,
											"end": 27076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26765,
											"end": 27076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26765,
											"end": 27076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26765,
											"end": 27076,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27082,
											"end": 27389,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 27082,
											"end": 27389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27143,
											"end": 27147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27233,
											"end": 27251,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27225,
											"end": 27231,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27222,
											"end": 27252,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 27219,
											"end": 27275,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27219,
											"end": 27275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 27219,
											"end": 27275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27255,
											"end": 27273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 27255,
											"end": 27273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 27255,
											"end": 27273,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27255,
											"end": 27273,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 27255,
											"end": 27273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27219,
											"end": 27275,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 27219,
											"end": 27275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27293,
											"end": 27322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 27315,
											"end": 27321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27293,
											"end": 27322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 27293,
											"end": 27322,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27293,
											"end": 27322,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 27293,
											"end": 27322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27285,
											"end": 27322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27285,
											"end": 27322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27377,
											"end": 27381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27371,
											"end": 27375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27367,
											"end": 27382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27359,
											"end": 27382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27359,
											"end": 27382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27082,
											"end": 27389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27082,
											"end": 27389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27082,
											"end": 27389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27082,
											"end": 27389,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27395,
											"end": 27527,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 27395,
											"end": 27527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27462,
											"end": 27466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27485,
											"end": 27488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27477,
											"end": 27488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27477,
											"end": 27488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27515,
											"end": 27519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27506,
											"end": 27520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27498,
											"end": 27520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27498,
											"end": 27520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27395,
											"end": 27527,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27395,
											"end": 27527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27395,
											"end": 27527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27395,
											"end": 27527,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27533,
											"end": 27647,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 27533,
											"end": 27647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27600,
											"end": 27606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27634,
											"end": 27639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27628,
											"end": 27640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 27618,
											"end": 27640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27618,
											"end": 27640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27533,
											"end": 27647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27533,
											"end": 27647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27533,
											"end": 27647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27533,
											"end": 27647,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27653,
											"end": 27751,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 27653,
											"end": 27751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27704,
											"end": 27710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27738,
											"end": 27743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27732,
											"end": 27744,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27722,
											"end": 27744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27653,
											"end": 27751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27653,
											"end": 27751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27653,
											"end": 27751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27653,
											"end": 27751,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27757,
											"end": 27856,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 27757,
											"end": 27856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27809,
											"end": 27815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27843,
											"end": 27848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27837,
											"end": 27849,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 27827,
											"end": 27849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27827,
											"end": 27849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27757,
											"end": 27856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27757,
											"end": 27856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27757,
											"end": 27856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27757,
											"end": 27856,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27862,
											"end": 27975,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 27862,
											"end": 27975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27932,
											"end": 27936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27964,
											"end": 27968,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27959,
											"end": 27962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27955,
											"end": 27969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27947,
											"end": 27969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27947,
											"end": 27969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27862,
											"end": 27975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27862,
											"end": 27975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27862,
											"end": 27975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27862,
											"end": 27975,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28080,
											"end": 28091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28114,
											"end": 28120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28109,
											"end": 28112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28102,
											"end": 28121,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28154,
											"end": 28158,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28149,
											"end": 28152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28145,
											"end": 28159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28130,
											"end": 28159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28130,
											"end": 28159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27981,
											"end": 28165,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28254,
											"end": 28265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28288,
											"end": 28294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28283,
											"end": 28286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28276,
											"end": 28295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28328,
											"end": 28332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28323,
											"end": 28326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28319,
											"end": 28333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28304,
											"end": 28333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28304,
											"end": 28333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28171,
											"end": 28339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28429,
											"end": 28440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28463,
											"end": 28469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28458,
											"end": 28461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28451,
											"end": 28470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28503,
											"end": 28507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28498,
											"end": 28501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28494,
											"end": 28508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28479,
											"end": 28508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28479,
											"end": 28508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28345,
											"end": 28514,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28622,
											"end": 28633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28659,
											"end": 28662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28644,
											"end": 28662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28644,
											"end": 28662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28520,
											"end": 28668,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28714,
											"end": 28717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28733,
											"end": 28753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 28751,
											"end": 28752,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28733,
											"end": 28753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 28733,
											"end": 28753,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28733,
											"end": 28753,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 28733,
											"end": 28753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28728,
											"end": 28753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28728,
											"end": 28753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28767,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 28785,
											"end": 28786,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28767,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 28767,
											"end": 28787,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28767,
											"end": 28787,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 28767,
											"end": 28787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28762,
											"end": 28787,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28762,
											"end": 28787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28921,
											"end": 28922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28853,
											"end": 28919,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28849,
											"end": 28923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28846,
											"end": 28847,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28843,
											"end": 28924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 28840,
											"end": 28947,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 28840,
											"end": 28947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 28840,
											"end": 28947,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 28927,
											"end": 28945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 28927,
											"end": 28945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 28927,
											"end": 28945,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 28927,
											"end": 28945,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 28927,
											"end": 28945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28840,
											"end": 28947,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 28840,
											"end": 28947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28971,
											"end": 28972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28968,
											"end": 28969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28964,
											"end": 28973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28957,
											"end": 28973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28957,
											"end": 28973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28674,
											"end": 28979,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29025,
											"end": 29029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29045,
											"end": 29065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 29063,
											"end": 29064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29045,
											"end": 29065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 29045,
											"end": 29065,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 29045,
											"end": 29065,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 29045,
											"end": 29065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29040,
											"end": 29065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29040,
											"end": 29065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29079,
											"end": 29099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 29097,
											"end": 29098,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29079,
											"end": 29099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 29079,
											"end": 29099,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 29079,
											"end": 29099,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 29079,
											"end": 29099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29074,
											"end": 29099,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 29074,
											"end": 29099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29118,
											"end": 29119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29115,
											"end": 29116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29112,
											"end": 29120,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 29109,
											"end": 29143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29109,
											"end": 29143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 29109,
											"end": 29143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 29123,
											"end": 29141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 29123,
											"end": 29141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 29123,
											"end": 29141,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 29123,
											"end": 29141,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 29123,
											"end": 29141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29109,
											"end": 29143,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 29109,
											"end": 29143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29168,
											"end": 29169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29165,
											"end": 29166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29161,
											"end": 29170,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 29153,
											"end": 29170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29153,
											"end": 29170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28985,
											"end": 29176,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29182,
											"end": 29278,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 29182,
											"end": 29278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29219,
											"end": 29226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 29266,
											"end": 29271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29237,
											"end": 29272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29237,
											"end": 29272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29182,
											"end": 29278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29182,
											"end": 29278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29182,
											"end": 29278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29182,
											"end": 29278,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29284,
											"end": 29374,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 29284,
											"end": 29374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29318,
											"end": 29325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29361,
											"end": 29366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29354,
											"end": 29367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29347,
											"end": 29368,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29336,
											"end": 29368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29336,
											"end": 29368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29284,
											"end": 29374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29284,
											"end": 29374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29284,
											"end": 29374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29284,
											"end": 29374,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29380,
											"end": 29529,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 29380,
											"end": 29529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29416,
											"end": 29423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29456,
											"end": 29522,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29449,
											"end": 29454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29445,
											"end": 29523,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 29434,
											"end": 29523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29434,
											"end": 29523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29380,
											"end": 29529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29380,
											"end": 29529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29380,
											"end": 29529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29380,
											"end": 29529,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29535,
											"end": 29661,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 29535,
											"end": 29661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29572,
											"end": 29579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29612,
											"end": 29654,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29605,
											"end": 29610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29601,
											"end": 29655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 29590,
											"end": 29655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29590,
											"end": 29655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29661,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29661,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29667,
											"end": 29744,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 29667,
											"end": 29744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29704,
											"end": 29711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29733,
											"end": 29738,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29722,
											"end": 29738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29722,
											"end": 29738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29667,
											"end": 29744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29667,
											"end": 29744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29667,
											"end": 29744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29667,
											"end": 29744,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29750,
											"end": 29904,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 29750,
											"end": 29904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29834,
											"end": 29840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29829,
											"end": 29832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29824,
											"end": 29827,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29811,
											"end": 29841,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 29896,
											"end": 29897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29887,
											"end": 29893,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29882,
											"end": 29885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29878,
											"end": 29894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29871,
											"end": 29898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29750,
											"end": 29904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29750,
											"end": 29904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29750,
											"end": 29904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29750,
											"end": 29904,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29910,
											"end": 30217,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 29910,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29978,
											"end": 29979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30002,
											"end": 30008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29999,
											"end": 30000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29996,
											"end": 30009,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30087,
											"end": 30088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30082,
											"end": 30085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30078,
											"end": 30089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30072,
											"end": 30090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 30068,
											"end": 30069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30063,
											"end": 30066,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 30059,
											"end": 30070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30052,
											"end": 30091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30024,
											"end": 30026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30021,
											"end": 30022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30017,
											"end": 30027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30012,
											"end": 30027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30012,
											"end": 30027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 29988,
											"end": 30101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30119,
											"end": 30125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30116,
											"end": 30117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30113,
											"end": 30126,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 30110,
											"end": 30211,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30110,
											"end": 30211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 30110,
											"end": 30211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30199,
											"end": 30200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30190,
											"end": 30196,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 30185,
											"end": 30188,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 30181,
											"end": 30197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30174,
											"end": 30201,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30110,
											"end": 30211,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 30110,
											"end": 30211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29959,
											"end": 30217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29910,
											"end": 30217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29910,
											"end": 30217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29910,
											"end": 30217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29910,
											"end": 30217,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30223,
											"end": 30504,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 30223,
											"end": 30504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30306,
											"end": 30333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 30328,
											"end": 30332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30306,
											"end": 30333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 30306,
											"end": 30333,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30306,
											"end": 30333,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 30306,
											"end": 30333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30298,
											"end": 30304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30294,
											"end": 30334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30436,
											"end": 30442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30424,
											"end": 30434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30421,
											"end": 30443,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 30400,
											"end": 30418,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30388,
											"end": 30398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30385,
											"end": 30419,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 30382,
											"end": 30444,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 30379,
											"end": 30467,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30379,
											"end": 30467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 30379,
											"end": 30467,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30447,
											"end": 30465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 30447,
											"end": 30465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 30447,
											"end": 30465,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30447,
											"end": 30465,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 30447,
											"end": 30465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30379,
											"end": 30467,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 30379,
											"end": 30467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30487,
											"end": 30497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30483,
											"end": 30485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 30476,
											"end": 30498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30223,
											"end": 30504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30223,
											"end": 30504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30223,
											"end": 30504,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30510,
											"end": 30743,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 30510,
											"end": 30743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30549,
											"end": 30552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30572,
											"end": 30596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 30590,
											"end": 30595,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30572,
											"end": 30596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 30572,
											"end": 30596,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30572,
											"end": 30596,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 30572,
											"end": 30596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30563,
											"end": 30596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30563,
											"end": 30596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30618,
											"end": 30684,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30611,
											"end": 30616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30608,
											"end": 30685,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 30605,
											"end": 30708,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30605,
											"end": 30708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 30605,
											"end": 30708,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30688,
											"end": 30706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 30688,
											"end": 30706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 30688,
											"end": 30706,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30688,
											"end": 30706,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 30688,
											"end": 30706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30605,
											"end": 30708,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 30605,
											"end": 30708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30735,
											"end": 30736,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 30728,
											"end": 30733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30724,
											"end": 30737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30717,
											"end": 30737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30717,
											"end": 30737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30510,
											"end": 30743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30510,
											"end": 30743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30510,
											"end": 30743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30510,
											"end": 30743,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30749,
											"end": 30929,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 30749,
											"end": 30929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30797,
											"end": 30874,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30794,
											"end": 30795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30787,
											"end": 30875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30894,
											"end": 30898,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 30891,
											"end": 30892,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 30884,
											"end": 30899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30918,
											"end": 30922,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 30915,
											"end": 30916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30908,
											"end": 30923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 30935,
											"end": 31115,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 30935,
											"end": 31115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30983,
											"end": 31060,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30980,
											"end": 30981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30973,
											"end": 31061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31080,
											"end": 31084,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 31077,
											"end": 31078,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 31070,
											"end": 31085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31104,
											"end": 31108,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 31101,
											"end": 31102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31094,
											"end": 31109,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31121,
											"end": 31301,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 31121,
											"end": 31301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31169,
											"end": 31246,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31166,
											"end": 31167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31159,
											"end": 31247,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31266,
											"end": 31270,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 31263,
											"end": 31264,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 31256,
											"end": 31271,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31290,
											"end": 31294,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 31287,
											"end": 31288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31280,
											"end": 31295,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31307,
											"end": 31487,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 31307,
											"end": 31487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31355,
											"end": 31432,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31352,
											"end": 31353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31345,
											"end": 31433,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31452,
											"end": 31456,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 31449,
											"end": 31450,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 31442,
											"end": 31457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31476,
											"end": 31480,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 31473,
											"end": 31474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31466,
											"end": 31481,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31493,
											"end": 31610,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 31493,
											"end": 31610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31602,
											"end": 31603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31599,
											"end": 31600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31592,
											"end": 31604,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31616,
											"end": 31733,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 31616,
											"end": 31733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31725,
											"end": 31726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31722,
											"end": 31723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31715,
											"end": 31727,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31739,
											"end": 31856,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 31739,
											"end": 31856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31848,
											"end": 31849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31845,
											"end": 31846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31838,
											"end": 31850,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31862,
											"end": 31979,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 31862,
											"end": 31979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31971,
											"end": 31972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31968,
											"end": 31969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31961,
											"end": 31973,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31985,
											"end": 32102,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 31985,
											"end": 32102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32094,
											"end": 32095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32091,
											"end": 32092,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 32084,
											"end": 32096,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 32108,
											"end": 32210,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 32108,
											"end": 32210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32149,
											"end": 32155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32200,
											"end": 32202,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 32196,
											"end": 32203,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 32191,
											"end": 32193,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 32184,
											"end": 32189,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32180,
											"end": 32194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32176,
											"end": 32204,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 32166,
											"end": 32204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32166,
											"end": 32204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32108,
											"end": 32210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 32108,
											"end": 32210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32108,
											"end": 32210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32108,
											"end": 32210,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 32216,
											"end": 32450,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 32216,
											"end": 32450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32356,
											"end": 32390,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 32352,
											"end": 32353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32344,
											"end": 32350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32340,
											"end": 32354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32333,
											"end": 32391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32425,
											"end": 32442,
											"name": "PUSH",
											"source": 8,
											"value": "6572206E6F7220617070726F7665640000000000000000000000000000000000"
										},
										{
											"begin": 32420,
											"end": 32422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 32412,
											"end": 32418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32408,
											"end": 32423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32401,
											"end": 32443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32216,
											"end": 32450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32216,
											"end": 32450,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 32456,
											"end": 32683,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 32456,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32596,
											"end": 32630,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 32592,
											"end": 32593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32584,
											"end": 32590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32580,
											"end": 32594,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32573,
											"end": 32631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32665,
											"end": 32675,
											"name": "PUSH",
											"source": 8,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32660,
											"end": 32662,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 32652,
											"end": 32658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32648,
											"end": 32663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32641,
											"end": 32676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32456,
											"end": 32683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32456,
											"end": 32683,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 32689,
											"end": 32937,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 32689,
											"end": 32937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32829,
											"end": 32863,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 32825,
											"end": 32826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32817,
											"end": 32823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32813,
											"end": 32827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32806,
											"end": 32864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32898,
											"end": 32929,
											"name": "PUSH",
											"source": 8,
											"value": "526563656976657220696D706C656D656E74657220636F6E7472616374000000"
										},
										{
											"begin": 32893,
											"end": 32895,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 32885,
											"end": 32891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32881,
											"end": 32896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32874,
											"end": 32930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32689,
											"end": 32937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32689,
											"end": 32937,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 32943,
											"end": 33176,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 32943,
											"end": 33176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33083,
											"end": 33117,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 33079,
											"end": 33080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33071,
											"end": 33077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33067,
											"end": 33081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33060,
											"end": 33118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33152,
											"end": 33168,
											"name": "PUSH",
											"source": 8,
											"value": "6572206F7220617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 33147,
											"end": 33149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 33139,
											"end": 33145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33135,
											"end": 33150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33128,
											"end": 33169,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32943,
											"end": 33176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32943,
											"end": 33176,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 33182,
											"end": 33364,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 33182,
											"end": 33364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33322,
											"end": 33356,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A4552433131353552656365697665722072656A6563746564"
										},
										{
											"begin": 33318,
											"end": 33319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33310,
											"end": 33316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33306,
											"end": 33320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33299,
											"end": 33357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33182,
											"end": 33364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33182,
											"end": 33364,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 33370,
											"end": 33599,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 33370,
											"end": 33599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33510,
											"end": 33544,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 33506,
											"end": 33507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33498,
											"end": 33504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33494,
											"end": 33508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33487,
											"end": 33545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33579,
											"end": 33591,
											"name": "PUSH",
											"source": 8,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 33574,
											"end": 33576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 33566,
											"end": 33572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33562,
											"end": 33577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33555,
											"end": 33592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33370,
											"end": 33599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33370,
											"end": 33599,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 33605,
											"end": 33835,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 33605,
											"end": 33835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33745,
											"end": 33779,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A61646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 33741,
											"end": 33742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33733,
											"end": 33739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33729,
											"end": 33743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33722,
											"end": 33780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33814,
											"end": 33827,
											"name": "PUSH",
											"source": 8,
											"value": "6C69642061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 33809,
											"end": 33811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 33801,
											"end": 33807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33797,
											"end": 33812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33790,
											"end": 33828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33605,
											"end": 33835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33605,
											"end": 33835,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 33841,
											"end": 34077,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 33841,
											"end": 34077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33981,
											"end": 34015,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A726563656976657220646F206E6F7420696D706C656D656E"
										},
										{
											"begin": 33977,
											"end": 33978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33969,
											"end": 33975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33965,
											"end": 33979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33958,
											"end": 34016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34050,
											"end": 34069,
											"name": "PUSH",
											"source": 8,
											"value": "7420455243313135355265636569766572000000000000000000000000000000"
										},
										{
											"begin": 34045,
											"end": 34047,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 34037,
											"end": 34043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34033,
											"end": 34048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34026,
											"end": 34070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33841,
											"end": 34077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33841,
											"end": 34077,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 34083,
											"end": 34315,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 34083,
											"end": 34315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 34223,
											"end": 34257,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2063616E206E6F74207472616E7366657220746F20746865"
										},
										{
											"begin": 34219,
											"end": 34220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 34211,
											"end": 34217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34207,
											"end": 34221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34200,
											"end": 34258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34292,
											"end": 34307,
											"name": "PUSH",
											"source": 8,
											"value": "207A65726F206164647265737300000000000000000000000000000000000000"
										},
										{
											"begin": 34287,
											"end": 34289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 34279,
											"end": 34285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34275,
											"end": 34290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34268,
											"end": 34308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34083,
											"end": 34315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 34083,
											"end": 34315,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 34321,
											"end": 34549,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 34321,
											"end": 34549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 34461,
											"end": 34495,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 34457,
											"end": 34458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 34449,
											"end": 34455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34445,
											"end": 34459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34438,
											"end": 34496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34530,
											"end": 34541,
											"name": "PUSH",
											"source": 8,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34525,
											"end": 34527,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 34517,
											"end": 34523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34513,
											"end": 34528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34506,
											"end": 34542,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34321,
											"end": 34549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 34321,
											"end": 34549,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 34555,
											"end": 34783,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 34555,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 34695,
											"end": 34729,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 34691,
											"end": 34692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 34683,
											"end": 34689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34679,
											"end": 34693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34672,
											"end": 34730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34764,
											"end": 34775,
											"name": "PUSH",
											"source": 8,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34759,
											"end": 34761,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 34751,
											"end": 34757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34747,
											"end": 34762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34740,
											"end": 34776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34555,
											"end": 34783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 34555,
											"end": 34783,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 34789,
											"end": 35016,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 34789,
											"end": 35016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 34929,
											"end": 34963,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 34925,
											"end": 34926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 34917,
											"end": 34923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34913,
											"end": 34927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34906,
											"end": 34964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34998,
											"end": 35008,
											"name": "PUSH",
											"source": 8,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34993,
											"end": 34995,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 34985,
											"end": 34991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 34981,
											"end": 34996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34974,
											"end": 35009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34789,
											"end": 35016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 34789,
											"end": 35016,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 35022,
											"end": 35144,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 35022,
											"end": 35144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35095,
											"end": 35119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 35113,
											"end": 35118,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35095,
											"end": 35119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 35095,
											"end": 35119,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 35095,
											"end": 35119,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 35095,
											"end": 35119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35088,
											"end": 35093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35085,
											"end": 35120,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 35075,
											"end": 35138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 35075,
											"end": 35138,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 35134,
											"end": 35135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 35131,
											"end": 35132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 35124,
											"end": 35136,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 35075,
											"end": 35138,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 35075,
											"end": 35138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35022,
											"end": 35144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 35022,
											"end": 35144,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 35150,
											"end": 35266,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 35150,
											"end": 35266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35220,
											"end": 35241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 35235,
											"end": 35240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35220,
											"end": 35241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 35220,
											"end": 35241,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 35220,
											"end": 35241,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 35220,
											"end": 35241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35213,
											"end": 35218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35210,
											"end": 35242,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 35200,
											"end": 35260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 35200,
											"end": 35260,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 35256,
											"end": 35257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 35253,
											"end": 35254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 35246,
											"end": 35258,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 35200,
											"end": 35260,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 35200,
											"end": 35260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35150,
											"end": 35266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 35150,
											"end": 35266,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 35272,
											"end": 35392,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 35272,
											"end": 35392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35344,
											"end": 35367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 35361,
											"end": 35366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35344,
											"end": 35367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 35344,
											"end": 35367,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 35344,
											"end": 35367,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 35344,
											"end": 35367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35337,
											"end": 35342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35334,
											"end": 35368,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 35324,
											"end": 35386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 35324,
											"end": 35386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 35382,
											"end": 35383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 35379,
											"end": 35380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 35372,
											"end": 35384,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 35324,
											"end": 35386,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 35324,
											"end": 35386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35272,
											"end": 35392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 35272,
											"end": 35392,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 35398,
											"end": 35520,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 35398,
											"end": 35520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35471,
											"end": 35495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 35489,
											"end": 35494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35471,
											"end": 35495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 35471,
											"end": 35495,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 35471,
											"end": 35495,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 35471,
											"end": 35495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35464,
											"end": 35469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 35461,
											"end": 35496,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 35451,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 35451,
											"end": 35514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 35510,
											"end": 35511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 35507,
											"end": 35508,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 35500,
											"end": 35512,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 35451,
											"end": 35514,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 35451,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 35398,
											"end": 35520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 35398,
											"end": 35520,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length. \\u6279\\u91cf\\u67e5\\u8be2\\u6301\\u4ed3\\u91cf\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}. \\u67e5\\u8be2\\u6279\\u91cf\\u6388\\u6743\\u4fe1\\u606f\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value. \\u591a\\u5e01\\u79cd\\u6279\\u91cf\\u5b89\\u5168\\u8f6c\\u8d26\\u3002\\u89e6\\u53d1TransferBatch\\u4e8b\\u4ef6\\u3002\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value. \\u5355\\u5e01\\u79cd\\u5b89\\u5168\\u8f6c\\u8d26\\uff0c\\u89e6\\u53d1TransferSingle\\u4e8b\\u4ef6\\u3002 \\u6ce8\\u610f\\u4e8b\\u9879\\uff1a 1.to\\u4e0d\\u53ef\\u4ee5\\u662f0\\u5730\\u5740 2._from\\u8981\\u4e48\\u662f\\u8f6c\\u51fa\\u65b9\\u3001\\u8981\\u4e48\\u662f\\u8f6c\\u51fa\\u65b9\\u6388\\u6743\\u7684\\u5730\\u5740 3._from\\u5fc5\\u987b\\u5e01\\u79cd\\u7f16\\u53f7_id\\u6709\\u81f3\\u5c11\\u6709_amount\\u4ee3\\u5e01 4._to\\u5982\\u679c\\u662f\\u4e00\\u4e2a\\u5408\\u7ea6\\u5730\\u5740\\uff0c\\u5219\\u5fc5\\u987b\\u5b9e\\u73b0IERC1155Receiver-onERC1155Received\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller. \\u6279\\u91cf\\u6388\\u6743\\uff0c\\u89e6\\u53d1ApprovalForAll\\u4e8b\\u4ef6\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"\\u67e5\\u8be2\\u6301\\u4ed3\\u91cf\\u3002\\u4f46\\u662f\\u548cERC721\\u4e0d\\u540c\\u7684\\u662f\\u4e0d\\u4ec5\\u9700\\u8981\\u8f93\\u5165\\u67e5\\u8be2\\u7684\\u8d26\\u53f7\\uff0c\\u8fd8\\u9700\\u8981\\u5e01\\u79cd\\u7f16\\u53f7\"},\"supportsInterface(bytes4)\":{\"notice\":\"EIP-165:Standard Interface Detection.\\u68c0\\u9a8c\\u67d0\\u4e2a\\u5408\\u7ea6\\u6709\\u6ca1\\u6709\\u5b9e\\u73b0\\u8be5\\u63a5\\u53e3\\u3002\\u5982\\u4f55\\u6821\\u9a8c\\u5462\\uff1f The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc1155/ERC1155.sol\":{\"keccak256\":\"0xffa53cf288cdadaf69266175b89dd7551ea450866103847301b6146779ff78e2\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://daaee8763f6313c74d016e2ecab6aab8b72186e0731832dd8f6cba4d8ecf74ad\",\"dweb:/ipfs/QmUoS3Za7P842UoBHeTAKFi6xg8PFzdgHxXhkYR7qQn14B\"]},\"erc1155/IERC1155.sol\":{\"keccak256\":\"0x297d1faefaf270008d71253d81d04fb997a6eb82444e5676e5792038e454cd81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c2a8045105cb301f2dca4c9645d091005298fc388c7c98ec380c13f284c4b4\",\"dweb:/ipfs/QmUdxig5QPFhJKSPaTJ8Q9Bqjmp6RmbrpuqRspEHoLZfcC\"]},\"erc1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x424169a090f7c9c8ff065d329f2f8a714f822ed50eb7f2704b651e8c97a02c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b61662d31754e780a0735a2508c81f5927818c022e8bcc80b5a9f75cad74ad6\",\"dweb:/ipfs/QmRp4vUDE37ViM4ZA3d5beBC4Lwbu8MKR1maN6vsqZfcz9\"]},\"erc1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe00cde01575ebe5b869c59b297e49cf40d29d60102dda8acf84d410a18a4a821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52cd131d39cdd54e273727275fba379ec238b6938a4124edd0de68f8cb47d74a\",\"dweb:/ipfs/QmajKhwsH5VES1DkAmwXV6utpdnUJ7UK8R1AzFJTDsoonz\"]},\"erc721/Address.sol\":{\"keccak256\":\"0xab08f9737857b7206a4fdeab0cb300337abb8c26d8ac0a04af90cf93e23f9007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e313fb4ca5132b7f9efa9743496bf47b599c59c89bb5b32f0fb7a49b8fc5b5fc\",\"dweb:/ipfs/QmSomRQMrzdQKhhk8cvrDsVevyqWs5BbyyGgHapmkCe9yF\"]},\"erc721/IERC165.sol\":{\"keccak256\":\"0x4909cb1c06fa2e643c7ade69113f98e2b1f00e808c77a8c31dd20545b8a63262\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://be95fe0fa8ba854ad10d0fd33cd07186a53b9d7df2c92bc342c3f73b84194cba\",\"dweb:/ipfs/QmbYjoB3avxMHrekwNkHebQHVjCFt6jRxcHVrGCBHP89AN\"]},\"erc721/Math.sol\":{\"keccak256\":\"0x354871528bf99e5a891d86a051597da655434520520458d137d9ae9b2463429b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e840f606f8ed6b5f4acff6c2a262f377ef9b77b072dbdefc009d2f6569295085\",\"dweb:/ipfs/Qmc5ztNcZxKPicNy23rYufo7Vd3yAL5AQUNkRU8E8s2nTu\"]},\"erc721/Strings.sol\":{\"keccak256\":\"0xca15e0b3c2c6fc83beac0d1be1765e0285f23cc5d587d363340e1d20f079a91b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3827d5edddd3df1806a3f21626b09e20d5548a9d016a30ba10ba258b627ed36f\",\"dweb:/ipfs/QmdsAth9PrUpGjnyoJXSu6Sspod662fkG1m9nQ7Nt4r1k1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "erc1155/ERC1155.sol:ERC1155",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "erc1155/ERC1155.sol:ERC1155",
								"label": "operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "查询持仓量。但是和ERC721不同的是不仅需要输入查询的账号，还需要币种编号"
							},
							"supportsInterface(bytes4)": {
								"notice": "EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？ The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above."
							}
						},
						"version": 1
					}
				}
			},
			"erc1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"EIP-165:Standard Interface Detection.\\u68c0\\u9a8c\\u67d0\\u4e2a\\u5408\\u7ea6\\u6709\\u6ca1\\u6709\\u5b9e\\u73b0\\u8be5\\u63a5\\u53e3\\u3002\\u5982\\u4f55\\u6821\\u9a8c\\u5462\\uff1f The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc1155/IERC1155.sol\":{\"keccak256\":\"0x297d1faefaf270008d71253d81d04fb997a6eb82444e5676e5792038e454cd81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c2a8045105cb301f2dca4c9645d091005298fc388c7c98ec380c13f284c4b4\",\"dweb:/ipfs/QmUdxig5QPFhJKSPaTJ8Q9Bqjmp6RmbrpuqRspEHoLZfcC\"]},\"erc721/IERC165.sol\":{\"keccak256\":\"0x4909cb1c06fa2e643c7ade69113f98e2b1f00e808c77a8c31dd20545b8a63262\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://be95fe0fa8ba854ad10d0fd33cd07186a53b9d7df2c92bc342c3f73b84194cba\",\"dweb:/ipfs/QmbYjoB3avxMHrekwNkHebQHVjCFt6jRxcHVrGCBHP89AN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？ The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above."
							}
						},
						"version": 1
					}
				}
			},
			"erc1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"EIP-165:Standard Interface Detection.\\u68c0\\u9a8c\\u67d0\\u4e2a\\u5408\\u7ea6\\u6709\\u6ca1\\u6709\\u5b9e\\u73b0\\u8be5\\u63a5\\u53e3\\u3002\\u5982\\u4f55\\u6821\\u9a8c\\u5462\\uff1f The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x424169a090f7c9c8ff065d329f2f8a714f822ed50eb7f2704b651e8c97a02c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b61662d31754e780a0735a2508c81f5927818c022e8bcc80b5a9f75cad74ad6\",\"dweb:/ipfs/QmRp4vUDE37ViM4ZA3d5beBC4Lwbu8MKR1maN6vsqZfcz9\"]},\"erc721/IERC165.sol\":{\"keccak256\":\"0x4909cb1c06fa2e643c7ade69113f98e2b1f00e808c77a8c31dd20545b8a63262\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://be95fe0fa8ba854ad10d0fd33cd07186a53b9d7df2c92bc342c3f73b84194cba\",\"dweb:/ipfs/QmbYjoB3avxMHrekwNkHebQHVjCFt6jRxcHVrGCBHP89AN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？ The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above."
							}
						},
						"version": 1
					}
				}
			},
			"erc1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"EIP-165:Standard Interface Detection.\\u68c0\\u9a8c\\u67d0\\u4e2a\\u5408\\u7ea6\\u6709\\u6ca1\\u6709\\u5b9e\\u73b0\\u8be5\\u63a5\\u53e3\\u3002\\u5982\\u4f55\\u6821\\u9a8c\\u5462\\uff1f The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc1155/IERC1155.sol\":{\"keccak256\":\"0x297d1faefaf270008d71253d81d04fb997a6eb82444e5676e5792038e454cd81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c2a8045105cb301f2dca4c9645d091005298fc388c7c98ec380c13f284c4b4\",\"dweb:/ipfs/QmUdxig5QPFhJKSPaTJ8Q9Bqjmp6RmbrpuqRspEHoLZfcC\"]},\"erc1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe00cde01575ebe5b869c59b297e49cf40d29d60102dda8acf84d410a18a4a821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52cd131d39cdd54e273727275fba379ec238b6938a4124edd0de68f8cb47d74a\",\"dweb:/ipfs/QmajKhwsH5VES1DkAmwXV6utpdnUJ7UK8R1AzFJTDsoonz\"]},\"erc721/IERC165.sol\":{\"keccak256\":\"0x4909cb1c06fa2e643c7ade69113f98e2b1f00e808c77a8c31dd20545b8a63262\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://be95fe0fa8ba854ad10d0fd33cd07186a53b9d7df2c92bc342c3f73b84194cba\",\"dweb:/ipfs/QmbYjoB3avxMHrekwNkHebQHVjCFt6jRxcHVrGCBHP89AN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？ The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above."
							}
						},
						"version": 1
					}
				}
			},
			"erc721/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721/Address.sol\":194:9157  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721/Address.sol\":194:9157  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020fddfdf69af0318aa0c85a09a746ff09ef1659c9a5fc499abb16682b961337c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020fddfdf69af0318aa0c85a09a746ff09ef1659c9a5fc499abb16682b961337c64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 REVERT 0xDF 0xDF PUSH10 0xAF0318AA0C85A09A746F CREATE SWAP15 CALL PUSH6 0x9C9A5FC499AB 0xB1 PUSH7 0x82B961337C6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "194:8963:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020fddfdf69af0318aa0c85a09a746ff09ef1659c9a5fc499abb16682b961337c64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 REVERT 0xDF 0xDF PUSH10 0xAF0318AA0C85A09A746F CREATE SWAP15 CALL PUSH6 0x9C9A5FC499AB 0xB1 PUSH7 0x82B961337C6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "194:8963:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9157,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020fddfdf69af0318aa0c85a09a746ff09ef1659c9a5fc499abb16682b961337c64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 9157,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9157,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721/Address.sol\":{\"keccak256\":\"0xab08f9737857b7206a4fdeab0cb300337abb8c26d8ac0a04af90cf93e23f9007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e313fb4ca5132b7f9efa9743496bf47b599c59c89bb5b32f0fb7a49b8fc5b5fc\",\"dweb:/ipfs/QmSomRQMrzdQKhhk8cvrDsVevyqWs5BbyyGgHapmkCe9yF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"EIP-165:Standard Interface Detection.\\u68c0\\u9a8c\\u67d0\\u4e2a\\u5408\\u7ea6\\u6709\\u6ca1\\u6709\\u5b9e\\u73b0\\u8be5\\u63a5\\u53e3\\u3002\\u5982\\u4f55\\u6821\\u9a8c\\u5462\\uff1f The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721/IERC165.sol\":{\"keccak256\":\"0x4909cb1c06fa2e643c7ade69113f98e2b1f00e808c77a8c31dd20545b8a63262\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://be95fe0fa8ba854ad10d0fd33cd07186a53b9d7df2c92bc342c3f73b84194cba\",\"dweb:/ipfs/QmbYjoB3avxMHrekwNkHebQHVjCFt6jRxcHVrGCBHP89AN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？ The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)')); or using the Selector contract above."
							}
						},
						"version": 1
					}
				}
			},
			"erc721/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721/Math.sol\":202:12505  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721/Math.sol\":202:12505  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fede4450c1a9c84794110b22e4960656ed7f3ab30cd92a9451394ef893a2af3564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fede4450c1a9c84794110b22e4960656ed7f3ab30cd92a9451394ef893a2af3564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xDE DIFFICULTY POP 0xC1 0xA9 0xC8 SELFBALANCE SWAP5 GT SIGNEXTEND 0x22 0xE4 SWAP7 MOD JUMP 0xED PUSH32 0x3AB30CD92A9451394EF893A2AF3564736F6C6343000807003300000000000000 ",
							"sourceMap": "202:12303:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fede4450c1a9c84794110b22e4960656ed7f3ab30cd92a9451394ef893a2af3564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xDE DIFFICULTY POP 0xC1 0xA9 0xC8 SELFBALANCE SWAP5 GT SIGNEXTEND 0x22 0xE4 SWAP7 MOD JUMP 0xED PUSH32 0x3AB30CD92A9451394EF893A2AF3564736F6C6343000807003300000000000000 ",
							"sourceMap": "202:12303:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12505,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fede4450c1a9c84794110b22e4960656ed7f3ab30cd92a9451394ef893a2af3564736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 12505,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12505,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721/Math.sol\":{\"keccak256\":\"0x354871528bf99e5a891d86a051597da655434520520458d137d9ae9b2463429b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e840f606f8ed6b5f4acff6c2a262f377ef9b77b072dbdefc009d2f6569295085\",\"dweb:/ipfs/Qmc5ztNcZxKPicNy23rYufo7Vd3yAL5AQUNkRU8E8s2nTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721/Strings.sol\":183:2248  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721/Strings.sol\":183:2248  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e793d87d1b72d7c0a40cd4f12c365c728814af2ac866b1aae88318be1ab539a164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e793d87d1b72d7c0a40cd4f12c365c728814af2ac866b1aae88318be1ab539a164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 SWAP4 0xD8 PUSH30 0x1B72D7C0A40CD4F12C365C728814AF2AC866B1AAE88318BE1AB539A16473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "183:2065:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e793d87d1b72d7c0a40cd4f12c365c728814af2ac866b1aae88318be1ab539a164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 SWAP4 0xD8 PUSH30 0x1B72D7C0A40CD4F12C365C728814AF2AC866B1AAE88318BE1AB539A16473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "183:2065:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 183,
									"end": 2248,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e793d87d1b72d7c0a40cd4f12c365c728814af2ac866b1aae88318be1ab539a164736f6c63430008070033",
									".code": [
										{
											"begin": 183,
											"end": 2248,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 183,
											"end": 2248,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721/Math.sol\":{\"keccak256\":\"0x354871528bf99e5a891d86a051597da655434520520458d137d9ae9b2463429b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e840f606f8ed6b5f4acff6c2a262f377ef9b77b072dbdefc009d2f6569295085\",\"dweb:/ipfs/Qmc5ztNcZxKPicNy23rYufo7Vd3yAL5AQUNkRU8E8s2nTu\"]},\"erc721/Strings.sol\":{\"keccak256\":\"0xca15e0b3c2c6fc83beac0d1be1765e0285f23cc5d587d363340e1d20f079a91b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3827d5edddd3df1806a3f21626b09e20d5548a9d016a30ba10ba258b627ed36f\",\"dweb:/ipfs/QmdsAth9PrUpGjnyoJXSu6Sspod662fkG1m9nQ7Nt4r1k1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"erc1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "erc1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1392
						],
						"ERC1155": [
							884
						],
						"IERC1155": [
							1006
						],
						"IERC1155MetadataURI": [
							1062
						],
						"IERC1155Receiver": [
							1047
						],
						"IERC165": [
							1403
						],
						"Math": [
							2268
						],
						"Strings": [
							2443
						]
					},
					"id": 885,
					"license": "SEE LICENSE IN LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51:23:0"
						},
						{
							"absolutePath": "erc1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1007,
							"src": "75:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1048,
							"src": "100:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1063,
							"src": "133:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721/IERC165.sol",
							"file": "../erc721/IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1404,
							"src": "180:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721/Address.sol",
							"file": "../erc721/Address.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1393,
							"src": "212:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721/Strings.sol",
							"file": "../erc721/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 2444,
							"src": "244:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "297:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1006,
										"src": "306:8:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "306:8:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "316:19:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "316:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884,
								1062,
								1006,
								1403
							],
							"name": "ERC1155",
							"nameLocation": "286:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 16,
									"libraryName": {
										"id": 14,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1392,
										"src": "348:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "342:26:0",
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "360:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2443,
										"src": "380:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "374:26:0",
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "523:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 884,
									"src": "476:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "485:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "476:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "496:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "516:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "operatorApprovals",
									"nameLocation": "635:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 884,
									"src": "588:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "597:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "588:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "608:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "628:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1402
									],
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "744:165:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 39,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "761:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 41,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "781:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1006_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1006_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 40,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "776:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "776:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1006",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "776:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "761:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 45,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "806:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 47,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "826:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1062_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1062_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 46,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "821:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "821:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1062",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "821:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "806:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "761:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 52,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "862:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 54,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "882:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$1403_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$1403_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 53,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "877:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "877:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1403",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "877:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "862:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "761:141:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 38,
												"id": 59,
												"nodeType": "Return",
												"src": "754:148:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "669:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 35,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "721:8:0"
									},
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "694:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "687:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 32,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "687:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:6:0"
									},
									"scope": 884,
									"src": "660:249:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1061
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1095:149:0",
										"statements": [
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "1119:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "1105:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 69,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1105:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 71,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1129:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1105:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 76,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "1162:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1156:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 74,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1156:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1156:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1156:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1180:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1156:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1235:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1156:81:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 85,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "1208:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 86,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 63,
																				"src": "1217:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2326,
																			"src": "1217:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1217:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 83,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1191:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1191:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1191:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 81,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1184:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1184:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 68,
												"id": 93,
												"nodeType": "Return",
												"src": "1149:88:0"
											}
										]
									},
									"functionSelector": "0e89341c",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1027:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 65,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1063:8:0"
									},
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1039:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1031:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:12:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1081:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1081:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:15:0"
									},
									"scope": 884,
									"src": "1018:226:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1315:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1332:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 99,
												"id": 101,
												"nodeType": "Return",
												"src": "1325:9:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1259:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1267:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1301:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:15:0"
									},
									"scope": 884,
									"src": "1250:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										944
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1561:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 115,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "1579:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1599:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1591:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1591:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1591:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1579:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a61646472657373207a65726f206973206e6f7420612076616c69642061646472657373",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1603:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e",
																"typeString": "literal_string \"ERC1155:address zero is not a valid address\""
															},
															"value": "ERC1155:address zero is not a valid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ae8dec642631bf4717fdd0e8667199f998f3d3a1eee8162e96797e01f6cc05e",
																"typeString": "literal_string \"ERC1155:address zero is not a valid address\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1571:78:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 124,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1666:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 126,
														"indexExpression": {
															"id": 125,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1675:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1666:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 128,
													"indexExpression": {
														"id": 127,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1680:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1666:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 113,
												"id": 129,
												"nodeType": "Return",
												"src": "1659:30:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "1347:121:0",
										"text": " 查询持仓量。但是和ERC721不同的是不仅需要输入查询的账号，还需要币种编号"
									},
									"functionSelector": "00fdd58e",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1482:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1535:8:0"
									},
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1500:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1492:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1518:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1510:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:31:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1553:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:9:0"
									},
									"scope": 884,
									"src": "1473:223:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										957
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2045:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 146,
																	"name": "_accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2063:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2063:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 148,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "2083:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2083:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2063:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2096:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2055:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "2055:85:0"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2167:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "2150:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 156,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2150:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 157,
															"nodeType": "ArrayTypeName",
															"src": "2150:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 162,
																"name": "_accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2197:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2197:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2183:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 159,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2187:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 160,
															"nodeType": "ArrayTypeName",
															"src": "2187:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2183:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2150:64:0"
											},
											{
												"body": {
													"id": 190,
													"nodeType": "Block",
													"src": "2268:76:0",
													"statements": [
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 177,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "2282:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 179,
																	"indexExpression": {
																		"id": 178,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "2296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2282:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 181,
																				"name": "_accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 135,
																				"src": "2311:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 183,
																			"indexExpression": {
																				"id": 182,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 167,
																				"src": "2321:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2311:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 184,
																				"name": "_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "2325:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 186,
																			"indexExpression": {
																				"id": 185,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 167,
																				"src": "2330:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2325:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 180,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "2301:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2301:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2282:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "2282:51:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2241:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 171,
															"name": "_accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "2245:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2245:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2241:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"initializationExpression": {
													"assignments": [
														167
													],
													"declarations": [
														{
															"constant": false,
															"id": 167,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2234:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 191,
															"src": "2229:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 166,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2229:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 169,
													"initialValue": {
														"hexValue": "30",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2229:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2263:3:0",
														"subExpression": {
															"id": 174,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 176,
													"nodeType": "ExpressionStatement",
													"src": "2263:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2224:120:0"
											},
											{
												"expression": {
													"id": 192,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "2360:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 193,
												"nodeType": "Return",
												"src": "2353:20:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1702:217:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length.\n 批量查询持仓量"
									},
									"functionSelector": "4e1273f4",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1933:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2010:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_accounts",
												"nameLocation": "1965:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1948:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 133,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1948:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 134,
													"nodeType": "ArrayTypeName",
													"src": "1948:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1993:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1976:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 137,
													"nodeType": "ArrayTypeName",
													"src": "1976:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:51:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2028:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 141,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 142,
													"nodeType": "ArrayTypeName",
													"src": "2028:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:18:0"
									},
									"scope": 884,
									"src": "1924:456:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										965
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2765:240:0",
										"statements": [
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2783:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 230,
														"src": "2775:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 204,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2775:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"expression": {
														"id": 206,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2791:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2775:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 210,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2819:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 211,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2828:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2819:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2839:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2811:72:0"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 216,
																"name": "operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2893:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 219,
															"indexExpression": {
																"id": 217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2911:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2893:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 220,
														"indexExpression": {
															"id": 218,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2918:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2893:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 221,
														"name": "_approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2893:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2893:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2977:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 227,
															"name": "_approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2988:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2955:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "EmitStatement",
												"src": "2950:48:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2386:297:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller.\n 批量授权，触发ApprovalForAll事件"
									},
									"functionSelector": "a22cb465",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2697:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2750:8:0"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "2723:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2715:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "2739:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2734:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:35:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2765:0:0"
									},
									"scope": 884,
									"src": "2688:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3281:62:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 242,
															"name": "operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3298:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 244,
														"indexExpression": {
															"id": 243,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3316:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3298:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 246,
													"indexExpression": {
														"id": 245,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3326:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3298:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 241,
												"id": 247,
												"nodeType": "Return",
												"src": "3291:45:0"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "3011:167:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}.\n 查询批量授权信息"
									},
									"functionSelector": "e985e9c5",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3192:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 238,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3258:8:0"
									},
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3217:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3209:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3235:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3227:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:37:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3276:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:6:0"
									},
									"scope": 884,
									"src": "3183:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										989
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4366:728:0",
										"statements": [
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "4467:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4459:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 264,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4459:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"expression": {
														"id": 266,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4478:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4478:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4459:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "4506:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 271,
																	"name": "operator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "4515:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4506:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "4544:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "4551:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "4527:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4527:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4506:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4562:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4498:113:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "4498:113:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "4629:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4644:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 283,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4636:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4636:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4629:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616e206e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4648:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d",
																"typeString": "literal_string \"ERC1155: can not transfer to the zero address\""
															},
															"value": "ERC1155: can not transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d",
																"typeString": "literal_string \"ERC1155: can not transfer to the zero address\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4621:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4621:75:0"
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "4714:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4706:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 293,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4728:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 295,
														"indexExpression": {
															"id": 294,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4737:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4728:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 297,
													"indexExpression": {
														"id": 296,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4742:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4728:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "4766:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 301,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "4781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4766:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4790:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4758:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "4758:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4887:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 309,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4904:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4909:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 311,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 312,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4923:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 306,
														"name": "_safeTransferCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "4868:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "4868:61:0"
											},
											{
												"expression": {
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 315,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "4939:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 318,
															"indexExpression": {
																"id": 316,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "4948:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4939:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 319,
														"indexExpression": {
															"id": 317,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4953:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4939:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 320,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4962:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 321,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4962:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4939:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4939:44:0"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 325,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "4993:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 328,
															"indexExpression": {
																"id": 326,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "5002:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4993:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 327,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "5007:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4993:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "5015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4993:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "4993:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5052:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "5062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "5069:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "5074:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 338,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "5079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "5037:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5037:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "EmitStatement",
												"src": "5032:55:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3349:893:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value.\n 单币种安全转账，触发TransferSingle事件。\n 注意事项：\n 1.to不可以是0地址\n 2._from要么是转出方、要么是转出方授权的地址\n 3._from必须币种编号_id有至少有_amount代币\n 4._to如果是一个合约地址，则必须实现IERC1155Receiver-onERC1155Received"
									},
									"functionSelector": "f242432a",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4256:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4351:8:0"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4281:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4273:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4296:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4288:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4309:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4301:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4344:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4331:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4331:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4272:78:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4366:0:0"
									},
									"scope": 884,
									"src": "4247:847:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "5232:439:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 357,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5245:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1080,
														"src": "5245:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5245:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "5242:423:0",
												"trueBody": {
													"id": 393,
													"nodeType": "Block",
													"src": "5262:403:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 384,
																		"nodeType": "Block",
																		"src": "5383:172:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 373,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 371,
																						"src": "5404:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 374,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1047,
																								"src": "5414:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1047_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 375,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1028,
																							"src": "5414:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes memory) returns (bytes4)"
																							}
																						},
																						"id": 376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "5414:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "5404:53:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 383,
																				"nodeType": "IfStatement",
																				"src": "5401:140:0",
																				"trueBody": {
																					"id": 382,
																					"nodeType": "Block",
																					"src": "5458:83:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a4552433131353552656365697665722072656a6563746564",
																										"id": 379,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5487:34:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754",
																											"typeString": "literal_string \"ERC1155:ERC1155Receiver rejected\""
																										},
																										"value": "ERC1155:ERC1155Receiver rejected"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_5664b9d89f5635118447fb1e2a9f331851fac0fc0263d92954e649909e97a754",
																											"typeString": "literal_string \"ERC1155:ERC1155Receiver rejected\""
																										}
																									],
																									"id": 378,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "5480:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 380,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5480:42:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 381,
																							"nodeType": "ExpressionStatement",
																							"src": "5480:42:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 385,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 372,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 371,
																				"mutability": "mutable",
																				"name": "result",
																				"nameLocation": "5375:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 385,
																				"src": "5368:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 370,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "5368:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "5367:15:0"
																	},
																	"src": "5359:196:0"
																},
																{
																	"block": {
																		"id": 390,
																		"nodeType": "Block",
																		"src": "5563:92:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a726563656976657220646f206e6f7420696d706c656d656e7420455243313135355265636569766572",
																							"id": 387,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5588:51:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f",
																								"typeString": "literal_string \"ERC1155:receiver do not implement ERC1155Receiver\""
																							},
																							"value": "ERC1155:receiver do not implement ERC1155Receiver"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_aa86125ecaae5d0e4b3758c3dbe4ed164ebe170911f0111e7f11ec5327fe8d1f",
																								"typeString": "literal_string \"ERC1155:receiver do not implement ERC1155Receiver\""
																							}
																						],
																						"id": 386,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "5581:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 388,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5581:59:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 389,
																				"nodeType": "ExpressionStatement",
																				"src": "5581:59:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 391,
																	"nodeType": "TryCatchClause",
																	"src": "5556:99:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 364,
																		"name": "_operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "5320:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 365,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "5331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 366,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "5338:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 367,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "5343:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 368,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "5352:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 361,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "5297:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 360,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "5280:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1047_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5280:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1047",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "5280:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5280:78:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 392,
															"nodeType": "TryStatement",
															"src": "5276:379:0"
														}
													]
												}
											}
										]
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferCheck",
									"nameLocation": "5109:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5136:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5128:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5155:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5147:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5170:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5162:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5183:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5175:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5196:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5188:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5218:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5205:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5205:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5127:97:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5232:0:0"
									},
									"scope": 884,
									"src": "5100:571:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1005
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6282:892:0",
										"statements": [
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6300:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "6292:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 413,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6292:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"expression": {
														"id": 415,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6311:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6311:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6292:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 419,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "6339:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 420,
																	"name": "operator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "6348:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6339:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 423,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "6377:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 424,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "6384:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 422,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "6360:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6360:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6339:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6395:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6331:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "6331:114:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 431,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "6463:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6463:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 433,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6478:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6478:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6463:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6495:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "6455:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "6556:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6571:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6563:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 441,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6563:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6563:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6556:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616e206e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6575:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d",
																"typeString": "literal_string \"ERC1155: can not transfer to the zero address\""
															},
															"value": "ERC1155: can not transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdac715a7779dda0e2167be6c99fc15791e8f262e48e58e3803f4de1d8d5043d",
																"typeString": "literal_string \"ERC1155: can not transfer to the zero address\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6548:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6548:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "6548:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6680:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "6690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "6697:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "6702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 454,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "6708:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 455,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6718:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_safeBatchTransferCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "6656:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6656:68:0"
											},
											{
												"body": {
													"id": 514,
													"nodeType": "Block",
													"src": "6773:329:0",
													"statements": [
														{
															"assignments": [
																470
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 470,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6795:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 514,
																	"src": "6787:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6787:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 474,
															"initialValue": {
																"baseExpression": {
																	"id": 471,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "6800:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6805:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6800:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6787:20:0"
														},
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6829:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 514,
																	"src": "6821:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6821:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 480,
															"initialValue": {
																"baseExpression": {
																	"id": 477,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6838:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6838:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6821:28:0"
														},
														{
															"assignments": [
																482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 482,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6871:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 514,
																	"src": "6863:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6863:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 488,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6885:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6894:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6885:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6885:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6863:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "6926:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6941:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6926:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6949:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 489,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6918:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6918:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6918:76:0"
														},
														{
															"expression": {
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 496,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7008:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 499,
																		"indexExpression": {
																			"id": 497,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7017:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7008:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 500,
																	"indexExpression": {
																		"id": 498,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "7021:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7008:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 501,
																		"name": "fromBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "7030:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 502,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "7044:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7030:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7008:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "7008:42:0"
														},
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 506,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7064:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 509,
																		"indexExpression": {
																			"id": 507,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7073:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7064:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 510,
																	"indexExpression": {
																		"id": 508,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "7077:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7064:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 511,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7085:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7064:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "7064:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 463,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "6755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6755:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6751:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 515,
												"initializationExpression": {
													"assignments": [
														459
													],
													"declarations": [
														{
															"constant": false,
															"id": 459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6744:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 515,
															"src": "6739:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 458,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6739:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 461,
													"initialValue": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6739:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6768:3:0",
														"subExpression": {
															"id": 466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6768:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ExpressionStatement",
													"src": "6768:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6734:368:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 517,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7130:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7147:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "7152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 521,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7158:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 516,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "7116:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7116:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "7111:56:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "5677:456:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n 多币种批量安全转账。触发TransferBatch事件。"
									},
									"functionSelector": "2eb2c2d6",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "6147:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6267:8:0"
									},
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6177:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6169:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6192:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6184:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "6214:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6197:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 403,
													"nodeType": "ArrayTypeName",
													"src": "6197:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "6237:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6220:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 406,
													"nodeType": "ArrayTypeName",
													"src": "6220:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6260:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "6247:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6168:98:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6282:0:0"
									},
									"scope": 884,
									"src": "6138:1036:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "7337:455:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 542,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7350:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1080,
														"src": "7350:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7350:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "7347:439:0",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "7367:419:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 569,
																		"nodeType": "Block",
																		"src": "7494:172:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 558,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 556,
																						"src": "7511:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 559,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1047,
																								"src": "7521:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1047_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 560,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1046,
																							"src": "7521:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] memory,uint256[] memory,bytes memory) returns (bytes4)"
																							}
																						},
																						"id": 561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "7521:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "7511:58:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 568,
																				"nodeType": "IfStatement",
																				"src": "7508:145:0",
																				"trueBody": {
																					"id": 567,
																					"nodeType": "Block",
																					"src": "7570:83:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 564,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "7595:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 563,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "7588:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 565,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7588:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 566,
																							"nodeType": "ExpressionStatement",
																							"src": "7588:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 570,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 557,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 556,
																				"mutability": "mutable",
																				"name": "result",
																				"nameLocation": "7486:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 570,
																				"src": "7479:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 555,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "7479:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "7478:15:0"
																	},
																	"src": "7470:196:0"
																},
																{
																	"block": {
																		"id": 575,
																		"nodeType": "Block",
																		"src": "7673:103:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e74657220636f6e7472616374",
																							"id": 572,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7698:63:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer contract\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer contract"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_0ba0ff0a21d018af5d66e483eea2f4ba88bf1e5fa740e271a3ac1da8063d98b4",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer contract\""
																							}
																						],
																						"id": 571,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "7691:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 573,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7691:71:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 574,
																				"nodeType": "ExpressionStatement",
																				"src": "7691:71:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 576,
																	"nodeType": "TryCatchClause",
																	"src": "7667:109:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 549,
																		"name": "_operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "7429:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 550,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "7440:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 551,
																		"name": "_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "7447:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 552,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "7453:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 553,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "7463:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 546,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "7401:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 545,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "7384:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1047_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7384:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1047",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1046,
																	"src": "7384:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7384:85:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 577,
															"nodeType": "TryStatement",
															"src": "7380:396:0"
														}
													]
												}
											}
										]
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferCheck",
									"nameLocation": "7189:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "7221:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7213:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7240:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7232:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7255:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7247:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "7277:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7260:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 532,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 533,
													"nodeType": "ArrayTypeName",
													"src": "7260:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "7300:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7283:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 535,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"nodeType": "ArrayTypeName",
													"src": "7283:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7323:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7310:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7310:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7212:117:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7337:0:0"
									},
									"scope": 884,
									"src": "7180:612:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7892:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "7910:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7925:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7917:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 594,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7917:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7917:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7910:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616e206e6f74206d696e7420746f207a65726f2061646472657373",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7929:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24c3405d7acf1b927680a7cdc73df20d4f0aba5c2dbbb838c8a4f9009ac01bf6",
																"typeString": "literal_string \"ERC1155: can not mint to zero address\""
															},
															"value": "ERC1155: can not mint to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24c3405d7acf1b927680a7cdc73df20d4f0aba5c2dbbb838c8a4f9009ac01bf6",
																"typeString": "literal_string \"ERC1155: can not mint to zero address\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7902:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "7902:67:0"
											},
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7987:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "7979:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 602,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7979:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"expression": {
														"id": 604,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7998:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7998:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7979:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "8037:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8055:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8047:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8047:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "8059:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "8064:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 615,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "8069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 616,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "8078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 607,
														"name": "_safeTransferCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "8018:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8018:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "8018:66:0"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 619,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "8094:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 622,
															"indexExpression": {
																"id": 620,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "8103:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8094:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 623,
														"indexExpression": {
															"id": 621,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "8108:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8094:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 624,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "8116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8094:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "8094:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 628,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "8153:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8171:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8163:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8163:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8163:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "8175:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "8180:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 635,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "8185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "8138:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8138:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "EmitStatement",
												"src": "8133:60:0"
											}
										]
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7807:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7821:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7813:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "7834:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7826:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7847:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7856:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7812:63:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7892:0:0"
									},
									"scope": 884,
									"src": "7798:402:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "8325:480:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "8343:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8358:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8350:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 654,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8350:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8350:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8343:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616e206e6f74206d696e7420746f207a65726f2061646472657373",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8362:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24c3405d7acf1b927680a7cdc73df20d4f0aba5c2dbbb838c8a4f9009ac01bf6",
																"typeString": "literal_string \"ERC1155: can not mint to zero address\""
															},
															"value": "ERC1155: can not mint to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24c3405d7acf1b927680a7cdc73df20d4f0aba5c2dbbb838c8a4f9009ac01bf6",
																"typeString": "literal_string \"ERC1155: can not mint to zero address\""
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8335:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "8335:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 663,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "8420:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8420:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 665,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "8435:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8435:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8420:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8452:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8412:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8412:83:0"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8513:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "8505:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 671,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8505:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"initialValue": {
													"expression": {
														"id": 673,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8524:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8524:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8505:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "8568:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8578:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 678,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8578:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8578:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "8590:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8595:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 684,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8601:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 685,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 676,
														"name": "_safeBatchTransferCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "8544:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8544:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "8544:73:0"
											},
											{
												"body": {
													"id": 711,
													"nodeType": "Block",
													"src": "8666:62:0",
													"statements": [
														{
															"expression": {
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 699,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "8680:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 704,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 700,
																				"name": "_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "8689:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 702,
																			"indexExpression": {
																				"id": 701,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 689,
																				"src": "8694:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8689:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8680:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 705,
																	"indexExpression": {
																		"id": 703,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "8698:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8680:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 706,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "8706:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 708,
																	"indexExpression": {
																		"id": 707,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "8715:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8706:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8680:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "8680:37:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 693,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8648:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8644:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"initializationExpression": {
													"assignments": [
														689
													],
													"declarations": [
														{
															"constant": false,
															"id": 689,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8637:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 712,
															"src": "8632:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 688,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8632:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 691,
													"initialValue": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8632:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8661:3:0",
														"subExpression": {
															"id": 696,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8661:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 698,
													"nodeType": "ExpressionStatement",
													"src": "8661:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8627:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 714,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "8756:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8766:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 715,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8766:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8766:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "8778:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8783:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 721,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8789:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 713,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "8742:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8742:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "EmitStatement",
												"src": "8737:61:0"
											}
										]
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "8215:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8234:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8226:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "8256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8239:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 642,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 643,
													"nodeType": "ArrayTypeName",
													"src": "8239:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "8279:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8262:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 645,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 646,
													"nodeType": "ArrayTypeName",
													"src": "8262:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8302:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8289:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8289:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8225:83:0"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8325:0:0"
									},
									"scope": 884,
									"src": "8206:599:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "8887:384:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "8905:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 736,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8914:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8914:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8905:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a63616e206e6f74206275726e2066726f6d207a65726f2061646472657373",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8926:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ca884b467e3aa954ee7e5a39a461aff517c6203442a2755fc2be3ba236e7bf3",
																"typeString": "literal_string \"ERC1155:can not burn from zero address\""
															},
															"value": "ERC1155:can not burn from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ca884b467e3aa954ee7e5a39a461aff517c6203442a2755fc2be3ba236e7bf3",
																"typeString": "literal_string \"ERC1155:can not burn from zero address\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8897:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "8897:70:0"
											},
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8985:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "8977:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 744,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"expression": {
														"id": 746,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8996:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8977:29:0"
											},
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "9024:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "9016:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 751,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "9038:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 753,
														"indexExpression": {
															"id": 752,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "9047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9038:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 755,
													"indexExpression": {
														"id": 754,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "9052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9038:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9016:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 758,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "9076:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 759,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "9091:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9076:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a6275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9100:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6141398645c447a212a105857be8c9151aba4cd8b7fa1d9c1b67e5c5529ff281",
																"typeString": "literal_string \"ERC1155:burn amount exceeds balance\""
															},
															"value": "ERC1155:burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6141398645c447a212a105857be8c9151aba4cd8b7fa1d9c1b67e5c5529ff281",
																"typeString": "literal_string \"ERC1155:burn amount exceeds balance\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9068:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "9068:70:0"
											},
											{
												"expression": {
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 764,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "9148:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 767,
															"indexExpression": {
																"id": 765,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "9157:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9148:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 768,
														"indexExpression": {
															"id": 766,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "9162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9148:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 769,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "9171:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 770,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "9185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9171:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9148:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "9148:44:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 775,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "9222:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "9232:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9247:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9239:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9239:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9239:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "9251:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 782,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "9256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "9207:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9207:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "9202:62:0"
											}
										]
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8820:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "8834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "8826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "8849:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "8841:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8862:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "8854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8825:45:0"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8887:0:0"
									},
									"scope": 884,
									"src": "8811:460:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "9378:627:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "9396:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9413:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9405:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9405:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9396:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a63616e206e6f74206275726e2066726f6d207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9417:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ca884b467e3aa954ee7e5a39a461aff517c6203442a2755fc2be3ba236e7bf3",
																"typeString": "literal_string \"ERC1155:can not burn from zero address\""
															},
															"value": "ERC1155:can not burn from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ca884b467e3aa954ee7e5a39a461aff517c6203442a2755fc2be3ba236e7bf3",
																"typeString": "literal_string \"ERC1155:can not burn from zero address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9388:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "9388:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 808,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "9476:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9476:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 810,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "9491:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9491:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9476:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9508:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9468:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "9468:83:0"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9569:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "9561:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 816,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9561:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"expression": {
														"id": 818,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9580:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9580:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9561:29:0"
											},
											{
												"body": {
													"id": 869,
													"nodeType": "Block",
													"src": "9639:287:0",
													"statements": [
														{
															"assignments": [
																833
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 833,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "9661:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 869,
																	"src": "9653:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 832,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9653:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 837,
															"initialValue": {
																"baseExpression": {
																	"id": 834,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "9666:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 836,
																"indexExpression": {
																	"id": 835,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "9671:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9666:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9653:20:0"
														},
														{
															"assignments": [
																839
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 839,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "9695:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 869,
																	"src": "9687:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9687:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 843,
															"initialValue": {
																"baseExpression": {
																	"id": 840,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "9704:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 842,
																"indexExpression": {
																	"id": 841,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "9713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9687:28:0"
														},
														{
															"assignments": [
																845
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 845,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "9737:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 869,
																	"src": "9729:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 844,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 851,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 846,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "9751:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 848,
																	"indexExpression": {
																		"id": 847,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "9760:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9751:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 850,
																"indexExpression": {
																	"id": 849,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "9764:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9751:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9729:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 853,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "9792:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 854,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "9807:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9792:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a6261746368206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9815:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a1739982facbfcbf87a34b9af560f7e3e722023be625191ce894c319a8144a9b",
																			"typeString": "literal_string \"ERC1155:batch burn amount exceeds balance\""
																		},
																		"value": "ERC1155:batch burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a1739982facbfcbf87a34b9af560f7e3e722023be625191ce894c319a8144a9b",
																			"typeString": "literal_string \"ERC1155:batch burn amount exceeds balance\""
																		}
																	],
																	"id": 852,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9784:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9784:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "9784:75:0"
														},
														{
															"expression": {
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 859,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "9873:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 862,
																		"indexExpression": {
																			"id": 860,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "9882:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9873:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 863,
																	"indexExpression": {
																		"id": 861,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "9886:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9873:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 864,
																		"name": "fromBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "9895:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 865,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "9909:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9895:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9873:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 868,
															"nodeType": "ExpressionStatement",
															"src": "9873:42:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "9617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 826,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "9621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9621:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9617:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"initializationExpression": {
													"assignments": [
														822
													],
													"declarations": [
														{
															"constant": false,
															"id": 822,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9610:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 870,
															"src": "9605:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 821,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9605:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 824,
													"initialValue": {
														"hexValue": "30",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9605:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9634:3:0",
														"subExpression": {
															"id": 829,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "9634:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 831,
													"nodeType": "ExpressionStatement",
													"src": "9634:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9600:326:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 872,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "9954:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "9964:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9971:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9971:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9971:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "9983:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 879,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "9989:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 871,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "9940:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9940:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "EmitStatement",
												"src": "9935:63:0"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "9286:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "9305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "9297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "9329:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "9312:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9312:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 790,
													"nodeType": "ArrayTypeName",
													"src": "9312:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "9352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "9335:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 792,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 793,
													"nodeType": "ArrayTypeName",
													"src": "9335:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9296:65:0"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9378:0:0"
									},
									"scope": 884,
									"src": "9277:728:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 885,
							"src": "277:9731:0",
							"usedErrors": []
						}
					],
					"src": "51:9957:0"
				},
				"id": 0
			},
			"erc1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "erc1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1006
						],
						"IERC165": [
							1403
						]
					},
					"id": 1007,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "erc721/IERC165.sol",
							"file": "../erc721/IERC165.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 1404,
							"src": "135:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 889,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "356:7:1"
									},
									"id": 890,
									"nodeType": "InheritanceSpecifier",
									"src": "356:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 888,
								"nodeType": "StructuredDocumentation",
								"src": "168:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1006,
							"linearizedBaseContracts": [
								1006,
								1403
							],
							"name": "IERC1155",
							"nameLocation": "344:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "370:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 903,
									"name": "TransferSingle",
									"nameLocation": "502:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "533:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "517:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "559:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "543:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "581:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "565:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "593:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "585:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "605:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "597:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:95:1"
									},
									"src": "496:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "618:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 918,
									"name": "TransferBatch",
									"nameLocation": "773:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "812:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "796:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "846:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "830:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "876:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "860:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "898:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "888:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 911,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 912,
													"nodeType": "ArrayTypeName",
													"src": "888:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "921:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "911:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 914,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 915,
													"nodeType": "ArrayTypeName",
													"src": "911:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:147:1"
									},
									"src": "767:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "940:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 927,
									"name": "ApprovalForAll",
									"nameLocation": "1098:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1129:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1113:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1154:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1138:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1164:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1164:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:66:1"
									},
									"src": "1092:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "1185:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 934,
									"name": "URI",
									"nameLocation": "1539:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1543:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 929,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1543:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1573:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1557:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:34:1"
									},
									"src": "1533:44:1"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1583:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1770:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1788:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1780:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1805:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1797:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1797:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:29:1"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1832:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:9:1"
									},
									"scope": 1006,
									"src": "1761:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1847:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2049:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2083:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2064:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 946,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2064:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 947,
													"nodeType": "ArrayTypeName",
													"src": "2064:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2112:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2093:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 949,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2093:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 950,
													"nodeType": "ArrayTypeName",
													"src": "2093:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:53:1"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2164:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 953,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2164:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 954,
													"nodeType": "ArrayTypeName",
													"src": "2164:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:18:1"
									},
									"scope": 1006,
									"src": "2040:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "2188:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2450:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2476:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "2468:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2491:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "2486:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2467:33:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2509:0:1"
									},
									"scope": 1006,
									"src": "2441:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "2516:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2665:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2690:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2682:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2707:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2699:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:35:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2740:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:6:1"
									},
									"scope": 1006,
									"src": "2656:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2752:556:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3322:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3356:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3348:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3378:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3370:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3370:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3398:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3390:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3418:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3410:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3449:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3434:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3434:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:121:1"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3468:0:1"
									},
									"scope": 1006,
									"src": "3313:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "3475:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3879:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3918:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3910:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3940:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3932:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3971:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3952:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 995,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3952:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 996,
													"nodeType": "ArrayTypeName",
													"src": "3952:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4003:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3984:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 998,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3984:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 999,
													"nodeType": "ArrayTypeName",
													"src": "3984:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4035:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "4020:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4020:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3900:145:1"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4054:0:1"
									},
									"scope": 1006,
									"src": "3870:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1007,
							"src": "334:3723:1",
							"usedErrors": []
						}
					],
					"src": "110:3947:1"
				},
				"id": 1
			},
			"erc1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "erc1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1047
						],
						"IERC165": [
							1403
						]
					},
					"id": 1048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1008,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "erc721/IERC165.sol",
							"file": "../erc721/IERC165.sol",
							"id": 1009,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 1404,
							"src": "143:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1011,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "246:7:2"
									},
									"id": 1012,
									"nodeType": "InheritanceSpecifier",
									"src": "246:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1010,
								"nodeType": "StructuredDocumentation",
								"src": "176:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1047,
							"linearizedBaseContracts": [
								1047,
								1403
							],
							"name": "IERC1155Receiver",
							"nameLocation": "226:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "260:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1100:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1135:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1127:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1161:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1153:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1203:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1195:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1231:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1218:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1218:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:124:2"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1260:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1260:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:8:2"
									},
									"scope": 1047,
									"src": "1091:177:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "1274:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2282:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2322:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2314:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2348:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2340:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2379:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2362:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1034,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2362:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1035,
													"nodeType": "ArrayTypeName",
													"src": "2362:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2409:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2392:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2392:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "2392:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2438:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2425:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2425:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:144:2"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2467:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:8:2"
									},
									"scope": 1047,
									"src": "2273:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1048,
							"src": "216:2261:2",
							"usedErrors": []
						}
					],
					"src": "118:2359:2"
				},
				"id": 2
			},
			"erc1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "erc1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1006
						],
						"IERC1155MetadataURI": [
							1062
						],
						"IERC165": [
							1403
						]
					},
					"id": 1063,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1049,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": "erc1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1007,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1052,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1006,
										"src": "397:8:3"
									},
									"id": 1053,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1062,
							"linearizedBaseContracts": [
								1062,
								1006,
								1403
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1062,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1063,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:557:3"
				},
				"id": 3
			},
			"erc721/Address.sol": {
				"ast": {
					"absolutePath": "erc721/Address.sol",
					"exportedSymbols": {
						"Address": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1064,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1065,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1073,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1078,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1392,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "2482:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1091,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2508:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1392",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1392",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2500:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1089,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2500:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2500:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2500:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1094,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "2525:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2500:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2533:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2492:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "2492:73:4"
											},
											{
												"assignments": [
													1100,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2582:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1113,
														"src": "2577:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1099,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2577:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1107,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2625:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1101,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "2595:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2595:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1103,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "2617:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2595:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2576:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "2646:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2655:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2638:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2638:78:4"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1501:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2420:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2446:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2430:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2465:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2457:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:43:4"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:0:4"
									},
									"scope": 1392,
									"src": "2411:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "3554:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1125,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "3593:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "3601:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3607:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1124,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1172,
															1216
														],
														"referencedDeclaration": 1216,
														"src": "3571:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3571:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1130,
												"nodeType": "Return",
												"src": "3564:79:4"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "2729:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3474:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3495:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3487:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3516:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3503:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3503:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:35:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3540:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3540:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3539:14:4"
									},
									"scope": 1392,
									"src": "3465:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "4019:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1145,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4058:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4066:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1148,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4075:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1144,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1172,
															1216
														],
														"referencedDeclaration": 1216,
														"src": "4036:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1150,
												"nodeType": "Return",
												"src": "4029:59:4"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3903:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3927:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3954:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:4"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "4005:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:4"
									},
									"scope": 1392,
									"src": "3872:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "4600:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "4639:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4647:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1167,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1164,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1172,
															1216
														],
														"referencedDeclaration": 1216,
														"src": "4617:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1170,
												"nodeType": "Return",
												"src": "4610:94:4"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4497:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4521:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4548:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:4"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4586:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:4"
									},
									"scope": 1392,
									"src": "4457:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "5138:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1392",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1392",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1192,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "5181:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:4"
											},
											{
												"assignments": [
													1198,
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5245:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "5240:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5240:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5267:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "5254:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1199,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5254:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"id": 1205,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "5307:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1201,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "5281:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5281:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1203,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "5300:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5281:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5281:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5239:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "5356:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "5364:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1211,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5373:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1212,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5385:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1208,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "5329:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5329:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1214,
												"nodeType": "Return",
												"src": "5322:76:4"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "5023:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "5050:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "5073:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:4"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "5124:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:4"
									},
									"scope": 1392,
									"src": "4959:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "5682:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1227,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "5718:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1228,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "5726:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5732:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1226,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1233,
															1262
														],
														"referencedDeclaration": 1262,
														"src": "5699:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5699:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1225,
												"id": 1231,
												"nodeType": "Return",
												"src": "5692:80:4"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "5411:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5591:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5618:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "5610:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5610:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5639:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "5626:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5626:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5609:35:4"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "5668:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5667:14:4"
									},
									"scope": 1392,
									"src": "5582:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "6121:168:4",
										"statements": [
											{
												"assignments": [
													1246,
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6137:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1261,
														"src": "6132:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6132:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6159:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1261,
														"src": "6146:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6146:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"id": 1251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "6191:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "6173:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6173:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6131:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "6240:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "6248:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "6257:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "6269:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1254,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "6213:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6213:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1260,
												"nodeType": "Return",
												"src": "6206:76:4"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "5785:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5972:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "6000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "6024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6065:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "6051:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6051:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:93:4"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "6107:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6107:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6106:14:4"
									},
									"scope": 1392,
									"src": "5963:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "6565:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "6603:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "6611:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6617:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1272,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1279,
															1308
														],
														"referencedDeclaration": 1308,
														"src": "6582:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6582:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1277,
												"nodeType": "Return",
												"src": "6575:84:4"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "6295:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6477:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "6498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6527:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "6514:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6514:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6497:35:4"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6551:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6550:14:4"
									},
									"scope": 1392,
									"src": "6468:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "7007:170:4",
										"statements": [
											{
												"assignments": [
													1292,
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7023:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "7018:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1291,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7018:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7045:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "7032:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1293,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7032:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"arguments": [
														{
															"id": 1297,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7079:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1295,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7059:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7059:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7017:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7128:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "7136:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1303,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "7145:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1304,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "7157:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1300,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "7101:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7101:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1306,
												"nodeType": "Return",
												"src": "7094:76:4"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "6672:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6861:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6928:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6915:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6915:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6956:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6942:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6942:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6881:93:4"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6993:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6992:14:4"
									},
									"scope": 1392,
									"src": "6852:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "7659:434:4",
										"statements": [
											{
												"condition": {
													"id": 1322,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1313,
													"src": "7673:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1344,
													"nodeType": "Block",
													"src": "8029:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1340,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "8051:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1341,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "8063:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1339,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "8043:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8043:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "8043:33:4"
														}
													]
												},
												"id": 1345,
												"nodeType": "IfStatement",
												"src": "7669:418:4",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "7682:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1323,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7700:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7700:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7721:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7700:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1335,
															"nodeType": "IfStatement",
															"src": "7696:286:4",
															"trueBody": {
																"id": 1334,
																"nodeType": "Block",
																"src": "7724:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1329,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1311,
																							"src": "7926:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1328,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1080,
																						"src": "7915:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7915:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7935:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1327,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7907:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7907:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1333,
																		"nodeType": "ExpressionStatement",
																		"src": "7907:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1336,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "8002:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1321,
															"id": 1337,
															"nodeType": "Return",
															"src": "7995:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "7183:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7474:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7518:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7510:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7539:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7534:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7534:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7569:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7556:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7556:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7603:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7589:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7589:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7500:121:4"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "7645:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7645:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:14:4"
									},
									"scope": 1392,
									"src": "7465:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "8474:135:4",
										"statements": [
											{
												"condition": {
													"id": 1359,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1350,
													"src": "8488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "8545:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1364,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "8567:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1365,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "8579:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1363,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "8559:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8559:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1367,
															"nodeType": "ExpressionStatement",
															"src": "8559:33:4"
														}
													]
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "8484:119:4",
												"trueBody": {
													"id": 1362,
													"nodeType": "Block",
													"src": "8497:42:4",
													"statements": [
														{
															"expression": {
																"id": 1360,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "8518:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1358,
															"id": 1361,
															"nodeType": "Return",
															"src": "8511:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "8099:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8323:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8354:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "8349:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8349:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8384:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "8371:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8371:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8418:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "8404:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8404:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8339:97:4"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "8460:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8460:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8459:14:4"
									},
									"scope": 1392,
									"src": "8314:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "8698:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1378,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "8774:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8774:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8794:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8774:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1388,
													"nodeType": "Block",
													"src": "9104:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1385,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "9125:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1384,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9118:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9118:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1387,
															"nodeType": "ExpressionStatement",
															"src": "9118:20:4"
														}
													]
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "8770:379:4",
												"trueBody": {
													"id": 1383,
													"nodeType": "Block",
													"src": "8797:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8955:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8973:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9002:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8996:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8996:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8977:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9041:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9045:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9037:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9037:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9058:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9030:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9030:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1373,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9002:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1373,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9045:10:4",
																	"valueSize": 1
																}
															],
															"id": 1382,
															"nodeType": "InlineAssembly",
															"src": "8946:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8624:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8645:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "8632:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8632:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8671:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "8657:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8631:53:4"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8698:0:4"
									},
									"scope": 1392,
									"src": "8615:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1393,
							"src": "194:8963:4",
							"usedErrors": []
						}
					],
					"src": "101:9056:4"
				},
				"id": 4
			},
			"erc721/IERC165.sol": {
				"ast": {
					"absolutePath": "erc721/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1403
						]
					},
					"id": 1404,
					"license": "SEE LICENSE IN LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1403,
							"linearizedBaseContracts": [
								1403
							],
							"name": "IERC165",
							"nameLocation": "85:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "104:312:5",
										"text": " EIP-165:Standard Interface Detection.检验某个合约有没有实现该接口。如何校验呢？\n The interface identifier for this interface is 0x01ffc9a7. You can calculate this by running bytes4(keccak256('supportsInterface(bytes4)'));\n or using the Selector contract above."
									},
									"functionSelector": "01ffc9a7",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "430:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "455:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "448:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:20:5"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "491:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "491:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:6:5"
									},
									"scope": 1403,
									"src": "421:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1404,
							"src": "75:424:5",
							"usedErrors": []
						}
					],
					"src": "51:448:5"
				},
				"id": 5
			},
			"erc721/Math.sol": {
				"ast": {
					"absolutePath": "erc721/Math.sol",
					"exportedSymbols": {
						"Math": [
							2268
						]
					},
					"id": 2269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1406,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2268,
							"linearizedBaseContracts": [
								2268
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1410,
									"members": [
										{
											"id": 1407,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 1408,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 1409,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1420,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1421,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1424,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 1423,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1426,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 2268,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1438,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1439,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1442,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 1441,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1444,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 2268,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1456,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1457,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1459,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1460,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1461,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1463,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1467,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 2268,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1479,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1483,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1486,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1487,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1492,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 2268,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "1795:3797:6",
										"statements": [
											{
												"id": 1614,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:6",
												"statements": [
													{
														"assignments": [
															1507
														],
														"declarations": [
															{
																"constant": false,
																"id": 1507,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1614,
																"src": "2126:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1508,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:6"
													},
													{
														"assignments": [
															1510
														],
														"declarations": [
															{
																"constant": false,
																"id": 1510,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1614,
																"src": "2198:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1511,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1510,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1497,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1497,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1499,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1499,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:6",
																"valueSize": 1
															}
														],
														"id": 1512,
														"nodeType": "InlineAssembly",
														"src": "2269:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1513,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "2516:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1521,
														"nodeType": "IfStatement",
														"src": "2512:75:6",
														"trueBody": {
															"id": 1520,
															"nodeType": "Block",
															"src": "2528:59:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1516,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1507,
																			"src": "2553:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1517,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "2561:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1505,
																	"id": 1519,
																	"nodeType": "Return",
																	"src": "2546:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1523,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "2697:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1524,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "2711:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1522,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1527,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:6"
													},
													{
														"assignments": [
															1529
														],
														"declarations": [
															{
																"constant": false,
																"id": 1529,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1614,
																"src": "2973:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1530,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1501,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1510,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1510,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1529,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1529,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1529,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1497,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1499,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:6",
																"valueSize": 1
															}
														],
														"id": 1531,
														"nodeType": "InlineAssembly",
														"src": "3004:300:6"
													},
													{
														"assignments": [
															1533
														],
														"declarations": [
															{
																"constant": false,
																"id": 1533,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1614,
																"src": "3611:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1532,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1541,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "3626:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:6",
																			"subExpression": {
																				"id": 1535,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1501,
																				"src": "3642:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1539,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1501,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1501,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:6",
																"valueSize": 1
															}
														],
														"id": 1542,
														"nodeType": "InlineAssembly",
														"src": "3672:371:6"
													},
													{
														"expression": {
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1543,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "4109:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1544,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "4118:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1545,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "4126:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1548,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:6"
													},
													{
														"assignments": [
															1550
														],
														"declarations": [
															{
																"constant": false,
																"id": 1550,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1614,
																"src": "4448:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1557,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1552,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "4471:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1554,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:6"
													},
													{
														"expression": {
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1558,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "4704:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1560,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "4719:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1561,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "4733:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1565,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:6"
													},
													{
														"expression": {
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1566,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "4773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1568,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "4788:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1569,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "4802:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1573,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:6"
													},
													{
														"expression": {
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1574,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "4843:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1576,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "4858:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1577,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "4872:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1581,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:6"
													},
													{
														"expression": {
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1582,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "4913:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1584,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "4928:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1585,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "4942:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1589,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:6"
													},
													{
														"expression": {
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1590,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "4983:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1592,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "4998:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1593,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "5012:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1597,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:6"
													},
													{
														"expression": {
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1598,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "5054:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1600,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "5069:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1601,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "5083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1605,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:6"
													},
													{
														"expression": {
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1606,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "5524:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "5533:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1608,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "5541:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1611,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:6"
													},
													{
														"expression": {
															"id": 1612,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "5569:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1505,
														"id": 1613,
														"nodeType": "Return",
														"src": "5562:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1692:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1711:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1730:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:6"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:6"
									},
									"scope": 2268,
									"src": "1667:3925:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "5872:189:6",
										"statements": [
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "5882:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1638,
												"initialValue": {
													"arguments": [
														{
															"id": 1634,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "5906:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1635,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "5909:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1636,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "5912:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1616,
															1660
														],
														"referencedDeclaration": 1616,
														"src": "5899:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1410",
															"typeString": "enum Math.Rounding"
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1639,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "5938:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1410",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1640,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "5950:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1410_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "5950:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1410",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1644,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "5972:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1645,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "5975:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1646,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "5978:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1643,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "5934:98:6",
												"trueBody": {
													"id": 1655,
													"nodeType": "Block",
													"src": "5996:36:6",
													"statements": [
														{
															"expression": {
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1651,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "6010:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1654,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1657,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1632,
													"src": "6048:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1658,
												"nodeType": "Return",
												"src": "6041:13:6"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5749:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5787:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5816:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1410",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1624,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "5816:8:6"
													},
													"referencedDeclaration": 1410,
													"src": "5816:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1410",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:6"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5863:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:6"
									},
									"scope": 2268,
									"src": "5724:337:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "6337:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1668,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "6351:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "6347:45:6",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "6359:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1667,
															"id": 1672,
															"nodeType": "Return",
															"src": "6373:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "7071:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1685,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1679,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "7099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1678,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1940,
																			1976
																		],
																		"referencedDeclaration": 1940,
																		"src": "7094:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1683,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:6"
											},
											{
												"id": 1770,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:6",
												"statements": [
													{
														"expression": {
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1686,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7532:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1687,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7542:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1688,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7551:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1689,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7555:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1692,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1696,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:6"
													},
													{
														"expression": {
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1697,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7581:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1698,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7591:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1699,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7600:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1700,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7604:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1703,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1707,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:6"
													},
													{
														"expression": {
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1708,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7630:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1709,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7640:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1710,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7649:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1711,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7653:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1714,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1718,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:6"
													},
													{
														"expression": {
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1719,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7679:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1720,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7689:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1721,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7698:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1722,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7702:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1725,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1729,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:6"
													},
													{
														"expression": {
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1730,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7728:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1731,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7738:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1732,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7747:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1733,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7751:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1736,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1740,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:6"
													},
													{
														"expression": {
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1741,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1742,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7787:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1743,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7796:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1744,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7800:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1747,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1751,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:6"
													},
													{
														"expression": {
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1752,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7826:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1753,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7836:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1754,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7845:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1755,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "7849:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1758,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1762,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1764,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "7886:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1765,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "7894:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1766,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "7898:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1763,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "7882:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1667,
														"id": 1769,
														"nodeType": "Return",
														"src": "7875:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "6294:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:6"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "6328:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:6"
									},
									"scope": 2268,
									"src": "6280:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "8098:161:6",
										"statements": [
											{
												"id": 1806,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:6",
												"statements": [
													{
														"assignments": [
															1784
														],
														"declarations": [
															{
																"constant": false,
																"id": 1784,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1806,
																"src": "8132:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1788,
														"initialValue": {
															"arguments": [
																{
																	"id": 1786,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "8154:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1785,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1772,
																	1808
																],
																"referencedDeclaration": 1772,
																"src": "8149:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1789,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "8177:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1410",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1790,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1778,
																					"src": "8187:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1791,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1410,
																						"src": "8199:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1410_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1408,
																					"src": "8199:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1796,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1794,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1784,
																						"src": "8214:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1795,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1784,
																						"src": "8223:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1797,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1775,
																					"src": "8232:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1803,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1782,
														"id": 1805,
														"nodeType": "Return",
														"src": "8170:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "8036:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "8047:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1410",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1777,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1776,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "8047:8:6"
													},
													"referencedDeclaration": 1410,
													"src": "8047:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1410",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:6"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "8089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:6"
									},
									"scope": 2268,
									"src": "8022:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "8444:922:6",
										"statements": [
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "8454:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1819,
												"initialValue": {
													"hexValue": "30",
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:6"
											},
											{
												"id": 1936,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1820,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "8510:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1834,
														"nodeType": "IfStatement",
														"src": "8506:99:6",
														"trueBody": {
															"id": 1833,
															"nodeType": "Block",
															"src": "8528:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "8546:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1828,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:6"
																},
																{
																	"expression": {
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1829,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "8577:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1832,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1835,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "8622:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1849,
														"nodeType": "IfStatement",
														"src": "8618:96:6",
														"trueBody": {
															"id": 1848,
															"nodeType": "Block",
															"src": "8639:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1840,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "8657:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1843,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:6"
																},
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1844,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "8687:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1850,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "8731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1864,
														"nodeType": "IfStatement",
														"src": "8727:96:6",
														"trueBody": {
															"id": 1863,
															"nodeType": "Block",
															"src": "8748:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1855,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "8766:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1858,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:6"
																},
																{
																	"expression": {
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "8796:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1865,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "8840:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1879,
														"nodeType": "IfStatement",
														"src": "8836:96:6",
														"trueBody": {
															"id": 1878,
															"nodeType": "Block",
															"src": "8857:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1870,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "8875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1873,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:6"
																},
																{
																	"expression": {
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1874,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "8905:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1877,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1880,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "8949:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1894,
														"nodeType": "IfStatement",
														"src": "8945:93:6",
														"trueBody": {
															"id": 1893,
															"nodeType": "Block",
															"src": "8965:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1885,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "8983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1888,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:6"
																},
																{
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "9012:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1892,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1895,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "9055:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "9051:93:6",
														"trueBody": {
															"id": 1908,
															"nodeType": "Block",
															"src": "9071:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "9089:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1903,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:6"
																},
																{
																	"expression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1904,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "9118:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1907,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1910,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "9161:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1924,
														"nodeType": "IfStatement",
														"src": "9157:93:6",
														"trueBody": {
															"id": 1923,
															"nodeType": "Block",
															"src": "9177:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1915,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "9195:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1918,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:6"
																},
																{
																	"expression": {
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1919,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "9224:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1922,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "9267:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1935,
														"nodeType": "IfStatement",
														"src": "9263:64:6",
														"trueBody": {
															"id": 1934,
															"nodeType": "Block",
															"src": "9283:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1930,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "9301:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1933,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1937,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1817,
													"src": "9353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1938,
												"nodeType": "Return",
												"src": "9346:13:6"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "8397:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:6"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "8435:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:6"
									},
									"scope": 2268,
									"src": "8383:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "9599:165:6",
										"statements": [
											{
												"id": 1974,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:6",
												"statements": [
													{
														"assignments": [
															1952
														],
														"declarations": [
															{
																"constant": false,
																"id": 1952,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1974,
																"src": "9633:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1951,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1956,
														"initialValue": {
															"arguments": [
																{
																	"id": 1954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "9655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1953,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1940,
																	1976
																],
																"referencedDeclaration": 1940,
																"src": "9650:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1957,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "9682:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1410",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1958,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1946,
																					"src": "9692:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1959,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1410,
																						"src": "9704:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1410_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1408,
																					"src": "9704:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1964,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1962,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1963,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1952,
																						"src": "9724:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1965,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1943,
																					"src": "9733:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1971,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1950,
														"id": 1973,
														"nodeType": "Return",
														"src": "9675:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "9533:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "9548:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1410",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1944,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "9548:8:6"
													},
													"referencedDeclaration": 1410,
													"src": "9548:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1410",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:6"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "9590:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:6"
									},
									"scope": 2268,
									"src": "9519:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "9951:828:6",
										"statements": [
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2104,
														"src": "9961:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"hexValue": "30",
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:6"
											},
											{
												"id": 2101,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1988,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10017:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2004,
														"nodeType": "IfStatement",
														"src": "10013:99:6",
														"trueBody": {
															"id": 2003,
															"nodeType": "Block",
															"src": "10034:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1993,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10052:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1998,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:6"
																},
																{
																	"expression": {
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1999,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10085:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2002,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2005,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10129:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2021,
														"nodeType": "IfStatement",
														"src": "10125:99:6",
														"trueBody": {
															"id": 2020,
															"nodeType": "Block",
															"src": "10146:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10164:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2015,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:6"
																},
																{
																	"expression": {
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2016,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10197:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2019,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2022,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10241:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2038,
														"nodeType": "IfStatement",
														"src": "10237:99:6",
														"trueBody": {
															"id": 2037,
															"nodeType": "Block",
															"src": "10258:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2027,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10276:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2032,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:6"
																},
																{
																	"expression": {
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2033,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10309:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2036,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2039,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10353:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2055,
														"nodeType": "IfStatement",
														"src": "10349:96:6",
														"trueBody": {
															"id": 2054,
															"nodeType": "Block",
															"src": "10369:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2044,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10387:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2049,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:6"
																},
																{
																	"expression": {
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2050,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10419:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2053,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2056,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10462:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2072,
														"nodeType": "IfStatement",
														"src": "10458:96:6",
														"trueBody": {
															"id": 2071,
															"nodeType": "Block",
															"src": "10478:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2061,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10496:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2066,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:6"
																},
																{
																	"expression": {
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2067,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10528:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2070,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2073,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10571:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2089,
														"nodeType": "IfStatement",
														"src": "10567:96:6",
														"trueBody": {
															"id": 2088,
															"nodeType": "Block",
															"src": "10587:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2078,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10605:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2083,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:6"
																},
																{
																	"expression": {
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2084,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10637:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2087,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2090,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "10680:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2100,
														"nodeType": "IfStatement",
														"src": "10676:64:6",
														"trueBody": {
															"id": 2099,
															"nodeType": "Block",
															"src": "10696:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2095,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "10714:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2098,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2102,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1985,
													"src": "10766:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1983,
												"id": 2103,
												"nodeType": "Return",
												"src": "10759:13:6"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "9904:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:6"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "9942:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:6"
									},
									"scope": 2268,
									"src": "9889:890:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "11014:165:6",
										"statements": [
											{
												"id": 2139,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:6",
												"statements": [
													{
														"assignments": [
															2117
														],
														"declarations": [
															{
																"constant": false,
																"id": 2117,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "11048:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2116,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2121,
														"initialValue": {
															"arguments": [
																{
																	"id": 2119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "11071:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2118,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2105,
																	2141
																],
																"referencedDeclaration": 2105,
																"src": "11065:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "11098:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1410",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2123,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2111,
																					"src": "11108:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2124,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1410,
																						"src": "11120:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1410_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1408,
																					"src": "11120:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2128,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2117,
																						"src": "11139:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2130,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2108,
																					"src": "11148:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2115,
														"id": 2138,
														"nodeType": "Return",
														"src": "11091:71:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "10948:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "10963:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1410",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2109,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "10963:8:6"
													},
													"referencedDeclaration": 1410,
													"src": "10963:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1410",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:6"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "11005:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:6"
									},
									"scope": 2268,
									"src": "10933:246:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "11493:600:6",
										"statements": [
											{
												"assignments": [
													2150
												],
												"declarations": [
													{
														"constant": false,
														"id": 2150,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "11503:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"hexValue": "30",
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:6"
											},
											{
												"id": 2224,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2153,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "11559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "11555:98:6",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "11577:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2158,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "11595:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2161,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:6"
																},
																{
																	"expression": {
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2162,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "11626:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2165,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "11670:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2182,
														"nodeType": "IfStatement",
														"src": "11666:95:6",
														"trueBody": {
															"id": 2181,
															"nodeType": "Block",
															"src": "11687:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2173,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "11705:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2176,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:6"
																},
																{
																	"expression": {
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "11735:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2180,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "11778:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2197,
														"nodeType": "IfStatement",
														"src": "11774:95:6",
														"trueBody": {
															"id": 2196,
															"nodeType": "Block",
															"src": "11795:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2188,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "11813:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:6"
																},
																{
																	"expression": {
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "11843:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2195,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2198,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "11886:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2212,
														"nodeType": "IfStatement",
														"src": "11882:95:6",
														"trueBody": {
															"id": 2211,
															"nodeType": "Block",
															"src": "11903:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "11921:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2206,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:6"
																},
																{
																	"expression": {
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2207,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "11951:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2210,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "11994:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2223,
														"nodeType": "IfStatement",
														"src": "11990:64:6",
														"trueBody": {
															"id": 2222,
															"nodeType": "Block",
															"src": "12010:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2218,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "12028:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2221,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2225,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2150,
													"src": "12080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2148,
												"id": 2226,
												"nodeType": "Return",
												"src": "12073:13:6"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "11446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:6"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "11484:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:6"
									},
									"scope": 2268,
									"src": "11430:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "12329:174:6",
										"statements": [
											{
												"id": 2265,
												"nodeType": "UncheckedBlock",
												"src": "12339:158:6",
												"statements": [
													{
														"assignments": [
															2240
														],
														"declarations": [
															{
																"constant": false,
																"id": 2240,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2265,
																"src": "12363:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2244,
														"initialValue": {
															"arguments": [
																{
																	"id": 2242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2231,
																	"src": "12387:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2241,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2228,
																	2267
																],
																"referencedDeclaration": 2228,
																"src": "12380:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "12414:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1410",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2246,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "12424:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2247,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1410,
																						"src": "12436:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1410_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1408,
																					"src": "12436:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1410",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2250,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2253,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2251,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2240,
																									"src": "12457:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2252,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12467:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12457:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2254,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2256,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2231,
																					"src": "12472:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:53:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12484:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:61:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12480:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2262,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2238,
														"id": 2264,
														"nodeType": "Return",
														"src": "12407:79:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "12263:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "12278:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1410",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2232,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "12278:8:6"
													},
													"referencedDeclaration": 1410,
													"src": "12278:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1410",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:6"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "12320:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:6"
									},
									"scope": 2268,
									"src": "12247:256:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2269,
							"src": "202:12303:6",
							"usedErrors": []
						}
					],
					"src": "103:12402:6"
				},
				"id": 6
			},
			"erc721/Strings.sol": {
				"ast": {
					"absolutePath": "erc721/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2268
						],
						"Strings": [
							2443
						]
					},
					"id": 2444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"absolutePath": "erc721/Math.sol",
							"file": "./Math.sol",
							"id": 2271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2444,
							"sourceUnit": 2269,
							"src": "126:20:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2272,
								"nodeType": "StructuredDocumentation",
								"src": "148:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2443,
							"linearizedBaseContracts": [
								2443
							],
							"name": "Strings",
							"nameLocation": "191:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2275,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "230:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2443,
									"src": "205:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2273,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "205:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2274,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2278,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "288:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2443,
									"src": "265:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2276,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "265:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "306:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "481:625:7",
										"statements": [
											{
												"id": 2324,
												"nodeType": "UncheckedBlock",
												"src": "491:609:7",
												"statements": [
													{
														"assignments": [
															2287
														],
														"declarations": [
															{
																"constant": false,
																"id": 2287,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "523:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "515:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "515:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2294,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2290,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2281,
																		"src": "543:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2288,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "532:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2268_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2105,
																	"src": "532:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "532:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "552:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "532:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "515:38:7"
													},
													{
														"assignments": [
															2296
														],
														"declarations": [
															{
																"constant": false,
																"id": 2296,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "581:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "567:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2295,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "567:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2301,
														"initialValue": {
															"arguments": [
																{
																	"id": 2299,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2287,
																	"src": "601:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "590:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2297,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "594:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "590:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "567:41:7"
													},
													{
														"assignments": [
															2303
														],
														"declarations": [
															{
																"constant": false,
																"id": 2303,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "630:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "622:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2302,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "622:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2304,
														"nodeType": "VariableDeclarationStatement",
														"src": "622:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "703:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "721:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "732:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "744:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "748:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "740:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "740:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "728:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "728:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2296,
																"isOffset": false,
																"isSlot": false,
																"src": "732:6:7",
																"valueSize": 1
															},
															{
																"declaration": 2287,
																"isOffset": false,
																"isSlot": false,
																"src": "748:6:7",
																"valueSize": 1
															},
															{
																"declaration": 2303,
																"isOffset": false,
																"isSlot": false,
																"src": "721:3:7",
																"valueSize": 1
															}
														],
														"id": 2305,
														"nodeType": "InlineAssembly",
														"src": "694:76:7"
													},
													{
														"body": {
															"id": 2320,
															"nodeType": "Block",
															"src": "796:267:7",
															"statements": [
																{
																	"expression": {
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "814:5:7",
																		"subExpression": {
																			"id": 2307,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2303,
																			"src": "814:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2309,
																	"nodeType": "ExpressionStatement",
																	"src": "814:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "897:84:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "927:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "941:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "948:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "937:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "937:14:7"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "953:8:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "932:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "932:30:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "919:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:44:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "919:44:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 2275,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "953:8:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2303,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "927:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2281,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "941:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 2310,
																	"nodeType": "InlineAssembly",
																	"src": "888:93:7"
																},
																{
																	"expression": {
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2281,
																			"src": "998:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1007:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "998:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2314,
																	"nodeType": "ExpressionStatement",
																	"src": "998:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2281,
																			"src": "1031:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1040:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1031:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2319,
																	"nodeType": "IfStatement",
																	"src": "1027:21:7",
																	"trueBody": {
																		"id": 2318,
																		"nodeType": "Break",
																		"src": "1043:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "790:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2321,
														"nodeType": "WhileStatement",
														"src": "783:280:7"
													},
													{
														"expression": {
															"id": 2322,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "1083:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2285,
														"id": 2323,
														"nodeType": "Return",
														"src": "1076:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "315:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "419:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "436:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "428:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:15:7"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "466:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "466:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:15:7"
									},
									"scope": 2443,
									"src": "410:696:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "1285:100:7",
										"statements": [
											{
												"id": 2344,
												"nodeType": "UncheckedBlock",
												"src": "1295:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2335,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2329,
																	"src": "1338:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2338,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2329,
																				"src": "1357:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2336,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2268,
																				"src": "1345:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2268_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2228,
																			"src": "1345:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1345:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1345:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2334,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2346,
																	2422,
																	2442
																],
																"referencedDeclaration": 2422,
																"src": "1326:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1326:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2333,
														"id": 2343,
														"nodeType": "Return",
														"src": "1319:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "1112:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1220:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1240:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1232:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:15:7"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1270:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1270:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:15:7"
									},
									"scope": 2443,
									"src": "1211:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2421,
										"nodeType": "Block",
										"src": "1598:347:7",
										"statements": [
											{
												"assignments": [
													2357
												],
												"declarations": [
													{
														"constant": false,
														"id": 2357,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1621:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2421,
														"src": "1608:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2356,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1608:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1640:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2361,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "1644:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1640:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1653:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1640:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1630:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2358,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1634:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1608:47:7"
											},
											{
												"expression": {
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2367,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "1665:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2369,
														"indexExpression": {
															"hexValue": "30",
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1665:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1677:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1665:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "1665:15:7"
											},
											{
												"expression": {
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2373,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "1690:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2375,
														"indexExpression": {
															"hexValue": "31",
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1697:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1690:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1702:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1690:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "1690:15:7"
											},
											{
												"body": {
													"id": 2407,
													"nodeType": "Block",
													"src": "1760:83:7",
													"statements": [
														{
															"expression": {
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2393,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2357,
																		"src": "1774:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2395,
																	"indexExpression": {
																		"id": 2394,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "1781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1774:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2396,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2275,
																		"src": "1786:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2400,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "1795:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1803:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1795:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1786:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1774:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2402,
															"nodeType": "ExpressionStatement",
															"src": "1774:33:7"
														},
														{
															"expression": {
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2403,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2349,
																	"src": "1821:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1831:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1821:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2406,
															"nodeType": "ExpressionStatement",
															"src": "1821:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2387,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "1748:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1752:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1748:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2408,
												"initializationExpression": {
													"assignments": [
														2380
													],
													"declarations": [
														{
															"constant": false,
															"id": 2380,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1728:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2408,
															"src": "1720:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2379,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1720:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2386,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2382,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "1736:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1732:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1745:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1732:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1720:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1755:3:7",
														"subExpression": {
															"id": 2390,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "1757:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2392,
													"nodeType": "ExpressionStatement",
													"src": "1755:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1715:128:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2349,
																"src": "1860:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1869:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1860:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1872:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1852:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "1852:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2418,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "1931:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1924:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2416,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1924:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2355,
												"id": 2420,
												"nodeType": "Return",
												"src": "1917:21:7"
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "1391:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1517:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1537:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "1529:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1552:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "1544:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:31:7"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "1583:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1583:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:15:7"
									},
									"scope": 2443,
									"src": "1508:437:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "2170:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2435,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2425,
																			"src": "2215:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2207:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2433,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2207:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2207:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2199:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2199:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2438,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "2223:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2430,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2346,
															2422,
															2442
														],
														"referencedDeclaration": 2422,
														"src": "2187:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2187:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2429,
												"id": 2440,
												"nodeType": "Return",
												"src": "2180:59:7"
											}
										]
									},
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "1951:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2106:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2126:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "2118:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:14:7"
									},
									"returnParameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "2155:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2155:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:15:7"
									},
									"scope": 2443,
									"src": "2097:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2444,
							"src": "183:2065:7",
							"usedErrors": []
						}
					],
					"src": "101:2147:7"
				},
				"id": 7
			}
		}
	}
}