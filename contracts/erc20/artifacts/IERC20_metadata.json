{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "remaining",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"notice": "MUST trigger on any successful call to approve(address _spender, uint256 _value)."
				},
				"Transfer(address,address,uint256)": {
					"notice": "MUST trigger when tokens are transferred, including zero value transfers."
				}
			},
			"kind": "user",
			"methods": {
				"allowance(address,address)": {
					"notice": "Returns the amount which _spender is still allowed to withdraw from _owner. 返回_owner授权给_spender的额度"
				},
				"approve(address,uint256)": {
					"notice": "Allows _spender to withdraw from your account multiple times, up to the _value amount.  If this function is called again it overwrites the current allowance with _value. 授权"
				},
				"balanceOf(address)": {
					"notice": "Returns the account balance of another account with address _owner. 返回某个账户的当前代币余额"
				},
				"totalSupply()": {
					"notice": "Returns the total token supply. 返回总的代币数量"
				},
				"transfer(address,uint256)": {
					"notice": "Transfers _value amount of tokens to address _to, and MUST fire the Transfer event.  The function SHOULD throw if the message caller's account balance does not have enough tokens to spend. 转账函数"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfers _value amount of tokens from address _from to address _to, and MUST fire the Transfer event. The transferFrom method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.  This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.  The function SHOULD throw unless the _from account has deliberately authorized the sender of the message via some mechanism. Note Transfers of 0 values MUST be treated as normal transfers and fire the Transfer event. 授权转账"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"erc20/IERC20.sol": "IERC20"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"erc20/IERC20.sol": {
			"keccak256": "0x14981c5ddb303214bb150abb5db7cd9c2e8d5cad8b86998c3d9a0599c7562fc3",
			"license": "SEE LICENSE IN LICENSE",
			"urls": [
				"bzz-raw://ad837cd978159d5a826191c3cb5615d5e97757d2d5ca28e06ef831511a1eb08f",
				"dweb:/ipfs/QmVJqEH1b8Gp4KKbq6Njjj5ktv28idJfKqUfqSVkiGro95"
			]
		}
	},
	"version": 1
}